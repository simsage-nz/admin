{"version":3,"sources":["reducers/stateLoader.js","common/comms.js","common/api.js","actions/actions.js","reducers/appReducer.js","reducers/configureStore.js","theme-ui.js","auth/app-menu.js","common/error-dialog.js","common/graph-helper.js","actions/appActions.js","auth/sign_in.js","auth/reset_password_request.js","auth/reset_password_response.js","auth/open_source_licenses.js","auth/license_agreement.js","common/message-dialog.js","common/autocomplete.js","organisations/organisation-edit.js","common/restore-upload.js","organisations/organisations.js","users/user-manager.js","common/time-select.js","kb/knowledge-bases.js","inventory/inventory.js","crawlers/crawler-general.js","crawlers/crawler-file.js","crawlers/crawler-web.js","crawlers/crawler-database.js","crawlers/crawler-metadata-mapper.js","crawlers/crawler-office365.js","crawlers/crawler-dropbox.js","common/restore-wp-archive.js","crawlers/crawler-wordpress.js","crawlers/crawler-gdrive.js","crawlers/crawler-nfs.js","crawlers/crawler-restfull.js","crawlers/crawler-dialog.js","documents/crawler-import-export.js","documents/document-sources.js","documents/documents.js","mind/mind-edit.js","common/program-upload.js","mind/mind.js","common/bot-single-search-result.js","mind/mind-search-component.js","mind/mind-test.js","synonyms/synonym-edit.js","synonyms/synonyms.js","semantics/semantic-edit.js","semantics/semantics.js","synsets/synset-edit.js","synsets/synsets.js","reports/logs.js","reports/reports.js","operator/operator-teach.js","operator/operator-previous-answer.js","operator/operator.js","operator/operator_tabs.js","ad/domain_dialog.js","ad/domains.js","semantics/semantic-category-edit.js","semantics/semantic-categories.js","home.js","index.js"],"names":["initializeState","selected_tab","notification_list","show_notifications","operator_wait_timeout_in_ms","notification_list_display_size","selected_organisation_id","selected_organisation","organisation_filter","organisation_list","selected_knowledgebase","selected_knowledgebase_id","knowledge_base_list","inventorize_list","inventorize_busy","user_list","user_filter","crawler_list","busy","uploading","session","user","license","document_list","document_previous","document_filter","prev_document_filter","document_page","document_page_size","num_documents","document_nav_list","mind_item_list","mind_item_previous","mind_item_filter","mind_item_page","mind_item_page_size","num_mind_items","prev_mind_item_filter","mind_item_nav_list","bot_query","bot_query_result_list","bot_query_page_size","bot_query_threshold","synonym_list","synonym_prev_id","synonym_filter","synonym_page","synonym_page_size","num_synonyms","prev_synonym_filter","synonym_nav_list","semantic_list","semantic_prev_id","semantic_filter","semantic_page","semantic_page_size","num_semantics","prev_semantic_filter","semantic_nav_list","synset_filter","synset_list","synset_page","synset_page_size","synset_total_size","report_date","Api","toIsoDate","Date","report_num_items","access_frequency","labels","general_statistics","query_word_frequency","file_type_statistics","operators","createOperator","num_active_connections","operator_connected","html5_notifications","log_size","log_list","selected_log","active_components","domain_list","semantic_display_category_list","defined_semantic_list","error_title","error","loadState","serializedState","localStorage","getItem","window","location","href","endsWith","JSON","parse","err","clearState","state","removeItem","Comms","url","payload","fn_success","fn_fail","api_base","ENV","console","log","axios","post","getHeaders","then","response","catch","undefined","get_error","put","result","get","organisation_id","regime","getSession","encodeURIComponent","id","kb_id","dateTime","crawler_id","html","year","month","source_id","delete","str","indexOf","obj","a","getFullYear","getMonth","getDate","appReducer","headers","api_version","value","s4","Math","floor","random","toString","substring","createGuid","conversation_list","operator_ready","question_id","question","answer_id","answer","client_id","client_kb_id","client_kb_name","is_typing","typing_time","current_question","prev_answer","timestamp","date","hour","getHours","min","getMinutes","sec","getSeconds","pad2","getTime","day","item","padStart","original","list","seen","new_list","push","hasOwnProperty","email","success","fail","length","http_post","data","errStr","newPassword","reset_id","startsWith","http_put","organisationId","http_delete","http_get","errorStr","keywords","num_results","score_threshold","kbId","botQuery","superSearch","numResults","scoreThreshold","BUSY","ERROR","clear_operator","op","reducer","action","debug","type","stringify","title","is_admin_or_manager","roles","admin_manager","role","filter","name","organisation","found","org","page","prev_url","page_size","mindItemList","numMindItems","prev_id","synonymList","numSynonyms","semanticList","numSemantics","prev_word","semantic_prev_word","total_size","operatorId","ready","emptyOperator","operator","operator_id","message","messageType","disconnectedByClient","connectionCount","toId","fromIsTyping","getSystemTime","assignedOperatorId","conversationList","count","index","ci","is_simsage","origin","primary","conversationText","secondary","used","text","Notification","permission","options","body","onclick","focus","previousAnswer","clientId","kbName","connected","message_list","status","loggerMiddleware","createLogger","predicate","getState","uiTheme","createMuiTheme","typography","useNextVariants","palette","light","deepOrange","main","dark","blueGrey","styles","background","margin","backgroundColor","padding","height","fontFamily","fontWeight","color","borderRadius","logo","float","width","projectTitle","fontSize","marginLeft","marginTop","homeImageContainer","homeImage","signOutImageContainer","paddingTop","signOutImage","bookButton","marginRight","bookImage","versionText","AppMenu","props","signed_in","showDocumentation","web_base","style","Grid","container","spacing","xs","alt","src","onClick","goWeb","this","version","signOut","Component","ErrorDialog","open","callback","has_error","info","setState","nextProps","Dialog","className","ref","aria-labelledby","aria-describedby","fullWidth","maxWidth","onClose","handleOk","bind","DialogTitle","InputLabel","DialogContent","DialogActions","Button","variant","React","GraphHelper","labelList","valueList","datasets","hoverBackgroundColor","map","description","stat_list","size_list","Set","i","cf","values","key","has","add","toFixed","label","fill","lineTension","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","scale","day_map","numGtZero","num_points","values1","values2","listStart","idle","system","responsive","legend","position","hover","mode","scales","xAxes","display","scaleLabel","labelString","yAxes","ticks","beginAtZero","steps","stepValue","main_list","main_set","temp_list","processList","notification_busy","_getOrganisationList","current_org_name","current_org_id","_filter","change_organisation","dispatch","trim","_getKnowledgeBases","_getInventorizeList","_getUsers","_getCrawlers","_getDomains","_getDocuments","documentList","numDocuments","_getMindItems","mind_filter","_getSynonyms","_getSemantics","_getSemanticDisplayCategories","semanticDisplayCategoryList","_getSynSets","totalSize","_getReports","top","report","setupList","accessFrequency","setupMap","generalStatistics","queryWordFrequency","fileTypeStatistics","_getLogList","subSystem","logs","auth","conversion","crawler","document","knowledgebase","language","mind","search","stats","web","_getHtmlNotifications","requestPermission","_setupPage","appCreators","signIn","password","notBusy","passwordResetRequest","resetPassword","getStats","getOSMessages","restoreSystem","getLicense","installLicense","license_str","setError","closeError","selectTab","hideNotifications","showNotifications","getNotifications","nl","merge_notifications","notificationList","getOrganisationList","selectOrganisation","setOrganisationFilter","updateOrganisation","deleteOrganisation","selectKnowledgeBase","getKnowledgeBases","optimizeIndexes","deleteKnowledgeBase","updateKnowledgeBase","security_id","enabled","max_queries_per_day","analytics_window_size_in_months","operator_enabled","capacity_warnings","created","index_optimization_schedule","createInventory","getInventoryList","deleteInventoryItem","full_url","getInventoryBusy","forceInventoryBusy","getUsers","updateUser","user_id","surname","role_list","kb_list","signed_in_user","actual_role_data","roleStr","actual_kb_list_data","kb","had_operator_role","has_operator_role","deleteUser","setUserFilter","uploadProgram","wpUploadArchive","sid","securityId","getCrawlers","updateCrawler","deleteCrawler","getDomains","updateDomain","domain","testDomain","deleteDomain","domain_id","getDocuments","setDocumentFilter","deleteDocument","btoa","setDocumentPage","prevPage","setDocumentPageSize","reprocessDocument","getMindItems","setMindItemPage","mi_filter","mi_page_size","setMindItemPageSize","setMindItemFilter","deleteMindItem","deleteAllMindItems","saveMindItem","mindItem","query","setBotQueryString","getSynonyms","setSynonymPage","setSynonymPageSize","deleteSynonym","saveSynonym","synonym","setSynonymFilter","getSemantics","setSemanticPage","word","setSemanticPageSize","deleteSemantic","findSemantics","saveSemantic","semantic","setSemanticFilter","getSemanticDisplayCategories","saveSemanticDisplayCategory","prevDisplayName","displayName","deleteSemanticDisplayCategory","deleteSynSet","lemma","findSynSets","saveSynSet","syn_set","setSynSetFilter","setSynSetPage","setSynSetPageSize","setReportDate","getReports","processOperatorMessage","setOperatorConnected","addConversation","markConversationItemUsed","operatorReady","setOperatorAnswer","setOperatorQuestion","clearPreviousAnswer","clearUser","addOperator","removeOperator","stopClientTyping","sendOperatorMessage","getLogList","restartService","getHtml5Notifications","restore","base64_text","hr","marginBottom","spinner","left","spinnerInvisible","textAlign","recaptcha","justifyContent","helpText","copyright","bottom","widht","zIndex","opacity","backgroundSize","textBox","SignIn","event","handleClick","ThemeProvider","theme","TextField","disabled","autoFocus","placeholder","onChange","target","onKeyPress","connect","bindActionCreators","ResetPasswordRequest","error_msg","self","showError","loggedIn","queryString","require","input","spacer","ResetPasswordResponse","parsed","content","link","texcolor","bottomLink","OpenSourceLicenses","rel","lineHeight","fontColor","LicenseAgreement","clear","close","MessageDialog","cancel","dangerouslySetInnerHTML","__html","ok","control","downShift","popover","pullDownBox","pullDownImage","AutoComplete","onSelect","onFilter","isOpen","selectedIndex","minTextSize","suggestion_list","next","force","closeControl","exists","selectedItem","selection_list","si","keyCode","select","getItemProps","inputProps","showAllData","onBlur","spellCheck","onKeyDown","handleKey","getLookupData","Paper","square","paddingBottom","minHeight","maxHeight","overflowX","overflowY","suggestion","renderSuggestion","itemProps","highlightedIndex","isHighlighted","isSelected","MenuItem","selected","component","OrganisationEdit","onSave","onError","max_tpm","bot_enabled","analytics_enabled","language_enabled","disableBackdropClick","disableEscapeKeyDown","handleCancel","Checkbox","checked","handleSave","uploadContainer","minWidth","cursor","formWidth","uploadControl","imageButton","restoreImage","busyImage","uploadInput","uploadWheel","RestoreUpload","filename","fileType","e","preventDefault","reader","FileReader","file","files","onloadend","readAsDataURL","doUpload","onSubmit","_handleSubmit","upload","_handleImageChange","pageWidth","tableHeaderStyle","linkButton","editBox","roleBlock","border","roleLabel","roleArea","roleChip","addImage","textFieldBox","imageBox","imageSize","dlImageSize","searchBox","boxShadow","floatLeftLabel","floatLeft","searchFloatLeft","findBox","copiedStyle","organisationIdLabel","copyImageSpan","clipboardImage","Organisations","edit_organisation","edit_organisation_id","edit_name","copied_visible","view_organisation_id","edit_security_id","defined","maxTransactionsPerMonth","analyticsWindowInMonths","botEnabled","analyticsEnabled","operatorEnabled","languageEnabled","openDialog","closeDialog","paginated_list","first","last","get_backup_url","get_html_url","org_id","setTimeout","isAdmin","Home","hasRole","save","handleSearchTextKeydown","Table","TableHead","TableRow","TableCell","TableBody","getOrganisations","viewIds","editOrganisation","deleteOrganisationAsk","downloadHtml","backup","colSpan","backupAll","addNewOrganisation","TablePagination","rowsPerPageOptions","rowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","changePage","onChangeRowsPerPage","changePageSize","view_details","navigator","clipboard","writeText","startCopiedVisible","disabledLinkButton","dlImageSizeDisabled","UserManager","edit_user","edit_user_id","edit_first_name","edit_surname","edit_email","edit_password","edit_roles","edit_kb_list","formatRoles","available_role","filtered_roles","x","operatorKBList","operatorKB","available_kb","firstName","capitalizeFirstLetter","string","slice","toUpperCase","firstNameSurname","split","newFirst","newSur","new_roles","erole","hasOperatorRole","new_kbs","ekb","kbs","isManager","isVisible","canEdit","canDelete","editUser","deleteUserAsk","addNewUser","numUsers","fillNames","Chip","removeRoleFromUser","getAvailableRoles","addRoleToUser","removeKBFromUser","getAvailableKnowledgeBases","addKBToUser","editCancel","editOk","roles_str","tableStyle","tHeader","tCol","tCell","legenda","activeText","inactiveText","button1","button2","labelTop","time_list","day_list","defaultAllTimesSelected","TimeSelect","time","time_map","setupTimeMap","time_str","cell","tm","dow","gmtTime","toGMTString","timeStr","gs","clearAll","selectAll","defaultIndexSchedule","sidBox","timeTabContent","KnowledgeBases","selectedTab","edit_knowledgebase","edit_knowledgebase_id","knowledgeBase","edit_kb_id","edit_enabled","edit_max_queries_per_day","edit_analytics_window_size_in_months","edit_operator_enabled","edit_capacity_warnings","edit_created","edit_index_optimization_schedule","view_ids","maxQueriesPerDay","capacityWarnings","indexOptimizationSchedule","knowledge_base","t_value","editKnowledgeBase","deleteKnowledgeBaseAsk","addNewKnowledgeBase","Tabs","Tab","tab","refreshSecurityId","updateSchedule","gridWidth","snapshotItem","refreshImage","addImageDisabled","downloadImage","tableWidth","Inventory","date_time","program","innerHTML","replace","get_inventorize_dump_url","get_inventorize_dump_spreadhseet_url","unixTimeConvert","deleteReport","get_mind_dump_url","get_query_log_url","message_title","message_callback","timeList","inventorizeDump","inventorizeDumpSpreadsheet","deleteInventorizeAsk","marks","markText","customWidth","textField","formContent","exportButton","CrawlerGeneral","sourceId","nodeId","maxItems","maxBotItems","filesPerSecond","crawlerType","deleteFiles","allowAnonymous","enablePreview","processingLevel","construct_data","testCrawler","Select","change_callback","Slider","defaultValue","processingLevelToMark","valueLabelFormat","getAriaValueText","newValue","setProcessingLevelFromMark","step","valueLabelDisplay","CrawlerFile","file_username","file_password","file_server","file_domain","file_share_name","file_share_path","CrawlerWeb","web_base_url","web_css","web_css_ignore","web_extension_filter","web_extension_filter_ignore","web_article_filter_incl_csv","web_article_filter_excl_csv","multiline","rows","type_list","fieldWidth","dbType","CrawlerDatabase","db_username","db_password","db_jdbc","db_type","db_query","db_pk","db_template","db_text","metadata_list","instructionLabel","table","borderSpacing","tableHead","db_field","verticalAlign","displayFieldWidth","tdDisplayFieldWidth","tdSort","sortLabel","tdSort2","metadata_dropdown_box","mdDropbox","metadata_field","sort_field","action_field","metadata_dropdown","deleteBox","upDownArrow","deleteImage","dbFieldWidth","tdMetadataFieldName","mdFieldWidth","tdAction","CrawlerMetadataMapper","owner_data","record","md_list","db1","db2","match_item","field1","sort","field_name","direction","sort_default","i_index","stopPropagation","md","temp","num_rows","set_md_type","j","set_db","set_db_extra","setDisplayName","needs_metadata_field","checkMetadataName","setUserMetadataName1","sort_desc","setValue","sort_asc","setSort","setDefaultSort","deleteMetadataItem","move_row_up","move_row_down","addNewMetadataMapping","dlText","manualBox","manualImage","CrawlerOffice365","tenantId","clientSecret","redirectUrl","crawlOneDrive","crawlAllOfOneDrive","oneDriveUsersToCrawl","crawlSharePoint","crawlRootSite","sharePointSitesToCrawl","crawlExchange","crawlAllOfExchange","exchangeUsersToCrawl","CrawlerDropbox","clientToken","folderList","userList","c_data","selectedUsers","availableUserList","removeUser","join","getSelectedUsers","getAvailableUsers","addUser","RestoreWPArchive","exportWP","importWP","importText","restoreWP","CrawlerWordpress","get_export_archive_url","exportArchive","CrawlerGDrive","gdrive_projectId","gdrive_clientId","gdrive_clientSecret","gdrive_clientName","gdrive_clientPort","gdrive_userList","CrawlerNFS","nfs_local_folder","nfs_userList","CrawlerRestFull","rest_pk","rest_url","rest_template","rest_text","CrawlerDialog","onUpdate","schedule","setupFromCrawler","specificJson","metadata_name_map","sort_counter","empty_sort_field_counter","default_sort_counter","db_name","db_name2","isValidDBMetadata","isNaN","getCrawlerData","convertSpecificJson","username","server","shareName","sharePath","jdbc","pk","template","baseUrlList","validExtensions","validExtensionsIgnore","webCss","webCssIgnore","articleIncludeWordsCsv","articleExcludeWordsCsv","db_data","rest_data","crawler_error_title","crawler_error_msg","update_general_data","update_control_data","CrawlerImportExport","export_upload","empty_crawler","enableIndexing","knowledgeSelect","lhs","rhs","linkButtonDisabled","download","downloadType","labelHeader","DocumentSources","export_open","selected_crawler","crawler_ask","confirmDocumentsDelete","deleteCrawlerDocuments","crawler_str","saveCrawler","saveExport","editCrawler","deleteDocuments","deleteCrawlerAsk","exportCrawler","addNewCrawler","importCrawler","tableColumnStyle","urlLabel","statusImage","manualUploadSection","Documents","crawler_map","stage","crawled","converted","indexed","previewed","getActive","staging","isWeb","adjustUrl","lastModified","getStatus","getStatusText","deleteDocumentAsk","toLowerCase","half","maxUrlDisplayLength","image_types","MindEdit","expression","question1","question2","getAnswerText","links","getLinks","mi","actionList","createActions","links_text","actions","commands","parts","parameters","l","l_lwr","is_image","extn","param","uploadButton","ProgramUpload","file_type","binary_data","base64Text","smallTableHeaderStyle","actionTableHeaderStyle","searchTableHeaderStyle","queryMindLabel","uploader","export","Mind","mind_item","mind_edit","preContext","postContext","metadata","getMindItemList","toAnswer","editMindItem","deleteMindItemAsk","onUploadDone","programUploaded","mindDump","newMindItem","deleteAllMindItemsAsk","searchResult","searchMessage","searchFooter","searchInsideNav","insideNavButtonStyle","webkitUserSelect","mozUserSelect","msUserSelect","userSelect","insideNavButtonStyleDisabled","tinmanContainer","tinmanLeft","tinmanScore","tinmanText","tinmanImageSize","imageHolder","urlBox","urlStyle","graph_size","BotSingleSearchResult","openDocument","score","highlight","imageList","image","urlList","x_name","y_name","queryResultList","sayList","graphList","text_list","context","Object","keys","forEach","busyBox","searchTextBox","searchButtonBox","searchResultsBox","MindSearchComponent","botQueryString","hasSearched","doClickSearch","copy","updateResults","session_id","window_url","toUrl","getResultList","MindTest","SynonymEdit","words","syn","Synonyms","synonym_edit","getSynonymList","editSynonym","deleteSynonymAsk","newSynonym","labelAdjustment","SemanticEdit","semantic_str","Semantics","prev_semantic","semantic_edit","prevWord","getSemanticList","editSemantic","deleteSemanticAsk","newSemantic","textFieldStyle","deleteButton","deleteImageSize","SynSetEdit","synSet","cloud_list","getWordCloudList","wordCloudCsvList","cl","newList","updateWC","deleteSyn","newSyn","SynSets","synSet_edit","validList","handleSynSetFilterKeydown","editSynSet","deleteSynSetAsk","newSynSet","logFiles","whiteSpace","resize","logLine","Logs","messagesEndRef","createRef","prevPops","prevState","snapshot","scrollToBottom","subItem","current","scrollIntoView","behavior","showLogs","get_active","restart","line","barGraphs","barGraph","downloadButton","dateSelect","Reports","month1","downloadReport","dateFormat","todayButton","showMonthYearPicker","getGraphOptions","OperatorTeach","questionStyle","answerStyle","OperatorPreviousAnswer","buttonsTop","topButton","closeButton","conversations","avatarBackground","simSageIcon","simSageIconSelected","personIcon","personIconSelected","typingDots","Operator","operator_reply","last_time","setInterval","checkClientTyping","prevProps","listRef","scrollTop","scrollHeight","sessionId","userId","curr_time","fromId","isTyping","banUser","act","teach","use","operatorReply","isOperator","active","isReady","has_user","teachSimSage","usePreviousQuestion","readyForChat","takeBreak","nextUser","banUserConfirm","isFirst","onCloseTab","List","dense","ListItem","selectForLearn","ListItemAvatar","Avatar","getAvatarStyle","ListItemText","add_button","OperatorTabs","domainPage","testButton","DomainDialog","onTest","domainId","domainName","userName","serverIp","basePath","portNumber","sslOn","gather_data","testConnection","empty_domain","Domains","selected_domain","domain_ask","saveDomain","numObjects","editDomain","deleteDomainAsk","addNewDomain","SemanticCategoryEdit","definedSemanticList","available_semantic","newSemanticList","s","removeSemantic","getAvailableSemantics","addSemantic","SemanticCategories","deleteDisplayCategory","existing","sdc","start","end","getLeftOverSemanticList","getSemanticDisplayList","editDisplayCategory","deleteDisplayCategoryAsk","newDisplayCategory","pageNav","pageContent","selectedNavItem","navItem","navItemDisabled","organisationSelect","organisationLabel","divider","notificationParent","right","notifications","notificationsHidden","displayAll","hideAllImage","showAllImage","infoDate","infoType","infoText","isAdminOrManager","hasRoleInOrganisation","timeout","refreshOperator","operatorList","len","reverse","filter_text","ft_lower","filtered_list","dialog_open","operator_id_list","ws_base","topics","client","clientRef","onMessage","msg","onConnect","onDisconnect","connectionError","getStyle","getOrganisationListFiltered","getKnowledgeBaseListFiltered","notification","pad","minute","parseInt","service","role_name_list","signedInUser","store","reducers","AppReducer","middleware","thunk","enhancers","rootReducer","combineReducers","routing","routerReducer","createStore","compose","applyMiddleware","configureStore","subscribe","setItem","saveState","ReactDOM","render","basename","exact","path","getElementById"],"mappings":"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","file":"static/js/main.01b051b9.chunk.js","sourcesContent":["import Api from '../common/api'\n\n//\n// this defines the initial state of the entire application - the state store\n//\nexport function initializeState() {\n    return {\n        // which tab is selected in the app\n        selected_tab: 'organisations',\n\n        // notification system\n        notification_list: [],\n        show_notifications: false,\n        operator_wait_timeout_in_ms: 10000,\n        notification_list_display_size: 50,\n\n        // organisational data\n        selected_organisation_id: \"\",\n        selected_organisation: \"\",\n        organisation_filter: \"\",\n        organisation_list: [],\n\n        // kb status\n        selected_knowledgebase: null,\n        selected_knowledgebase_id: \"\",\n        knowledge_base_list: [],\n\n        // inventory items for a given kb\n        inventorize_list: [],\n        inventorize_busy: false,\n\n        // the users\n        user_list: [],\n        user_filter: '',\n\n        // crawlers\n        crawler_list: [],\n\n        // system busy\n        busy: false,\n\n        // program busy uploading\n        uploading: false,\n\n        // session and user objects\n        session: null,\n        user: null,\n\n        // system license\n        license: null,\n\n        // documents\n        document_list: [],\n        document_previous: null,\n        document_filter: '',\n        prev_document_filter: '',   // see what the last filter was (reset pagination if changed)\n        document_page: 0,\n        document_page_size: 5,\n        num_documents: 0,\n        // nav-list with page 0 id\n        document_nav_list: [\"null\"],\n\n        // mind items\n        mind_item_list: [],\n        mind_item_previous: null,\n        mind_item_filter: '',\n        mind_item_page: 0,\n        mind_item_page_size: 5,\n        num_mind_items: 0,\n        prev_mind_item_filter: '',\n        mind_item_nav_list: [\"null\"],\n\n        // mind query (aka. bot query)\n        bot_query: \"\",\n        bot_query_result_list: [],\n        bot_query_page_size: 10,\n        bot_query_threshold: 0.01,\n\n        // synonyms\n        synonym_list: [],\n        synonym_prev_id: null,\n        synonym_filter: \"\",\n        synonym_page: 0,\n        synonym_page_size: 5,\n        num_synonyms: 0,\n        prev_synonym_filter: '',\n        synonym_nav_list: [\"null\"],\n\n        // semantics\n        semantic_list: [],\n        semantic_prev_id: null,\n        semantic_filter: \"\",\n        semantic_page: 0,\n        semantic_page_size: 5,\n        num_semantics: 0,\n        prev_semantic_filter: '',\n        semantic_nav_list: [\"null\"],\n\n        // syn-sets\n        synset_filter: \"\",\n        synset_list: [],\n        synset_page: 0,\n        synset_page_size: 10,\n        synset_total_size: 0,\n\n        // reports\n        report_date: Api.toIsoDate(new Date()),\n        report_num_items: 20,\n        access_frequency: {labels: []},\n        general_statistics: [],\n        query_word_frequency: [],\n        file_type_statistics: [],\n\n        // operator\n        operators: [Api.createOperator()],\n        num_active_connections: 0,\n        operator_connected: false,\n\n        // html5 notification permissions asked already?\n        html5_notifications: '',\n\n        // list of log files\n        log_size: 100,\n        log_list: [],\n        selected_log: 'web',\n        active_components: {}, // what processes are active\n\n        // ad domain manager\n        domain_list: [],\n\n        // semantic display categories for org:kb\n        semantic_display_category_list: [],\n        // list of semantics that are existing / defined for org:kb\n        defined_semantic_list: [],\n\n        // application error messages\n        error_title: \"Error\",\n        error: \"\",\n    }\n}\n\n\nexport function loadState() {\n    try {\n        let serializedState = localStorage.getItem(\"https://simsage.nz:state\");\n        if (serializedState === null || window.location.href.endsWith(\"/#/\")) {\n            return {\"appReducer\": initializeState()};\n        }\n        return JSON.parse(serializedState);\n    }\n    catch (err) {\n        return {\"appReducer\": initializeState()};\n    }\n}\n\n\nexport function saveState(state) {\n    try {\n        let serializedState = JSON.stringify(state);\n        localStorage.setItem(\"https://simsage.nz:state\", serializedState);\n    }\n    catch (err) {\n    }\n}\n\n\nexport function clearState(state) {\n    try {\n        localStorage.removeItem(\"https://simsage.nz:state\");\n    }\n    catch (err) {\n    }\n}\n\n","import axios from \"axios/index\";\n\nimport {loadState} from '../reducers/stateLoader'\n\n\n// communications common to all components\nexport class Comms {\n\n    static http_post(url, payload, fn_success, fn_fail) {\n        const api_base = window.ENV.api_base;\n        console.log('POST ' + api_base + url);\n        axios.post(api_base + url, payload, Comms.getHeaders())\n            .then(function (response) {\n                if (fn_success) {\n                    fn_success(response);\n                }\n            })\n            .catch(function (error) {\n                if (fn_fail) {\n                    if (error.response === undefined) {\n                        fn_fail('Servers not responding or cannot contact Servers');\n                    } else {\n                        fn_fail(Comms.get_error(error));\n                    }\n                }\n            });\n    };\n\n    static http_put(url, payload, fn_success, fn_fail) {\n        const api_base = window.ENV.api_base;\n        console.log('PUT ' + api_base + url);\n        axios.put(api_base + url, payload, Comms.getHeaders())\n            .then(function (result) {\n                if (fn_success) {\n                    fn_success(result);\n                }\n            })\n            .catch(function (error) {\n                if (fn_fail) {\n                    if (error.response === undefined) {\n                        fn_fail('Servers not responding or cannot contact Servers');\n                    } else {\n                        fn_fail(Comms.get_error(error));\n                    }\n                }\n            });\n    };\n\n    static http_get(url, fn_success, fn_fail) {\n        const api_base = window.ENV.api_base;\n        if (url !== '/stats/stats/os') {\n            console.log('GET ' + api_base + url);\n        }\n        return axios.get(api_base + url, Comms.getHeaders())\n            .then(function (response) {\n                if (fn_success) {\n                    fn_success(response);\n                }\n            })\n            .catch((error) => {\n                if (fn_fail) {\n                    if (error.response === undefined) {\n                        fn_fail('Servers not responding or cannot contact Servers');\n                    } else {\n                        fn_fail(Comms.get_error(error));\n                    }\n                }\n            });\n    };\n\n    // get a url that can be used to backup the system, regime e {all (backup all orgs), specific (backup specified org)}\n    static get_backup_url(organisation_id, regime) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/backup/backup/' + encodeURIComponent(session.id) + '/' +\n                encodeURIComponent(organisation_id) + '/' + encodeURIComponent(regime);\n    };\n\n    // get a url that can be used to backup the system\n    static get_mind_dump_url(organisation_id, kb_id) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/backup/mind-dump/' + encodeURIComponent(session.id) + '/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id);\n    };\n\n    // get a url that can be used to summarize the system\n    static get_inventorize_dump_url(organisation_id, kb_id, dateTime) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/document/parquet/' + encodeURIComponent(session.id) + '/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id) + '/' +\n            encodeURIComponent(dateTime);\n    };\n\n    // get a url that can be used to summarize the system using a spreadsheet\n    static get_inventorize_dump_spreadhseet_url(organisation_id, kb_id, dateTime) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/document/spreadsheet/' + encodeURIComponent(session.id) + '/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id) + '/' +\n            encodeURIComponent(dateTime);\n    };\n\n    // get a url that can be used to download a crawler\n    static get_crawler_url(organisation_id, kb_id, crawler_id) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/crawler/download/' + encodeURIComponent(session.id) + '/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id) + '/' + encodeURIComponent(crawler_id);\n    };\n\n    // get a url that can be used to download the bot html\n    static get_html_url(html, organisation_id) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/knowledgebase/download/' + html + '/' + encodeURIComponent(session.id) + '/' +\n                            encodeURIComponent(organisation_id);\n    };\n\n    // get a url that can be used to get the query-logs\n    static get_query_log_url(organisation_id, kb_id, year, month) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/stats/query-logs/' + encodeURIComponent(session.id) + '/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id) + '/' +\n            encodeURIComponent(year) + '/' + encodeURIComponent(month);\n    };\n\n    // get a url that can be used to get a zip archive of a wp export\n    static get_export_archive_url(organisation_id, kb_id, source_id) {\n        let session = Comms.getSession();\n        return window.ENV.api_base + '/crawler/wp-archive/download/' + encodeURIComponent(session.id) + '/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id) + '/' + encodeURIComponent(source_id);\n    };\n\n    static http_delete(url, fn_success, fn_fail) {\n        const api_base = window.ENV.api_base;\n        console.log('DELETE ' + api_base + url);\n        axios.delete(api_base + url, Comms.getHeaders())\n            .then(function (response) {\n                if (fn_success) {\n                    fn_success(response);\n                }\n            })\n            .catch(function (error) {\n                if (fn_fail) {\n                    if (error.response === undefined) {\n                        fn_fail('Servers not responding or cannot contact Servers');\n                    } else {\n                        fn_fail(Comms.get_error(error));\n                    }\n                }\n            });\n    };\n\n    static toUrl(str) {\n        return window.ENV.api_base + str;\n    }\n\n    // convert js response to its error output equivalent\n    static get_error(error) {\n        if (typeof error === \"string\" && error.indexOf(\"{\") === 0) {\n            const obj = JSON.parse(error);\n            if (obj && obj[\"response\"] && obj[\"response\"][\"data\"] && obj[\"response\"][\"data\"][\"error\"]) {\n                return obj[\"response\"][\"data\"][\"error\"];\n            } else {\n                return error;\n            }\n        } else {\n            if (error && error[\"response\"] && error[\"response\"][\"data\"] && error[\"response\"][\"data\"][\"error\"]) {\n                return error[\"response\"][\"data\"][\"error\"];\n            } else {\n                return error;\n            }\n        }\n    }\n\n    // get a pretty formatted ISO date string (date only)\n    static getISODate() {\n        const a = new Date();\n        const year = a.getFullYear();\n        const month = a.getMonth() + 1;\n        const date = a.getDate();\n        return year + '-' + month + '-' + date;\n    };\n\n    static getSession() {\n        const state = loadState();\n        if (state && state.appReducer && state.appReducer.session) {\n            return state.appReducer.session;\n        }\n        return null;\n    }\n\n    static getHeaders() {\n        let session = Comms.getSession();\n        if (session && session.id) {\n            return {\n                headers: {\n                    \"API-Version\": window.ENV.api_version,\n                    \"Content-Type\": \"application/json\",\n                    \"Session-Id\": session.id,\n                }\n            }\n        }\n        return {\n            headers: {\n                \"API-Version\": window.ENV.api_version,\n                \"Content-Type\": \"application/json\"\n            }\n        };\n    }\n\n}\n\nexport default Comms;\n","import {Comms} from \"../common/comms\";\n\n// api wrappers\nexport class Api {\n\n    static defined(value) {\n        return (value !== null && value !== undefined);\n    }\n\n    // generate a guid\n    static createGuid() {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    };\n\n    // create an empty operator packet\n    static createOperator() {\n        return {id: Api.createGuid(),\n            conversation_list: [], operator_ready: false,\n            question_id: '', question: '', answer_id: '', answer: '',\n            // operator connected clients\n            client_id: '', client_kb_id: '', client_kb_name: '', is_typing: false, typing_time: 0,\n            // operator previous answer\n            current_question: '', prev_answer: '',\n        }\n    };\n\n    // convert unix timestamp to string if it's for a reasonable time in the future\n    static unixTimeConvert(timestamp){\n        if (timestamp > 1000) {\n            const a = new Date(timestamp);\n            const year = a.getFullYear();\n            const month = a.getMonth() + 1;\n            const date = a.getDate();\n            const hour = a.getHours();\n            const min = a.getMinutes();\n            const sec = a.getSeconds();\n            return year + '/' + Api.pad2(month) + '/' + Api.pad2(date) + ' ' + Api.pad2(hour) + ':' + Api.pad2(min) + ':' + Api.pad2(sec);\n        }\n        return \"\";\n    }\n\n    // get current time in milli-seconds\n    static getSystemTime() {\n        return new Date().getTime();\n    }\n\n    // convert a date object to an iso date string\n    static toIsoDate(date){\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        const day = date.getDate();\n        return year + '-' + Api.pad2(month) + '-' + Api.pad2(day) + 'T00:00:00.000';\n    }\n\n    static pad2(item) {\n        return (\"\" + item).padStart(2, '0');\n    }\n\n    // setup the timer\n    static setupTimer() {\n        return true;\n    }\n\n    // merge two notifications lists together and return the resulting unique list of items\n    static merge_notifications(original, list) {\n        const seen = {};\n        const new_list = [];\n        if (original) {\n            for (const item of original) {\n                seen[item.id] = true;\n                new_list.push(item);\n            }\n        }\n        if (list) {\n            for (const item of list) {\n                if (!seen.hasOwnProperty(item.id)) {\n                    seen[item.id] = true;\n                    new_list.push(item);\n                }\n            }\n        }\n        return new_list;\n    }\n\n    // start a password reset request\n    static passwordResetRequest(email, success, fail) {\n        if (email && email.length > 0) {\n            Comms.http_post('/auth/reset-password-request', {\"email\": email},\n                (response) => { success(response.data.session, response.data.user) },\n                (errStr) => { fail(errStr) }\n            )\n        }\n        else{\n            fail('you must provide your SimSage email address');\n        }\n    };\n\n    // reset a password (do it)\n    static resetPassword(email, newPassword, reset_id, success, fail) {\n        if (email && email.length > 0 && newPassword.length > 0) {\n            const payload = {\"email\": email, \"password\": newPassword, \"resetId\": reset_id};\n            Comms.http_post('/auth/reset-password', payload,\n                (response) => { success(response.data.session, response.data.user) },\n                (errStr) => { fail(errStr) }\n            )\n        }\n        else{\n            fail('please complete and check all fields');\n        }\n    };\n\n    // get the user object (or null if dne)\n    static getUser() {\n        var user = localStorage.getItem(\"user\");\n        if (user && user.startsWith(\"{\")) {\n            return JSON.parse(user);\n        }\n        return null;\n    }\n\n    // upload data to the system\n    static uploadDocument(payload, success, fail) {\n        Comms.http_put('/document/upload', payload,\n            (response) => { success(response.data) },\n            (errStr) => { fail(errStr) }\n        )\n    };\n\n    // delete a crawler's document\n    static deleteCrawlerDocuments(organisationId, kb_id, id, success, fail) {\n        Comms.http_delete('/crawler/crawler/document/' + encodeURIComponent(organisationId) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(id),\n            (response) => { success(response.data) },\n            (errStr) => { fail(errStr) }\n        )\n    }\n\n\n    // test a specific crawler's connectivity\n    static testCrawler(organisationId, kb_id, id, success, fail) {\n        Comms.http_get('/crawler/crawler/test/' + encodeURIComponent(organisationId) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(id),\n            (response) => {\n                if (response.data && response.data.errorStr && response.data.errorStr.length > 0) {\n                    fail(response.data.errorStr);\n                } else {\n                    success(response.data)\n                }\n            },\n            (errStr) => { fail(errStr) }\n        )\n    }\n\n\n    // perform a semantic search\n    static semanticSearch(organisationId, kb_id, keywords, num_results=10, score_threshold=0.1, success, fail) {\n        Comms.http_put('/semantic/search', {\n                organisationId: organisationId,\n                kbId: kb_id,\n                botQuery: keywords,         // raw text\n                superSearch: keywords,      // super search markup\n                numResults: num_results,\n                scoreThreshold: score_threshold,\n            },\n            (response) => { success(response.data) },\n            (errStr) => { fail(errStr) }\n        )\n    }\n\n}\n\nexport default Api;\n","\nexport const SIGN_IN = \"sign in\";\nexport const SIGN_OUT = \"sign out\";\n\nexport const PASSWORD_RESET_REQUEST = \"password reset request\";\nexport const RESET_PASSWORD = \"reset password\";\n\nexport const SET_USER_LIST = \"set user list\";\nexport const UPDATE_USER = \"update user\";\nexport const SET_USER_FILTER = \"set user filter\";\n\nexport const GET_ORGANISATION_LIST = \"get organisation list\";\nexport const SELECT_ORGANISATION = \"select organisation\";\nexport const UPDATE_ORGANISATION = \"update organisation\";\nexport const SET_ORGANISATION_FILTER = \"set organisation filter\";\nexport const RESET_SELECTED_KB = \"reset selected kb\";\n\nexport const GET_KNOWLEDGE_BASES = \"get knowledge bases\";\nexport const SELECT_KNOWLEDGE_BASE = \"selected knowledge base\";\nexport const GET_INVENTORIZE_LIST = \"get inventorize list\";\nexport const GET_INVENTORIZE_BUSY = \"get inventorize busy\";\n\nexport const UPLOADING_PROGRAM = \"uploading program\";\nexport const UPLOADING_PROGRAM_FINISHED = \"uploading program finished\";\n\nexport const UPLOADING_WP_ARCHIVE = \"uploading wp archive\";\nexport const UPLOADING_WP_ARCHIVE_FINISHED = \"uploading wp archive finished\";\n\nexport const GET_CRAWLERS = \"get crawlers\";\nexport const GET_DOMAINS = \"get domains\";\n\nexport const GET_DOCUMENTS_PAGINATED = \"get documents paginated\";\nexport const SET_DOCUMENT_FILTER = \"set document filter\";\nexport const SET_DOCUMENT_PAGE = \"set document page\";\nexport const SET_DOCUMENT_PAGE_SIZE = \"set document page size\";\nexport const UPLOAD_DOCUMENT = \"upload document\";\nexport const RESET_DOCUMENT_PAGINATION = \"reset document pagination\";\n\nexport const GET_STATS = \"get stats\";\nexport const GET_OS_MESSAGES = \"get os messages\";\n\nexport const MIND_FIND = \"mind find\";\nexport const SET_MIND_ITEMS_PAGINATED = \"set mind items paginated\";\nexport const SET_MIND_ITEM_PAGE_SIZE = \"set mind item page size\";\nexport const SET_MIND_ITEM_PAGE = \"set mind item page\";\nexport const RESET_MIND_ITEM_PAGINATION = \"reset mind item pagination\";\nexport const SET_MIND_ITEM_FILTER = \"set mind item filter\";\nexport const SET_BOT_QUERY_LIST = \"set bot query list\";\nexport const SET_BOT_QUERY_STRING = \"set bot query string\";\n\nexport const SEMANTIC_SEARCH = \"semantic search\";\n\nexport const SET_SYNONYMS_PAGINATED = \"set synonyms paginated\";\nexport const SET_SYNONYM_PAGE_SIZE = \"set synonym page size\";\nexport const SET_SYNONYM_PAGE = \"set synonym page\";\nexport const RESET_SYNONYM_PAGINATION = \"reset synonym pagination\";\nexport const SET_SYNONYM_FILTER = \"set synonym filter\";\n\nexport const SET_SEMANTICS_PAGINATED = \"set semantics paginated\";\nexport const SET_SEMANTIC_PAGE_SIZE = \"set semantic page size\";\nexport const SET_SEMANTIC_PAGE = \"set semantic page\";\nexport const RESET_SEMANTIC_PAGINATION = \"reset semantic pagination\";\nexport const SET_SEMANTIC_FILTER = \"set semantic filter\";\n\nexport const SET_SEMANTIC_DISPLAY_LIST = \"set semantic display list\";\n\nexport const SET_SYNSET_FILTER = \"set synset filter\";\nexport const SET_SYNSET_LIST = \"set synset list\";\nexport const SET_SYNSET_PAGE = \"set synset page\";\nexport const SET_SYNSET_PAGE_SIZE = \"set synset page size\";\nexport const RESET_SYNSET_PAGINATION = \"reset synset pagination\";\n\nexport const RESTORE_SYSTEM = \"restore system\";\n\nexport const GET_LICENSE = \"get license\";\nexport const INSTALL_LICENCE = \"install license\";\n\nexport const BUSY = \"busy\";\nexport const ERROR = \"error\";\nexport const CLOSE_ERROR = \"close error\";\nexport const SELECT_TAB = \"select tab\";\n\nexport const HIDE_NOTIFICATIONS = \"hide notifications\";\nexport const SHOW_NOTIFICATIONS = \"show notifications\";\nexport const SET_NOTIFICATION_LIST = \"set notification list\";\n\nexport const SET_REPORT_DATE = \"set report date\";\nexport const SET_REPORT_GRAPHS = \"set report graphs\";\n\nexport const PROCESS_OPERATOR_MESSAGE = \"process operator message\";\nexport const SET_OPERATOR_CONNECTED = \"set operator connected\";\nexport const ADD_CONVERSATION = \"add conversation\";\nexport const MARK_CONVERSATION_USED = \"mark conversation used\";\nexport const OPERATOR_READY = \"operator ready\";\nexport const SET_OPERATOR_ANSWER = \"set operator answer\";\nexport const SET_OPERATOR_QUESTION = \"set operator question\";\nexport const OPERATOR_CLEAR_USER = \"operator clear user\";\nexport const CLEAR_PREVIOUS_ANSWER = \"clear previous answer\";\nexport const ADD_OPERATOR = \"add operator\";\nexport const REMOVE_OPERATOR = \"remove operator\";\nexport const STOP_CLIENT_TYPING = \"stop client typing\";\nexport const MAX_OPERATORS = 5;\n\nexport const GET_HTML5_NOTIFICATIONS = \"get html5 notifications\";\n\nexport const SET_LOG_LIST = \"set log list\";\n","import Api from '../common/api'\n\nimport {\n    ADD_CONVERSATION,\n    BUSY,\n    RESET_SELECTED_KB,\n    CLEAR_PREVIOUS_ANSWER,\n    CLOSE_ERROR,\n    ERROR,\n    GET_CRAWLERS,\n    GET_DOMAINS,\n    GET_DOCUMENTS_PAGINATED,\n    GET_HTML5_NOTIFICATIONS,\n    GET_KNOWLEDGE_BASES,\n    GET_INVENTORIZE_LIST,\n    GET_INVENTORIZE_BUSY,\n    GET_LICENSE,\n    GET_ORGANISATION_LIST,\n    SET_ORGANISATION_FILTER,\n    SET_USER_LIST,\n    SET_USER_FILTER,\n    HIDE_NOTIFICATIONS,\n    MARK_CONVERSATION_USED,\n    MIND_FIND,\n    SET_MIND_ITEMS_PAGINATED,\n    SET_MIND_ITEM_PAGE_SIZE,\n    SET_MIND_ITEM_PAGE,\n    RESET_MIND_ITEM_PAGINATION,\n    OPERATOR_CLEAR_USER,\n    OPERATOR_READY,\n    ADD_OPERATOR,\n    REMOVE_OPERATOR,\n    PROCESS_OPERATOR_MESSAGE,\n    RESET_DOCUMENT_PAGINATION,\n    SELECT_KNOWLEDGE_BASE,\n    SELECT_ORGANISATION,\n    UPDATE_ORGANISATION,\n    SELECT_TAB,\n    SET_BOT_QUERY_LIST,\n    SET_BOT_QUERY_STRING,\n    SET_DOCUMENT_FILTER,\n    SET_DOCUMENT_PAGE,\n    SET_DOCUMENT_PAGE_SIZE,\n    SET_MIND_ITEM_FILTER,\n    SET_NOTIFICATION_LIST,\n    SET_OPERATOR_ANSWER,\n    SET_OPERATOR_CONNECTED,\n    SET_OPERATOR_QUESTION,\n    STOP_CLIENT_TYPING,\n    SET_REPORT_DATE,\n    SET_REPORT_GRAPHS,\n\n    SET_SEMANTIC_FILTER,\n    SET_SEMANTICS_PAGINATED,\n    RESET_SEMANTIC_PAGINATION,\n    SET_SEMANTIC_PAGE_SIZE,\n    SET_SEMANTIC_PAGE,\n\n    SET_SEMANTIC_DISPLAY_LIST,\n\n    SET_SYNONYM_FILTER,\n    SET_SYNONYMS_PAGINATED,\n    RESET_SYNONYM_PAGINATION,\n    SET_SYNONYM_PAGE_SIZE,\n    SET_SYNONYM_PAGE,\n\n    SET_SYNSET_FILTER,\n    SET_SYNSET_LIST,\n    SET_SYNSET_PAGE,\n    SET_SYNSET_PAGE_SIZE,\n    RESET_SYNSET_PAGINATION,\n    SHOW_NOTIFICATIONS,\n    SIGN_IN,\n    SIGN_OUT,\n    UPDATE_USER,\n    UPLOADING_PROGRAM,\n    UPLOADING_PROGRAM_FINISHED,\n    UPLOADING_WP_ARCHIVE,\n    UPLOADING_WP_ARCHIVE_FINISHED,\n    SET_LOG_LIST,\n} from \"../actions/actions\";\nimport {initializeState} from './stateLoader'\n\n// operator message types\nconst mt_ActiveConnections = \"active connections\";\nconst mt_Disconnect = \"disconnect\";\nconst mt_Error = \"error\";\nconst mt_Message = \"message\";\nconst mt_Typing = \"typing\";\nconst mt_TeachingSuccessful = \"teaching success\";\n\n// remove all client attributes from an operator\nfunction clear_operator(op) {\n    if (op) {\n        op.conversation_list = [];\n        op.client_id = '';\n        op.client_kb_id = '';\n        op.client_kb_name = '';\n        op.question_id = '';\n        op.question = '';\n        op.answer_id = '';\n        op.answer = '';\n        op.prev_answer = '';\n        op.current_question = '';\n        op.is_typing = false;\n        op.typing_time = 0;\n    }\n}\n\nexport const reducer = (state, action) => {\n    state = state || initializeState();\n\n    // output what we've received\n    if (window.ENV.debug) {\n        console.debug(\"applicationReducer:\" + action.type);\n    }\n    if (action.type === ERROR) {\n        console.log(\"ERROR: (\" + JSON.stringify(action) + \")\");\n    }\n\n    switch (action.type) {\n\n        default: {\n            break;\n        }\n\n        // set an error\n        case ERROR: {\n            // is this an \"invalid session id\"\n            if (action.error.indexOf(\"invalid session id\") >= 0) {\n                // wipe session and user objects - this is now a logout event\n                window.location = \"/#/\";\n                return {\n                    ...state,\n                    session: null,\n                    user: null,\n                    error_title: action.title,\n                    error: action.error,\n                    busy: false,\n                    uploading: false,\n                };\n            } else {\n                return {\n                    ...state,\n                    error_title: action.title,\n                    error: action.error,\n                    busy: false,\n                    uploading: false,\n                }\n            }\n        }\n\n        case RESET_SELECTED_KB: {\n            return {\n                ...state,\n                selected_organisation_id: \"\",\n                selected_organisation: null,\n                selected_knowledgebase_id: \"\",\n                selected_knowledgebase: null,\n            };\n        }\n\n        // close any error messages\n        case CLOSE_ERROR: {\n            return {\n                ...state,\n                error_title: \"\",\n                error: \"\",\n                busy: false,\n            };\n        }\n\n        case BUSY: {\n            return {\n                ...state,\n                busy: action.busy,\n            };\n        }\n\n        // sign-in a user\n        case SIGN_IN: {\n            // if we're an operator - we need to change tabs\n            let is_admin_or_manager = false;\n            if (action.user && action.user.roles) {\n                const admin_manager = ['admin', 'manager'];\n                for (const role of action.user.roles) {\n                    if (admin_manager.indexOf(role.role) >= 0) {\n                        is_admin_or_manager = true;\n                    }\n                }\n            }\n            // set the selected organisation-id (used by operators\n            let selected_organisation_id = '';\n            let selected_organisation = '';\n            if (action.user && action.user.roles) {\n                for (const role of action.user.roles) {\n                    if (role && role.organisationId && selected_organisation_id === '') {\n                        selected_organisation_id = role.organisationId;\n                    }\n                }\n            }\n            // redirect sign-in to either orgs or operator (depending on access)\n            return {\n                ...state,\n                session: action.session,\n                user: action.user,\n                selected_tab: is_admin_or_manager ? 'organisations' : 'operator',\n                selected_organisation_id: selected_organisation_id,\n                selected_organisation: selected_organisation,\n                busy: false,\n            };\n        }\n\n        case GET_LICENSE: {\n            return {\n                ...state,\n                license: action.license,\n                busy: false,\n            };\n        }\n\n        case GET_ORGANISATION_LIST: {\n            return {\n                ...state,\n                organisation_list: action.organisation_list,\n                busy: false,\n            };\n        }\n\n        case SET_ORGANISATION_FILTER: {\n            return {\n                ...state,\n                organisation_filter: action.filter,\n            };\n        }\n\n        case GET_KNOWLEDGE_BASES: {\n            return {\n                ...state,\n                knowledge_base_list: action.knowledge_base_list,\n                busy: false,\n            };\n        }\n\n        case GET_INVENTORIZE_LIST: {\n            return {\n                ...state,\n                inventorize_list: action.inventorize_list,\n                busy: false,\n            };\n        }\n\n        case GET_INVENTORIZE_BUSY: {\n            return {\n                ...state,\n                inventorize_busy: action.busy,\n                busy: false,\n            };\n        }\n\n        case SELECT_ORGANISATION: {\n            return {\n                ...state,\n                selected_organisation_id: action.id,\n                selected_organisation: action.name,\n                selected_knowledgebase_id: \"\",\n                selected_knowledgebase: \"\",\n                busy: false,\n            }\n        }\n\n        case UPDATE_ORGANISATION: {\n            const new_list = [];\n            const organisation = action.organisation;\n            let found = false;\n            for (const org of state.organisation_list) {\n                if (org.id === organisation.id) {\n                    new_list.push(organisation);\n                    found = true;\n                } else {\n                    new_list.push(org);\n                }\n            }\n            if (!found) {\n                new_list.push(organisation);\n            }\n            return {\n                ...state,\n                organisation_list: new_list,\n                busy: false,\n            }\n        }\n\n        case SELECT_KNOWLEDGE_BASE: {\n            return {\n                ...state,\n                selected_knowledgebase_id: action.id,\n                selected_knowledgebase: action.name,\n                busy: false,\n            }\n        }\n\n        // sign-out a user\n        case SIGN_OUT: {\n            return {\n                ...state,\n                session: null,\n                user: null,\n                busy: false,\n            }\n        }\n\n        case SELECT_TAB: {\n            return {\n                ...state,\n                selected_tab: action.selected_tab,\n                busy: false,\n            }\n        }\n\n        case HIDE_NOTIFICATIONS: {\n            return {\n                ...state,\n                show_notifications: false,\n            }\n        }\n\n        case SHOW_NOTIFICATIONS: {\n            return {\n                ...state,\n                show_notifications: true,\n            }\n        }\n\n        case SET_NOTIFICATION_LIST: {\n            return {\n                ...state,\n                notification_list: action.notification_list,\n            }\n        }\n\n        case SET_USER_LIST: {\n            return {\n                ...state,\n                user_list: action.user_list,\n                busy: false,\n            };\n        }\n\n        case SET_USER_FILTER: {\n            return {\n                ...state,\n                user_filter: action.filter,\n            };\n        }\n\n        case UPDATE_USER: {\n            return {\n                ...state,\n                user: action.user,\n                busy: false,\n            };\n        }\n\n        case GET_CRAWLERS: {\n            return {\n                ...state,\n                crawler_list: action.crawler_list,\n                busy: false,\n            };\n        }\n\n        case GET_DOMAINS: {\n            return {\n                ...state,\n                domain_list: action.domain_list,\n                busy: false,\n            };\n        }\n\n        case UPLOADING_PROGRAM: {\n            return {\n                ...state,\n                uploading: true,\n            };\n        }\n\n        case UPLOADING_PROGRAM_FINISHED: {\n            return {\n                ...state,\n                uploading: false,\n                busy: false,\n            };\n        }\n\n        case UPLOADING_WP_ARCHIVE: {\n            return {\n                ...state,\n                uploading: true,\n            };\n        }\n\n        case UPLOADING_WP_ARCHIVE_FINISHED: {\n            return {\n                ...state,\n                uploading: false,\n                busy: false,\n            };\n        }\n\n        case GET_DOCUMENTS_PAGINATED: {\n            return {\n                ...state,\n                document_list: action.document_list,\n                num_documents: action.num_documents,\n                prev_document_filter: action.document_filter,\n                busy: false,\n            };\n        }\n\n        case SET_DOCUMENT_FILTER: {\n            return {\n                ...state,\n                document_filter: action.filter,\n            };\n        }\n\n        case SET_DOCUMENT_PAGE: {\n            const document_nav_list = state.document_nav_list;\n            if (action.page >= document_nav_list.length) {\n                document_nav_list.push(action.prev_url);\n            }\n            return {\n                ...state,\n                document_page: action.page,\n                document_previous: action.prev_url,\n                document_nav_list: document_nav_list,\n                busy: false,\n            }\n        }\n\n        case SET_DOCUMENT_PAGE_SIZE: {\n            return {\n                ...state,\n                document_page: 0,\n                document_previous: null,\n                document_nav_list: ['null'],\n                document_page_size: action.page_size,\n            }\n        }\n\n        case RESET_DOCUMENT_PAGINATION: {\n            return {\n                ...state,\n                document_page: 0,\n                document_previous: null,\n                document_nav_list: ['null'],\n                busy: false,\n            }\n        }\n\n        case MIND_FIND: {\n            return {\n                ...state,\n                mind_item_list: action.mind_item_list,\n                busy: false,\n            };\n        }\n\n        case SET_MIND_ITEMS_PAGINATED: {\n            return {\n                ...state,\n                mind_item_list: action.data.mindItemList,\n                num_mind_items: action.data.numMindItems,\n                prev_mind_item_filter: action.data.filter,\n                busy: false,\n            };\n        }\n\n        case SET_MIND_ITEM_FILTER: {\n            return {\n                ...state,\n                mind_item_filter: action.filter,\n            };\n        }\n\n        case SET_MIND_ITEM_PAGE: {\n            const mind_item_nav_list = state.mind_item_nav_list;\n            if (action.page >= mind_item_nav_list.length) {\n                mind_item_nav_list.push(action.prev_id);\n            }\n            return {\n                ...state,\n                mind_item_page: action.page,\n                mind_item_previous: action.prev_id,\n                mind_item_nav_list: mind_item_nav_list,\n                busy: false,\n            }\n        }\n\n        case SET_MIND_ITEM_PAGE_SIZE: {\n            return {\n                ...state,\n                mind_item_page: 0,\n                mind_item_previous: null,\n                mind_item_nav_list: ['null'],\n                mind_item_page_size: action.page_size,\n            }\n        }\n\n        case RESET_MIND_ITEM_PAGINATION: {\n            return {\n                ...state,\n                mind_item_page: 0,\n                mind_item_previous: null,\n                mind_item_nav_list: ['null'],\n                busy: false,\n            }\n        }\n\n        case SET_BOT_QUERY_LIST: {\n            return {\n                ...state,\n                bot_query_result_list: action.bot_query_result_list,\n                busy: false,\n            };\n        }\n\n        case SET_BOT_QUERY_STRING: {\n            return {\n                ...state,\n                bot_query: action.bot_query,\n            };\n        }\n\n        case SET_SYNONYMS_PAGINATED: {\n            return {\n                ...state,\n                synonym_list: action.data.synonymList,\n                num_synonyms: action.data.numSynonyms,\n                prev_synonym_filter: action.data.filter,\n                busy: false,\n            };\n        }\n\n        case SET_SYNONYM_PAGE: {\n            const synonym_nav_list = state.synonym_nav_list;\n            if (action.page >= synonym_nav_list.length) {\n                synonym_nav_list.push(action.prev_id);\n            }\n            return {\n                ...state,\n                synonym_page: action.page,\n                synonym_prev_id: action.prev_id,\n                synonym_nav_list: synonym_nav_list,\n                busy: false,\n            }\n        }\n\n        case SET_SYNONYM_PAGE_SIZE: {\n            return {\n                ...state,\n                synonym_page: 0,\n                synonym_prev_id: null,\n                synonym_nav_list: ['null'],\n                synonym_page_size: action.page_size,\n            }\n        }\n\n        case RESET_SYNONYM_PAGINATION: {\n            return {\n                ...state,\n                synonym_page: 0,\n                synonym_prev_id: null,\n                synonym_nav_list: ['null'],\n                busy: false,\n            }\n        }\n\n        case SET_SYNONYM_FILTER: {\n            return {\n                ...state,\n                synonym_filter: action.synonym_filter,\n            };\n        }\n\n\n        case SET_SEMANTICS_PAGINATED: {\n            return {\n                ...state,\n                semantic_list: action.data.semanticList,\n                num_semantics: action.data.numSemantics,\n                prev_semantic_filter: action.data.filter,\n                busy: false,\n            };\n        }\n\n        case SET_SEMANTIC_PAGE: {\n            const semantic_nav_list = state.semantic_nav_list;\n            if (action.page >= semantic_nav_list.length) {\n                semantic_nav_list.push(action.prev_word);\n            }\n            return {\n                ...state,\n                semantic_page: action.page,\n                semantic_prev_word: action.prev_word,\n                semantic_nav_list: semantic_nav_list,\n                busy: false,\n            }\n        }\n\n        case SET_SEMANTIC_PAGE_SIZE: {\n            return {\n                ...state,\n                semantic_page: 0,\n                semantic_prev_id: null,\n                semantic_nav_list: ['null'],\n                semantic_page_size: action.page_size,\n            }\n        }\n\n        case RESET_SEMANTIC_PAGINATION: {\n            return {\n                ...state,\n                semantic_page: 0,\n                semantic_prev_id: null,\n                semantic_nav_list: ['null'],\n                busy: false,\n            }\n        }\n\n\n        case SET_SEMANTIC_DISPLAY_LIST: {\n            return {\n                ...state,\n                semantic_display_category_list: action.semantic_display_category_list,\n                defined_semantic_list: action.defined_semantic_list,\n                busy: false,\n            };\n        }\n\n        case SET_SEMANTIC_FILTER: {\n            return {\n                ...state,\n                semantic_filter: action.semantic_filter,\n            };\n        }\n\n        case SET_SYNSET_LIST: {\n            return {\n                ...state,\n                synset_list: action.synset_list,\n                synset_total_size: action.total_size,\n                busy: false,\n            };\n        }\n\n        case SET_SYNSET_FILTER: {\n            return {\n                ...state,\n                synset_filter: action.synset_filter,\n            };\n        }\n\n        case SET_SYNSET_PAGE: {\n            return {\n                ...state,\n                synset_page: action.page,\n                busy: false,\n            }\n        }\n\n        case SET_SYNSET_PAGE_SIZE: {\n            return {\n                ...state,\n                synset_page: 0,\n                synset_page_size: action.page_size,\n            }\n        }\n\n        case RESET_SYNSET_PAGINATION: {\n            return {\n                ...state,\n                synset_page: 0,\n                busy: false,\n            }\n        }\n\n        case SET_REPORT_DATE: {\n            return {\n                ...state,\n                report_date: Api.toIsoDate(action.report_date),\n            };\n        }\n\n        case SET_REPORT_GRAPHS: {\n            return {\n                ...state,\n                access_frequency: action.access_frequency,\n                general_statistics: action.general_statistics,\n                query_word_frequency: action.query_word_frequency,\n                file_type_statistics: action.file_type_statistics,\n                busy: false,\n            }\n        }\n\n        case SET_OPERATOR_ANSWER: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    op.answer_id = action.id;\n                    op.answer = action.answer;\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case SET_OPERATOR_QUESTION: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    op.question_id = action.id;\n                    op.question = action.question;\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case OPERATOR_READY: {\n            if (action.ready) {\n                const new_list = [];\n                for (const op of state.operators) {\n                    if (op.id === action.operatorId) {\n                        op.operator_ready = true;\n                    }\n                    new_list.push(op);\n                }\n                return {\n                    ...state,\n                    operators: new_list,\n                }\n            } else {\n\n                const new_list = [];\n                for (const op of state.operators) {\n                    if (op.id === action.operatorId) {\n                        const emptyOperator = Api.createOperator();\n                        emptyOperator.id = action.operatorId;\n                        new_list.push(emptyOperator);\n                    } else {\n                        new_list.push(op);\n                    }\n                }\n                return {\n                    ...state,\n                    operators: new_list,\n                }\n            }\n        }\n\n        // next-user / ban-user set\n        case OPERATOR_CLEAR_USER: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    const emptyOperator = Api.createOperator();\n                    emptyOperator.id = action.operatorId; // don't wipe these\n                    emptyOperator.operator_ready = op.operator_ready;\n                    new_list.push(emptyOperator);\n                } else {\n                    new_list.push(op);\n                }\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case ADD_OPERATOR: {\n            const new_list = JSON.parse(JSON.stringify(state.operators));\n            new_list.push(Api.createOperator());\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case REMOVE_OPERATOR: {\n            const new_list = [];\n            for (const operator of state.operators) {\n                if (operator.id !== action.id) {\n                    new_list.push(operator);\n                }\n            }\n            return {\n                ...state,\n                operators: new_list\n            }\n        }\n\n        case STOP_CLIENT_TYPING: {\n            const operator_id = action.operator_id; // client's id\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === operator_id) {\n                    op.is_typing = false;\n                    op.typing_time = 0;\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        // receive a message for the operator - process it\n        case PROCESS_OPERATOR_MESSAGE: {\n            const data = action.message; // the data / message\n\n            // log certain messages\n            if (data.messageType !== mt_ActiveConnections) {\n                // log any message for debugging (except active connection counts)\n                console.debug('operator received data:' + JSON.stringify(data));\n            }\n            // an error has occurred - show it\n            if (data.messageType === mt_Error && data.error.length > 0) {\n                return {\n                    ...state,\n                    error_title: \"error\",\n                    error: data.error,\n                    busy: false,\n                    uploading: false,\n                }\n            }\n            if (data.messageType === mt_Disconnect) {\n                const new_list = [];\n                for (const op of state.operators) {\n                    if (op.id === data.operatorId) {\n                        clear_operator(op);\n                    }\n                    new_list.push(op);\n                }\n                if (data.disconnectedByClient) {\n                    return {\n                        ...state,\n                        operators: new_list,\n                        error_title: \"Disconnected\",\n                        error: \"the client has terminated this conversation.\",\n                    }\n                } else {\n                    return {\n                        ...state,\n                        operators: new_list,\n                    }\n                }\n            }\n            if (data.messageType === mt_TeachingSuccessful) {\n                // needed by javascript interface - not this app\n                return {\n                    ...state\n                }\n            }\n            if (data.messageType === mt_ActiveConnections) {\n                // set number of active connections as told by platform\n                return {\n                    ...state,\n                    num_active_connections: data.connectionCount,\n                }\n            }\n\n            // an is-typing message arrives\n            if (data.messageType === mt_Typing) {\n                // find the organisation\n                const new_list = [];\n                for (const op of state.operators) {\n                    if (op.id === data.toId) {\n                        op.is_typing = data.fromIsTyping;\n                        op.typing_time = Api.getSystemTime() + 2000;\n                    }\n                    new_list.push(op);\n                }\n                return {\n                    ...state,\n                    operators: new_list,\n                }\n            }\n\n            // a message (response) arrives\n            if (data.messageType === mt_Message) {\n\n                if (!data.kbId || data.kbId.length === 0) {\n                    // bad - must have a knowledgebase id\n                    return {\n                        ...state,\n                        error_title: \"error\",\n                        error: \"message does not include a valid knowledge-base id.\",\n                        busy: false,\n                        uploading: false,\n                    }\n\n                } else if (!data.assignedOperatorId || data.assignedOperatorId.length === 0) {\n                    // bad - must have an operator-id so we can assign it\n                    return {\n                        ...state,\n                        error_title: \"error\",\n                        error:  \"message does not include a valid assigned-operator-id.\",\n                        busy: false,\n                        uploading: false,\n                    }\n\n                } else {\n\n                    // find the organisation\n                    let operator = null;\n                    for (const op of state.operators) {\n                        if (op.id === data.assignedOperatorId) {\n                            operator = op;\n                            break;\n                        }\n                    }\n\n                    if (operator != null) {\n\n                        // get the history list (complete / abs list)\n                        let conversation_list = []; // always change the list (must update!)\n                        if (operator.conversation_list.length === 0 && data.conversationList && data.conversationList.length > 0) {\n                            // does the message come with some of the conversation data of previous attempts\n                            conversation_list = []; // reset the list - we have data\n                            let count = conversation_list.length + 1; // unique ids assigned for REACT\n                            for (const index in data.conversationList) {\n                                if (data.conversationList.hasOwnProperty(index)) {\n                                    let ci = data.conversationList[index];\n                                    const is_simsage = ci.origin !== \"user\";\n                                    conversation_list.push({\n                                        id: count, primary: ci.conversationText,\n                                        secondary: is_simsage ? \"You\" : \"user\", used: false, is_simsage: is_simsage\n                                    });\n                                    count += 1;\n                                }\n                            }\n\n                        } else if (data.text && data.text.length > 0) {\n                            // otherwise - get the conversation from what just was said by the user\n                            conversation_list = JSON.parse(JSON.stringify(operator.conversation_list)); // copy existing list\n                            // add new item\n                            conversation_list.push({\n                                id: conversation_list.length + 1, primary: data.text,\n                                secondary: \"user\", used: false, is_simsage: false\n                            });\n                        } else {\n                            // the list didn't change\n                            conversation_list = operator.conversation_list;\n                        }\n\n                        // html 5 notifications enabled?\n                        if (data.text && data.text.length > 0 &&\n                            window.Notification && window.Notification.permission === \"granted\") {  // we have notification permission?\n                            const title = \"the Operator needs your Attention\"; // title\n                            const options = {\n                                body: \"A new question just came in.  Click here to open the operator window.  \\\"\" + data.text + \"\\\"\"\n                            };\n                            const notification = new Notification(title, options);  // display notification\n                            notification.onclick = function () {\n                                window.focus();\n                            }\n                        }\n\n                        if (data.previousAnswer && data.previousAnswer.length > 0) {\n                            operator.prev_answer = data.previousAnswer;\n                        }\n\n                        if (data.clientId.length > 5) {\n                            operator.client_id = data.clientId;\n                            operator.client_kb_id = data.kbId;\n                        }\n\n                        // set the name of the knowledge base connected to\n                        if (data.kbName && data.kbName.length > 0) {\n                            operator.client_kb_name = data.kbName;\n                        }\n\n                        // set potentially changed items\n                        operator.conversation_list = conversation_list;\n                        operator.is_typing = false;\n                        operator.typing_time = 0;\n\n                        // create the new organisation list\n                        const new_list = [];\n                        for (const op of state.operators) {\n                            if (op.id !== data.organisationId) {\n                                new_list.push(op);\n                            } else {\n                                new_list.push(operator);\n                            }\n                        }\n\n                        return {\n                            ...state,\n                            operators: new_list,\n                        }\n\n                    } // organisation != null\n                    else {\n                        console.log(\"organisation id not found:\" + data.organisationId);\n                    }\n\n                } // else\n\n            } // if mt_message\n\n            return {\n                ...state,\n            }\n        }\n\n        case SET_OPERATOR_CONNECTED: {\n            const new_list = [];\n            for (const op of state.operators) {\n                op.operator_ready = false;\n                clear_operator(op);\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operator_connected: action.connected,\n                num_active_connections: 0,\n                operators: new_list,\n            }\n        }\n\n        case CLEAR_PREVIOUS_ANSWER: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    op.current_question = '';\n                    op.prev_answer = '';\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case ADD_CONVERSATION: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    op.conversation_list.push(action.item);\n                }\n                new_list.push(op);\n            }\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n        case MARK_CONVERSATION_USED: {\n            const new_list = [];\n            for (const op of state.operators) {\n                if (op.id === action.operatorId) {\n                    const message_list = op.conversation_list;\n                    for (const message of message_list) {\n                        if (message.id === action.id) {\n                            message.used = true;\n                        }\n                    }\n                    op.conversation_list = message_list;\n                }\n                new_list.push(op);\n            }\n            // copy list to make a new one\n            return {\n                ...state,\n                operators: new_list,\n            }\n        }\n\n\n        case GET_HTML5_NOTIFICATIONS: {\n            return {\n                ...state,\n                html5_notifications: action.status,\n            }\n        }\n\n\n        case SET_LOG_LIST: {\n            return {\n                ...state,\n                log_list: action.log_list,\n                selected_log: action.selected_log,\n                active_components: action.active_components,\n                busy: false,\n            }\n        }\n\n\n    }\n\n    return state;\n};\n\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {createLogger} from \"redux-logger\";\nimport {routerReducer} from \"react-router-redux\";\nimport * as AppReducer from \"./appReducer\";\n\nimport {loadState} from \"./stateLoader\";\n\n// only log when debug = false in settings.js\nconst loggerMiddleware = createLogger({\n    predicate: (getState, action) => window.ENV.debug\n});\n\nexport default function configureStore() {\n    const reducers = {\n        appReducer:  AppReducer.reducer,\n    };\n\n    const middleware = [thunk, loggerMiddleware];\n\n    // In development, use the browser's Redux dev tools extension if installed\n    const enhancers = [];\n    const isDevelopment = process.env.NODE_ENV === \"development\";\n    if (isDevelopment && typeof window !== \"undefined\" && window.devToolsExtension) {\n        enhancers.push(window.devToolsExtension());\n    }\n\n    const rootReducer = combineReducers({\n        ...reducers,\n        routing: routerReducer\n    });\n\n    return createStore(\n        rootReducer,\n        loadState(),\n        compose(\n            applyMiddleware(...middleware),\n            ...enhancers\n        )\n    );\n}\n\n","import {createMuiTheme} from '@material-ui/core/styles';\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\n\nconst uiTheme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        primary: {\n            light: deepOrange[200],\n            main: deepOrange[600],\n            dark: deepOrange[750]\n        },\n        secondary: {\n            light: blueGrey[300],\n            main: blueGrey[500],\n            dark: blueGrey[700]\n        }\n    },\n});\n\nexport default uiTheme;\n","import React, {Component} from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport {clearState} from '../reducers/stateLoader'\n\nconst styles = {\n    background: {\n        margin: '5px',\n        backgroundColor: '#fefefe',\n        padding: '15px',\n        height: '55px',\n        fontFamily: 'Tahoma',\n        fontWeight: '500',\n        color: '#888',\n        borderRadius: '4px',\n    },\n    logo: {\n        float: 'left',\n        width: '140px',\n    },\n    projectTitle: {\n        fontSize: '1.1em',\n        float: 'left',\n        marginLeft: '50px',\n        marginTop: '25px',\n        color: '#888',\n    },\n    homeImageContainer: {\n    },\n    homeImage: {\n        width: '32px',\n    },\n    signOutImageContainer: {\n        paddingTop: '5px',\n    },\n    signOutImage: {\n        width: '22px',\n    },\n    bookButton: {\n        float: 'right',\n        marginRight: '20px',\n    },\n    bookImage: {\n        width: '32px',\n    },\n    versionText: {\n        fontSize: '0.8em',\n    }\n};\n\n\nexport class AppMenu extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            title: props.title,\n            signed_in: props.signed_in,\n            showDocumentation: window.location.toString().indexOf('/#/documentation') < 0,\n        };\n    }\n    goWeb() {\n        window.location = window.ENV.web_base;\n    }\n    signOut() {\n        clearState();\n        window.location = \"/\";\n    }\n    render() {\n        return (\n            <div style={styles.background}>\n                <Grid container spacing={1}>\n                    <Grid item xs={1}>\n                        <img alt=\"SimSage\" title=\"SimSage AI: Intelligent Search for Business\" style={styles.logo} src=\"../images/simsage-logo.svg\" onClick={() => this.goWeb()} />\n                    </Grid>\n                    <Grid item xs={1} />\n                    <Grid item xs={4}>\n                        <span style={styles.projectTitle}>{this.state.title}</span>\n                    </Grid>\n                    <Grid item xs={5} />\n                    <Grid item xs={1}>\n                        {\n                            !this.state.signed_in &&\n                            <div style={styles.homeImageContainer}>\n                                <img src=\"../images/home.svg\" alt=\"home\" title=\"home\" onClick={() => this.goWeb()}\n                                     style={styles.homeImage}/>\n                                 <div style={styles.versionText}>version {window.ENV.version}</div>\n                            </div>\n                        }\n                        {\n                            this.state.signed_in &&\n                            <div style={styles.signOutImageContainer}>\n                                <img src=\"../images/sign-out.svg\" alt=\"sign-out\" title=\"sign-out\"\n                                     onClick={() => { this.signOut() }} style={styles.signOutImage}/>\n                            </div>\n                        }\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default AppMenu;\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport InputLabel from '@material-ui/core/InputLabel';\n\n// display error dialog\nexport class ErrorDialog extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            title: props.title,\n            message: props.message,\n            callback: props.callback,\n            has_error: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleOk() {\n        this.setState({open: false});\n        if (this.state.callback) {\n            this.state.callback();\n        }\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null && nextProps.message) {\n            this.setState({\n                open: (nextProps.message.length > 0),\n                message: nextProps.message,\n                title: nextProps.title\n            })\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>error-dialog.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog className=\"error-dialog\" ref=\"dialog\"\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    open={this.state.open}\n                    fullWidth={true}\n                    maxWidth=\"md\"\n                    onClose={this.handleOk.bind(this)} >\n\n                <DialogTitle id=\"alert-dialog-title\"><InputLabel error={true}>{this.state.title}</InputLabel></DialogTitle>\n                <DialogContent>\n                    <div>\n                        {this.state.message}\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"outlined\" type=\"submit\" color=\"primary\" onClick={() => this.handleOk()}>Ok</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default ErrorDialog;\n","\nexport class GraphHelper {\n\n    // labelList: array of strings\n    // valueList: array of same size of values (data)\n    static setupDoughnut(labelList, valueList) {\n        return {\n            labels: labelList,\n            datasets: [{\n                data: valueList,\n                backgroundColor: [\n                    '#36A2EB',\n                    '#FF6384',\n                    '#56CE56'\n                ],\n                hoverBackgroundColor: [\n                    '#36A2EB',\n                    '#FF6384',\n                    '#56CE56'\n                ]\n            }]\n        };\n    }\n\n    // setup items in a hash-map separated by frequencies\n    static setupMap(map, description) {\n        if (map) {\n            const stat_list = [];\n            const size_list = [100, 10000, 100000, -1];\n            const seen = new Set();\n            for (const i in size_list) {\n                const cf = size_list[i];\n                let labels = [];\n                let values = [];\n                for (const key in map) {\n\n                    if (map.hasOwnProperty(key)) {\n                        let value = map[key];\n                        if ((value === -1 || value < cf) && !seen.has(key)) {\n                            seen.add(key);\n                            labels.push(key);\n                            values.push(value.toFixed(2));\n                        }\n                    }\n                }\n                if (labels.length > 0) {\n                    stat_list.push({\n                        id: i,\n                        labels: labels,\n                        title: description,\n                        datasets: [\n                            {\n                                label: description,\n                                fill: false,\n                                lineTension: 0.1,\n                                backgroundColor: 'rgba(75,192,192,0.4)',\n                                borderColor: 'rgba(75,192,192,1)',\n                                pointBackgroundColor: '#fff',\n                                pointBorderColor: 'rgba(75,192,192,1)',\n                                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                                borderCapStyle: 'butt',\n                                borderDash: [],\n                                borderDashOffset: 0.0,\n                                borderJoinStyle: 'miter',\n                                pointBorderWidth: 1,\n                                pointHoverRadius: 5,\n                                pointHoverBorderWidth: 2,\n                                pointRadius: 1,\n                                pointHitRadius: 10,\n                                data: values\n                            }\n                        ]\n                    });\n                }\n            }\n            return stat_list\n        }\n        return [];\n    }\n\n    // setup a list of values\n    static setupList(list, label, scale = 1.0) {\n        if (list && list.length) {\n            let labels = [];\n            let values = [];\n            const day_map = {};\n            let numGtZero = 0;\n            for (let i = 0; i <= 30; i++) {\n                day_map[i + 1] = list[i];\n                if (list[i] > 0) {\n                    numGtZero += 1;\n                }\n            }\n            if (numGtZero === 0) {\n                return {labels: []};\n            }\n            for (let i = 1; i <= 31; i++) {\n                labels.push('' + i);\n                if (day_map.hasOwnProperty(i) && day_map[i] > 0) {\n                    values.push(day_map[i] / scale);\n                } else {\n                    values.push(0.0);\n                }\n            }\n            return {\n                labels: labels,\n                datasets: [\n                    {\n                        label: label,\n                        fill: false,\n                        lineTension: 0.4,\n                        backgroundColor: 'rgba(192, 75,120,0.4)',\n                        borderColor: 'rgba(192, 75,120,1)',\n                        pointBackgroundColor: '#fff',\n                        pointBorderColor: 'rgba(192, 75, 120,1)',\n                        pointHoverBackgroundColor: 'rgba(192, 75,120,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: values\n                    }\n                ]\n            };\n        }\n        return {labels: []};\n    }\n\n    // setup a list of values {user, system, idle}\n    static setupCpuList(list, num_points = 50, scale = 1.0) {\n        if (list && list.length) {\n            let labels = [];\n            let values1 = [];\n            let values2 = [];\n\n            let listStart = 0;\n            if (list.length > num_points) {\n                listStart = list.length - num_points;\n            }\n            for (let i = listStart; i < listStart + num_points; i++) {\n                labels.push('');\n                if (i < list.length) {\n                    values1.push(list[i].idle / scale);\n                    values2.push((list[i].user + list[i].system) / scale);\n                } else {\n                    values1.push(0.0);\n                    values2.push(0.0);\n                }\n            }\n            return {\n                labels: labels,\n                datasets: [\n                    {\n                        label: \"busy\",\n                        fill: true,\n                        lineTension: 0.1,\n                        backgroundColor: 'rgba(192, 75,120,0.7)',\n                        borderColor: 'rgba(192, 75,120,1)',\n                        pointBackgroundColor: '#fff',\n                        pointBorderColor: 'rgba(192, 75, 120,1)',\n                        pointHoverBackgroundColor: 'rgba(192, 75,120,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: values2\n                    },\n                    {\n                        label: \"idle\",\n                        fill: true,\n                        lineTension: 0.1,\n                        backgroundColor: 'rgba(75,192,120,0.4)',\n                        borderColor: 'rgba(75,192,120,1)',\n                        pointBackgroundColor: '#fff',\n                        pointBorderColor: 'rgba(75, 192,120,1)',\n                        pointHoverBackgroundColor: 'rgba(75,192,120,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 0,\n                        data: values1\n                    },\n                ]\n            };\n        }\n        return {labels: []};\n    }\n\n    // setup the options for a graph\n    static getGraphOptions(title) {\n        return {\n            responsive: true,\n            legend: {\n                position: 'bottom',\n            },\n            hover: {\n                mode: 'label'\n            },\n            scales: {\n                xAxes: [{\n                    display: true,\n                    scaleLabel: {\n                        display: false,\n                        labelString: ''\n                    }\n                }],\n                yAxes: [{\n                    display: true,\n                    ticks: {\n                        beginAtZero: true,\n                        steps: 10,\n                        stepValue: 5,\n                    }\n                }]\n            },\n            title: {\n                display: true,\n                text: title\n            }\n        };\n    }\n\n    // setup the doughnut options for a graph\n    static getDoughnutOptions(title) {\n        return {\n            responsive: true,\n            legend: {\n                position: 'bottom',\n            },\n            hover: {\n                mode: 'label'\n            },\n            title: {\n                display: true,\n                text: title\n            }\n        };\n    }\n\n    // process a list of data (main_list) and put it into processList()\n    static processList(list, main_list, title) {\n\n        if (main_list && main_list.labels && main_list.datasets &&\n            main_list.datasets.length === 1 && main_list.datasets[0].data) {\n\n            list.push([\"\", \"\"]);\n            list.push([title, \"\"]);\n            for (let i = 0; i < main_list.labels.length; i++) {\n                list.push([\"\" + main_list.labels[i], \"\" + main_list.datasets[0].data[i]]);\n            }\n        }\n    }\n\n    // process a set of data (main_list) and put it into list\n    static processSet(list, main_set, title) {\n        for (const temp_list of main_set) {\n            GraphHelper.processList(list, temp_list, title);\n        }\n    }\n\n}\n\n\nexport default GraphHelper;\n","import GraphHelper from '../common/graph-helper'\nimport Api from '../common/api'\n\nimport {\n    ADD_CONVERSATION,\n    BUSY,\n    RESET_SELECTED_KB,\n    CLEAR_PREVIOUS_ANSWER,\n    CLOSE_ERROR,\n    ERROR,\n    GET_CRAWLERS,\n    GET_DOMAINS,\n    GET_DOCUMENTS_PAGINATED,\n    GET_HTML5_NOTIFICATIONS,\n    GET_KNOWLEDGE_BASES,\n    GET_INVENTORIZE_LIST,\n    GET_LICENSE,\n    GET_ORGANISATION_LIST,\n    SET_ORGANISATION_FILTER,\n    GET_INVENTORIZE_BUSY,\n    GET_OS_MESSAGES,\n    GET_STATS,\n    SET_USER_LIST,\n    SET_USER_FILTER,\n    HIDE_NOTIFICATIONS,\n    MARK_CONVERSATION_USED,\n\n    OPERATOR_CLEAR_USER,\n    OPERATOR_READY,\n    PASSWORD_RESET_REQUEST,\n    PROCESS_OPERATOR_MESSAGE,\n    RESET_DOCUMENT_PAGINATION,\n    RESET_PASSWORD,\n    SET_SYNSET_PAGE,\n    SET_SYNSET_PAGE_SIZE,\n    RESTORE_SYSTEM,\n    SELECT_KNOWLEDGE_BASE,\n    SELECT_ORGANISATION,\n    UPDATE_ORGANISATION,\n    SELECT_TAB,\n    SET_BOT_QUERY_LIST,\n    SET_BOT_QUERY_STRING,\n    SET_DOCUMENT_FILTER,\n    SET_DOCUMENT_PAGE,\n    SET_DOCUMENT_PAGE_SIZE,\n\n    SET_MIND_ITEM_FILTER,\n    SET_MIND_ITEMS_PAGINATED,\n    SET_MIND_ITEM_PAGE_SIZE,\n    SET_MIND_ITEM_PAGE,\n    RESET_MIND_ITEM_PAGINATION,\n\n    SET_NOTIFICATION_LIST,\n    SET_OPERATOR_ANSWER,\n    SET_OPERATOR_CONNECTED,\n    SET_OPERATOR_QUESTION,\n    STOP_CLIENT_TYPING,\n    ADD_OPERATOR,\n    REMOVE_OPERATOR,\n    MAX_OPERATORS,\n    SET_REPORT_DATE,\n    SET_REPORT_GRAPHS,\n\n    SET_SEMANTICS_PAGINATED,\n    SET_SEMANTIC_PAGE_SIZE,\n    SET_SEMANTIC_PAGE,\n    RESET_SEMANTIC_PAGINATION,\n    SET_SEMANTIC_FILTER,\n\n    SET_SEMANTIC_DISPLAY_LIST,\n\n    SET_SYNONYM_FILTER,\n    SET_SYNONYMS_PAGINATED,\n    RESET_SYNONYM_PAGINATION,\n    SET_SYNONYM_PAGE_SIZE,\n    SET_SYNONYM_PAGE,\n\n    SET_SYNSET_LIST,\n    SET_SYNSET_FILTER,\n    RESET_SYNSET_PAGINATION,\n    SHOW_NOTIFICATIONS,\n    SIGN_IN,\n    SIGN_OUT,\n    UPDATE_USER,\n    UPLOADING_PROGRAM,\n    UPLOADING_PROGRAM_FINISHED,\n\n    UPLOADING_WP_ARCHIVE,\n    UPLOADING_WP_ARCHIVE_FINISHED,\n\n    SET_LOG_LIST,\n} from \"./actions\";\n\nimport {Comms} from \"../common/comms\";\n\n// not in state system - bad in the state system\nlet notification_busy = false;\n\nasync function _getOrganisationList(current_org_name, current_org_id, _filter, change_organisation, dispatch) {\n    dispatch({type: BUSY, busy: true});\n    let filter = _filter;\n    if (!_filter || _filter.trim() === \"\") {\n        filter = \"null\";\n    }\n    await Comms.http_get('/auth/user/organisations/' + encodeURIComponent(filter),\n        (response) => {\n            const organisation_list = response.data;\n            dispatch({type: GET_ORGANISATION_LIST, organisation_list: organisation_list});\n            // select an organisation if there is one to select and none yet has been selected\n            if (change_organisation && organisation_list && organisation_list.length > 0 && current_org_id.length === 0) {\n                dispatch({type: SELECT_ORGANISATION, name: organisation_list[0].name, id: organisation_list[0].id});\n                // and get the knowledge bases for this org\n                _getKnowledgeBases(organisation_list[0].id, dispatch);\n            }\n        },\n        (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n    )\n}\n\nasync function _getKnowledgeBases(organisation_id, dispatch) {\n    dispatch({type: BUSY, busy: true});\n    await Comms.http_get('/knowledgebase/' + encodeURIComponent(organisation_id),\n        (response) => {\n            dispatch({type: GET_KNOWLEDGE_BASES, knowledge_base_list: response.data});\n        },\n        (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n    )\n}\n\nasync function _getInventorizeList(organisation_id, kb_id, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/document/parquets/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/0/5',\n            (response) => {\n                dispatch({type: GET_INVENTORIZE_LIST, inventorize_list: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getUsers(organisation_id, filter, dispatch) {\n    dispatch({type: BUSY, busy: true});\n    if (!filter || filter.trim() === '') {\n        filter = 'null';\n    }\n    await Comms.http_get('/auth/users/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(filter),\n        (response) => {\n            dispatch({type: SET_USER_LIST, user_list: response.data});\n        },\n        (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n    )\n}\n\nasync function _getCrawlers(organisation_id, kb_id, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/crawler/crawlers/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                dispatch({type: GET_CRAWLERS, crawler_list: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getDomains(organisation_id, kb_id, page, page_size, filter, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/knowledgebase/domains', {\n                \"organisationId\": organisation_id, \"kbId\": kb_id, \"page\": page, \"pageSize\": page_size, \"filter\": filter\n            },\n            (response) => {\n                dispatch({type: GET_DOMAINS, domain_list: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getDocuments(organisation_id, kb_id, document_previous, document_page_size, document_filter, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_post('/document/documents', {\n                \"organisationId\": organisation_id, \"kbId\": kb_id,\n                \"prevUrl\": document_previous ? document_previous : 'null',\n                \"pageSize\": document_page_size,\n                \"filter\": document_filter\n            },\n            (response) => {\n                const document_list = response.data.documentList;\n                const num_documents = response.data.numDocuments;\n                dispatch(({\n                    type: GET_DOCUMENTS_PAGINATED,\n                    document_list: document_list,\n                    num_documents: num_documents,\n                    document_filter: document_filter\n                }));\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getMindItems(organisation_id, kb_id, prev_id, mind_filter, mind_item_page_size, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        const data = {\n            \"organisationId\": organisation_id, \"kbId\": kb_id, \"prevId\": prev_id ? prev_id : \"null\",\n            \"filter\": mind_filter, \"pageSize\": mind_item_page_size\n        };\n        await Comms.http_put('/bot/mind-items', data,\n            (response) => {\n                dispatch({type: SET_MIND_ITEMS_PAGINATED, data: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getSynonyms(organisation_id, kb_id, prev_id, synonym_filter, synonym_page_size, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        const data = {\n            \"organisationId\": organisation_id, \"kbId\": kb_id, \"prevId\": prev_id ? prev_id : \"\",\n            \"filter\": synonym_filter, \"pageSize\": synonym_page_size\n        };\n        await Comms.http_put('/language/synonyms', data,\n            (response) => {\n                dispatch({type: SET_SYNONYMS_PAGINATED, data: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getSemantics(organisation_id, kb_id, prev_word, semantic_filter, semantic_page_size, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/language/semantics', {\n                \"organisationId\": organisation_id, \"kbId\": kb_id, \"prevWord\": prev_word ? prev_word : \"\",\n                \"filter\": semantic_filter, \"pageSize\": semantic_page_size\n            },\n            (response) => {\n                dispatch({type: SET_SEMANTICS_PAGINATED, data: response.data});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getSemanticDisplayCategories(organisation_id, kb_id, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/language/semantic-display-categories/' +\n            encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                dispatch({type: SET_SEMANTIC_DISPLAY_LIST,\n                    semantic_display_category_list: response.data.semanticDisplayCategoryList,\n                    defined_semantic_list: response.data.semanticList\n                });\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            });\n    } else {\n        dispatch({type: SET_SEMANTIC_DISPLAY_LIST, semantic_display_category_list: [], defined_semantic_list: []});\n    }\n}\n\nasync function _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/language/find-syn-sets', {\n                \"organisationId\": organisation_id, \"kbId\": kb_id,\n                \"page\": page, \"pageSize\": page_size, \"filter\": filter\n            },\n            (response) => {\n                dispatch({type: SET_SYNSET_LIST, synset_list: response.data.list, total_size: response.data.totalSize});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getReports(organisation_id, kb_id, year, month, top, dispatch) {\n    if (organisation_id.length > 0 && kb_id.length > 0) {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/stats/stats/' + encodeURIComponent(organisation_id) + '/' +\n                                encodeURIComponent(kb_id) + '/' +\n                                encodeURIComponent(year) + '/' +\n                                encodeURIComponent(month) + '/' +\n                                encodeURIComponent(top),\n            (response) => {\n                const report = response.data;\n                const access_frequency = GraphHelper.setupList(report.accessFrequency, \"access\");\n                const general_statistics = GraphHelper.setupMap(report.generalStatistics, \"system\");\n                const query_word_frequency = GraphHelper.setupMap(report.queryWordFrequency, \"queries (top \" + top + \")\");\n                const file_type_statistics = GraphHelper.setupMap(report.fileTypeStatistics, \"file types\");\n                dispatch({type: SET_REPORT_GRAPHS, access_frequency: access_frequency,\n                                    general_statistics: general_statistics,\n                                    query_word_frequency: query_word_frequency,\n                                    file_type_statistics: file_type_statistics\n                });\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    } else {\n        dispatch({type: SET_REPORT_GRAPHS,\n            access_frequency: GraphHelper.setupList([]),\n            general_statistics: GraphHelper.setupMap([]), query_word_frequency: GraphHelper.setupMap([]),\n            file_type_statistics: GraphHelper.setupMap([])});\n    }\n}\n\n// get list of logs\nasync function _getLogList(session, organisation_id, subSystem, top, dispatch) {\n    if (organisation_id !== '') {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/stats/get-logs/' + encodeURIComponent(session.id) + '/' +\n            encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(subSystem) + '/' +\n            encodeURIComponent(top),\n            (response) => {\n                const data = response.data;\n                dispatch({\n                    type: SET_LOG_LIST, log_list: data.logs, selected_log: subSystem,\n                    active_components: {\n                        \"auth\": data.auth,\n                        \"conversion\": data.conversion, \"crawler\": data.crawler, \"document\": data.document,\n                        \"knowledgebase\": data.knowledgebase, \"language\": data.language,\n                        \"mind\": data.mind, \"operator\": data.operator, \"search\": data.search,\n                        \"stats\": data.stats, \"web\": data.web\n                    }\n                });\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    }\n}\n\nasync function _getHtmlNotifications(dispatch) {\n    if (window.Notification && window.Notification.permission !== \"granted\" &&\n        window.Notification.requestPermission) {\n        //if it is not supported request permission\n        window.Notification.requestPermission(function (status) {\n            if (Notification.permission !== status) {\n                Notification.permission = status;\n            }\n            dispatch({type: GET_HTML5_NOTIFICATIONS, status: status});\n        })\n    }\n}\n\n// setup a page for different tabs\nasync function _setupPage(selected_tab, dispatch, getState) {\n    const organisation_id = getState().appReducer.selected_organisation_id;\n    const organisation = getState().appReducer.selected_organisation;\n    const kb_id = getState().appReducer.selected_knowledgebase_id;\n\n    // don't reset when you're the operator\n    if (selected_tab !== 'operator' &&\n        (!organisation_id || organisation_id.length === 0 || !organisation || organisation.length === 0)) {\n        dispatch({type: RESET_SELECTED_KB});\n    }\n\n    if (selected_tab === 'users' && organisation_id !== '') {\n        const filter = getState().appReducer.user_filter;\n        await _getUsers(organisation_id, filter, dispatch);\n\n    } else if (selected_tab === 'organisations') {\n        const name = getState().appReducer.selected_organisation;\n        const id = getState().appReducer.selected_organisation_id;\n        const filter = getState().appReducer.organisation_filter;\n        await _getOrganisationList(name, id, filter, true, dispatch);\n\n    } else if (selected_tab === 'document sources' && organisation_id !== '' && kb_id !== '') {\n        await _getUsers(organisation_id, '', dispatch);\n        await _getCrawlers(organisation_id, kb_id, dispatch);\n\n    } else if (selected_tab === 'documents' && organisation_id !== '' && kb_id !== '') {\n        dispatch({type:RESET_DOCUMENT_PAGINATION});\n        dispatch({type: BUSY, busy: true});\n        const document_filter = getState().appReducer.document_filter;\n        const document_previous = 'null'; // reset\n        const document_page_size = getState().appReducer.document_page_size;\n        await _getDocuments(organisation_id, kb_id, document_previous, document_page_size, document_filter, dispatch);\n\n    } else if (selected_tab === 'syn-sets' && organisation_id !== '' && kb_id !== '') {\n        const page = getState().appReducer.synset_page;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n        await _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n        dispatch({type: RESET_SYNSET_PAGINATION});\n\n    } else if (selected_tab === 'inventory' && organisation_id !== '' && kb_id !== '') {\n        await _getInventorizeList(organisation_id, kb_id, dispatch);\n\n    } else if (selected_tab === 'reports' && organisation_id !== '' && kb_id !== '') {\n        const top = getState().appReducer.report_num_items;\n        const date = new Date(getState().appReducer.report_date);\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        await _getReports(organisation_id, kb_id, year, month, top, dispatch);\n\n    } else if (selected_tab === 'logs' && organisation_id !== '') {\n        const session = getState().appReducer.session;\n        const subSystem = getState().appReducer.selected_log;\n        const top = getState().appReducer.log_size;\n        await _getLogList(session, organisation_id, subSystem, top, dispatch);\n\n    } else if (selected_tab === 'mind') {\n        dispatch({type:RESET_MIND_ITEM_PAGINATION});\n        dispatch({type: BUSY, busy: true});\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        if (organisation_id && kb_id) {\n            await _getMindItems(organisation_id, kb_id, null, mind_item_filter, mind_item_page_size, dispatch);\n        } else {\n            dispatch({type: SET_MIND_ITEMS_PAGINATED, data: {mindItemList: [], numMindItems: 0, filter: ''} });\n        }\n\n    } else if (selected_tab === 'synonyms') {\n        dispatch({type: RESET_SYNONYM_PAGINATION});\n        dispatch({type: BUSY, busy: true});\n        const synonym_filter = getState().appReducer.synonym_filter;\n        const synonym_page_size = getState().appReducer.synonym_page_size;\n        if (organisation_id && kb_id) {\n            await _getSynonyms(organisation_id, kb_id, \"\", synonym_filter, synonym_page_size, dispatch);\n        } else {\n            dispatch({type: SET_SYNONYMS_PAGINATED, data: {synonymList: [], numSynonyms: 0, filter: \"\"} });\n        }\n\n    } else if (selected_tab === 'semantics') {\n        dispatch({type: RESET_SEMANTIC_PAGINATION});\n        dispatch({type: BUSY, busy: true});\n        const semantic_filter = getState().appReducer.semantic_filter;\n        const semantic_page_size = getState().appReducer.semantic_page_size;\n        if (organisation_id && kb_id) {\n            await _getSemantics(organisation_id, kb_id, \"\", semantic_filter, semantic_page_size, dispatch);\n        } else {\n            dispatch({type: SET_SEMANTICS_PAGINATED, data: {semanticList: [], numSemantics: 0, filter: \"\"} });\n        }\n\n    } else if (selected_tab === 'active directory') {\n        dispatch({type: BUSY, busy: true});\n        if (organisation_id && kb_id) {\n            await _getDomains(organisation_id, kb_id, 0, 10, '', dispatch);\n        } else {\n            dispatch({type: GET_DOMAINS, domain_list: []});\n        }\n    } else if (selected_tab === 'semantic categories') {\n        await _getSemanticDisplayCategories(organisation_id, kb_id, dispatch);\n    }\n\n}\n\n\n// application creators / actions\nexport const appCreators = {\n\n    // do a sign in\n    signIn: (email, password) => async (dispatch, getState) => {\n        if (email && email.length > 0 && password && password.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            await Comms.http_post('/auth/sign-in', {\"email\": email, \"password\": password},\n                (response) => {\n                    dispatch({type: SIGN_IN, session: response.data.session, user: response.data.user});\n                    window.location = '/#/home';\n                },\n                (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n            )\n        } else {\n            dispatch({type: ERROR, title: \"Error\", error: 'please complete and check all fields'});\n        }\n    },\n\n    signOut: () => ({type: SIGN_OUT}),\n\n    notBusy: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: false});\n    },\n\n    passwordResetRequest: (email) => ({type: PASSWORD_RESET_REQUEST}),\n\n    resetPassword: (email, newPassword, reset_id) => ({type: RESET_PASSWORD, email, newPassword, reset_id}),\n\n    getStats: (year, month, top) => ({type: GET_STATS, year, month, top}),\n\n    getOSMessages: () => ({type: GET_OS_MESSAGES}),\n\n    restoreSystem: (data) => ({type: RESTORE_SYSTEM, data}),\n\n    getLicense: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_get('/auth/license',\n            (response) => {\n                dispatch(({type: GET_LICENSE, license: response.data}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    installLicense: (license_str) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_post('/auth/license', {\"license\": license_str},\n            (response) => {\n                dispatch(({type: GET_LICENSE, license: response.data}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    setError: (title, error) => ({type: ERROR, title, error}),\n\n    closeError: () => ({type: CLOSE_ERROR}),\n\n    // set the active tab\n    selectTab: (selected_tab) => async (dispatch, getState) => {\n        dispatch(({type: SELECT_TAB, selected_tab}));\n        await _setupPage(selected_tab, dispatch, getState);\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Notification system\n\n    hideNotifications: () => ({type: HIDE_NOTIFICATIONS}),\n\n    showNotifications: () => ({type: SHOW_NOTIFICATIONS}),\n\n    getNotifications: () => async (dispatch, getState) => {\n        if (!notification_busy) {\n            notification_busy = true;\n            const nl = getState().appReducer.notification_list;\n            await Comms.http_get('/stats/stats/os',\n                (response) => {\n                    const notification_list = Api.merge_notifications(nl, response.data.notificationList);\n                    if (notification_list.length !== nl.length) { // update?\n                        dispatch(({type: SET_NOTIFICATION_LIST, notification_list}));\n                    }\n                    notification_busy = false;\n                },\n                (errStr) => {\n                    console.log(\"error getting os-messages:\" + errStr);\n                    notification_busy = false;\n                }\n            )\n        }\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Organisations\n\n    // retrieve list of all organisations from server\n    getOrganisationList: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const name = getState().appReducer.selected_organisation;\n        const id = getState().appReducer.selected_organisation_id;\n        const filter = getState().appReducer.organisation_filter;\n        await _getOrganisationList(name, id, filter, true, dispatch);\n    },\n\n    // select an organisation for operational stuff\n    selectOrganisation: (name, id) => async (dispatch, getState) => {\n        if (id && id.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            dispatch(({type: SELECT_ORGANISATION, name, id}));\n            await _getKnowledgeBases(id, dispatch);\n\n            const selected_tab = getState().appReducer.selected_tab;\n            await _setupPage(selected_tab, dispatch, getState);\n        }\n    },\n\n    setOrganisationFilter: (filter) => ({type: SET_ORGANISATION_FILTER, filter}),\n\n    // organisation save\n    updateOrganisation: (organisation) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/auth/organisation',\n            organisation,\n            (response) => {\n                dispatch(({type: UPDATE_ORGANISATION, organisation: response.data}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    // organisation remove\n    deleteOrganisation: (organisation_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const name = getState().appReducer.selected_organisation;\n        const id = getState().appReducer.selected_organisation_id;\n        const filter = getState().appReducer.organisation_filter;\n        await Comms.http_delete('/auth/organisation/' + encodeURIComponent(organisation_id),\n            (response) => {\n                _getOrganisationList(name, id, filter, false, dispatch);\n                // did we just delete the active organisation?\n                if (id === organisation_id) {\n                    dispatch({type: SELECT_ORGANISATION, name: '', id: ''});\n                    dispatch({type: GET_KNOWLEDGE_BASES, knowledge_base_list: []});\n                }\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Knowledge bases\n\n    // selected a knowledge base for operational stuff\n    selectKnowledgeBase: (name, id) => async (dispatch, getState) => {\n        if (id && id.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            const selected_tab = getState().appReducer.selected_tab;\n            dispatch({type: SELECT_KNOWLEDGE_BASE, name, id});\n            await _setupPage(selected_tab, dispatch, getState);\n        }\n    },\n\n    // retrieve list of all organisations from server\n    getKnowledgeBases: () => async (dispatch, getState) => {\n        await _getKnowledgeBases(getState().appReducer.selected_organisation_id, dispatch);\n    },\n\n    optimizeIndexes: (organisation_id, kb_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const data = {'organisationId': organisation_id, 'kbId': kb_id};\n        await Comms.http_put('/language/optimize-indexes', data,\n            (response) => {\n                dispatch({type: BUSY, busy: false});\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    deleteKnowledgeBase: (organisation_id, kb_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_delete('/knowledgebase/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                _getKnowledgeBases(organisation_id, dispatch);\n                dispatch({type: SELECT_KNOWLEDGE_BASE, name: '', id: ''});\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    updateKnowledgeBase: (organisation_id, kb_id, name, email, security_id, enabled, max_queries_per_day,\n                          analytics_window_size_in_months, operator_enabled, capacity_warnings,\n                          created, index_optimization_schedule) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const payload = {\"kbId\": kb_id, \"organisationId\": organisation_id, \"name\": name, \"email\": email,\n            \"securityId\": security_id, \"maxQueriesPerDay\": max_queries_per_day, \"enabled\": enabled,\n            \"analyticsWindowInMonths\": analytics_window_size_in_months, \"operatorEnabled\": operator_enabled,\n            \"capacityWarnings\": capacity_warnings, \"created\": created, \"indexOptimizationSchedule\": index_optimization_schedule};\n        console.log(payload);\n        await Comms.http_put('/knowledgebase/', payload,\n            (response) => {\n                _getKnowledgeBases(organisation_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    createInventory: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_post('/document/inventorize',\n            {\"kbId\": kb_id, \"organisationId\": organisation_id},\n            (response) => {\n                _getInventorizeList(organisation_id, kb_id, dispatch);\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    },\n\n    getInventoryList: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await _getInventorizeList(organisation_id, kb_id, dispatch);\n    },\n\n    // remove a document (delete) from the system\n    deleteInventoryItem: (dateTime) => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        if (organisation_id.length > 0 && kb_id.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            const full_url = '/document/parquet/' + encodeURIComponent(organisation_id) + '/' +\n                                encodeURIComponent(kb_id) + '/' + encodeURIComponent(dateTime);\n            await Comms.http_delete(full_url,\n                (response) => {\n                    _getInventorizeList(organisation_id, kb_id, dispatch);\n                },\n                (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n            )\n        }\n    },\n\n    getInventoryBusy: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        if (organisation_id.length > 0 && kb_id.length > 0) {\n            dispatch({type: BUSY, busy: true});\n            await Comms.http_get('/document/inventorize/' + encodeURIComponent(organisation_id),\n                (response) => {\n                    dispatch({type: GET_INVENTORIZE_BUSY, busy: response.data});\n                },\n                (errStr) => {\n                    dispatch({type: ERROR, title: \"Error\", error: errStr})\n                }\n            )\n        }\n    },\n\n    forceInventoryBusy: () => (dispatch, getState) => {\n        dispatch({type: GET_INVENTORIZE_BUSY, busy: true});\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Users\n\n    getUsers: (organisation_id) => async (dispatch, getState) => {\n        const filter = getState().appReducer.user_filter;\n        await _getUsers(organisation_id, filter, dispatch)\n    },\n\n    updateUser: (organisation_id, user_id, name, surname, email, password, role_list, kb_list) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const filter = getState().appReducer.user_filter;\n        const signed_in_user = getState().appReducer.user;\n        const actual_role_data = [];\n        for (const roleStr of role_list) {\n            actual_role_data.push({\"userId\": user_id, \"organisationId\": organisation_id, \"role\": roleStr});\n        }\n        const actual_kb_list_data = [];\n        for (const kb of kb_list) {\n            actual_kb_list_data.push({\"userId\": user_id, \"organisationId\": organisation_id, \"kbId\": kb.kbId});\n        }\n        await Comms.http_put('/auth/user/' + encodeURIComponent(organisation_id),\n            {\"id\": user_id, \"password\": password, \"firstName\": name, \"surname\": surname, \"email\": email, \"roles\": actual_role_data,\n                \"operatorKBList\": actual_kb_list_data},\n            (response) => {\n                const user = response.data;\n                let had_operator_role = false;\n                let has_operator_role = false;\n                if (user && signed_in_user && user.id === signed_in_user.id) {\n                    for (const role of signed_in_user.roles) {\n                        if (role && role.role === 'operator') {\n                            had_operator_role = true;\n                        }\n                    }\n                    for (const role of user.roles) {\n                        if (role && role.role === 'operator') {\n                            has_operator_role = true;\n                        }\n                    }\n                    // we need to ask if they want to receive html events!\n                    if (!had_operator_role && has_operator_role) {\n                        _getHtmlNotifications(dispatch);\n                    }\n                    dispatch({type: UPDATE_USER, user: user});\n                }\n                _getUsers(organisation_id, filter, dispatch)\n\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    deleteUser: (organisation_id, user_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const filter = getState().appReducer.user_filter;\n        await Comms.http_delete('/auth/organisation/user/' + encodeURIComponent(user_id) + '/' +\n            encodeURIComponent(organisation_id),\n            (response) => {\n                _getUsers(organisation_id, filter, dispatch)\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    setUserFilter: (filter) => ({type: SET_USER_FILTER, filter}),\n\n    uploadProgram: (payload) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: UPLOADING_PROGRAM}));\n        await Comms.http_put('/knowledgebase/upload', payload,\n            (response) => {\n                dispatch(({type: UPLOADING_PROGRAM_FINISHED}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        );\n    },\n\n    // {\"organisationId\": \"\", \"kbId\": \"\", \"sid\": \"\", \"sourceId\": 0, \"data\": \";base64,\" + data}\n    wpUploadArchive: (payload) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: UPLOADING_WP_ARCHIVE}));\n        // get the sid\n        const kb_list = getState().appReducer.knowledge_base_list;\n        let sid = \"\";\n        if (kb_list) {\n            for (const kb of kb_list) {\n                if (kb.kbId === payload.kbId) {\n                    sid = kb.securityId;\n                    break;\n                }\n            }\n        }\n        payload.sid = sid;\n        await Comms.http_post('/crawler/admin/upload/archive', payload,\n            (response) => {\n                dispatch(({type: UPLOADING_WP_ARCHIVE_FINISHED}));\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        );\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Crawlers\n\n    getCrawlers: (organisation_id, kb_id) => async (dispatch, getState) => {\n        await _getCrawlers(organisation_id, kb_id, dispatch)\n    },\n\n    updateCrawler: (crawler) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_post('/crawler/crawler', crawler,\n            (response) => {\n                _getCrawlers(organisation_id, kb_id, dispatch)\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    deleteCrawler: (crawler_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_delete('/crawler/crawler/' + encodeURIComponent(organisation_id) + '/' +\n                                    encodeURIComponent(kb_id) + '/' + encodeURIComponent(crawler_id),\n            (response) => {\n                _getCrawlers(organisation_id, kb_id, dispatch)\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Active Directory / Domains\n\n    getDomains: (organisation_id, kb_id) => async (dispatch, getState) => {\n        await _getDomains(organisation_id, kb_id, 0, 10, \"\", dispatch);\n    },\n\n    updateDomain: (domain) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_put('/knowledgebase/domain', domain,\n            (response) => {\n                _getDomains(organisation_id, kb_id, 0, 10, \"\", dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    testDomain: (domain) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/knowledgebase/domain/test', domain,\n            (response) => {\n                dispatch({type: ERROR, title: \"Success\", error: \"Connected Successfully\"});\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n\n    deleteDomain: (domain_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_delete('/knowledgebase/domain/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(domain_id),\n            (response) => {\n                _getDomains(organisation_id, kb_id, 0, 10, \"\", dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Documents\n\n    getDocuments: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const document_filter = getState().appReducer.document_filter;\n        const prev_document_filter = getState().appReducer.prev_document_filter;\n        const document_page_size = getState().appReducer.document_page_size;\n        let document_previous = getState().appReducer.document_previous;\n        // filter criteria changed?\n        if (prev_document_filter !== document_filter) {\n            dispatch({type:RESET_DOCUMENT_PAGINATION});\n            document_previous = null;\n        }\n        if (organisation_id && kb_id) {\n            await _getDocuments(organisation_id, kb_id, document_previous, document_page_size, document_filter, dispatch);\n        }\n    },\n\n    // update the document search filter (document_filter)\n    setDocumentFilter: (filter) => ({type: SET_DOCUMENT_FILTER, filter}),\n\n    // remove a document (delete) from the system\n    deleteDocument: (url, crawler_id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const document_filter = getState().appReducer.document_filter;\n        const prev_document_filter = getState().appReducer.prev_document_filter;\n        const document_page_size = getState().appReducer.document_page_size;\n        let document_previous = getState().appReducer.document_previous;\n        if (organisation_id && kb_id && url) {\n            // filter criteria changed?\n            if (prev_document_filter !== document_filter) {\n                dispatch({type:RESET_DOCUMENT_PAGINATION});\n                document_previous = null;\n            }\n            const full_url = '/document/document/' + encodeURIComponent(organisation_id) + '/' +\n                                    encodeURIComponent(kb_id) + '/' + btoa(url) + '/' + encodeURIComponent(crawler_id);\n            await Comms.http_delete(full_url,\n                (response) => {\n                    _getDocuments(organisation_id, kb_id, document_previous, document_page_size, document_filter, dispatch);\n                },\n                (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n            )\n        }\n    },\n\n    // update the document paged set\n    setDocumentPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const document_filter = getState().appReducer.document_filter;\n        const document_page_size = getState().appReducer.document_page_size;\n\n        const prevPage = getState().appReducer.document_page;\n        const document_nav_list = getState().appReducer.document_nav_list;\n        const document_list = getState().appReducer.document_list;\n        if (page !== prevPage && page >= 0) {\n            if (page > prevPage) {\n                if (document_list.length > 0) {\n                    const prev_url = document_list[document_list.length - 1].url;\n                    dispatch(({type: SET_DOCUMENT_PAGE, page, prev_url}));\n                    await _getDocuments(organisation_id, kb_id, prev_url, document_page_size, document_filter, dispatch);\n                }\n            } else if (page < document_nav_list.length) {\n                const prev_url = document_nav_list[page];\n                dispatch(({type: SET_DOCUMENT_PAGE, page, prev_url}));\n                await _getDocuments(organisation_id, kb_id, prev_url, document_page_size, document_filter, dispatch);\n            }\n        }\n    },\n\n    // update the document paged set\n    setDocumentPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_DOCUMENT_PAGE_SIZE, page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const document_filter = getState().appReducer.document_filter;\n        await _getDocuments(organisation_id, kb_id, null, page_size, document_filter, dispatch);\n    },\n\n\n    // refresh / re-parse etc. a document\n    reprocessDocument: (document) => async (dispatch, getState) => {\n        const document_filter = getState().appReducer.document_filter;\n        const document_previous = getState().appReducer.document_previous;\n        const page_size = getState().appReducer.document_page_size;\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_post('/document/reprocess', {\n                \"organisationId\": document.organisationId, \"kbId\": document.kbId, \"url\": document.url\n            },\n            (response) => {\n                _getDocuments(document.organisationId, document.kbId, document_previous, page_size, document_filter, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // mind items\n\n    getMindItems: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const prev_mind_item_filter = getState().appReducer.prev_mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        let prev_id = getState().appReducer.mind_item_previous;\n        // filter criteria changed?\n        if (prev_mind_item_filter !== mind_item_filter) {\n            dispatch({type:RESET_DOCUMENT_PAGINATION});\n            prev_id = null;\n        }\n        if (organisation_id && kb_id) {\n            await _getMindItems(organisation_id, kb_id, prev_id, mind_item_filter, mind_item_page_size, dispatch);\n        }\n    },\n\n    // update the mind-item paged set\n    setMindItemPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mi_filter = getState().appReducer.mind_item_filter;\n        const mi_page_size = getState().appReducer.mind_item_page_size;\n        const prevPage = getState().appReducer.mind_item_page;\n        const mind_item_nav_list = getState().appReducer.mind_item_nav_list;\n        const mind_item_list = getState().appReducer.mind_item_list;\n        if (page !== prevPage && page >= 0) {\n            if (page > prevPage) {\n                if (mind_item_list.length > 0) {\n                    const prev_id = mind_item_list[mind_item_list.length - 1].id;\n                    dispatch(({type: SET_MIND_ITEM_PAGE, page, prev_id}));\n                    await _getMindItems(organisation_id, kb_id, prev_id, mi_filter, mi_page_size, dispatch);\n                }\n            } else if (page < mind_item_nav_list.length) {\n                const prev_id = mind_item_nav_list[page];\n                dispatch(({type: SET_MIND_ITEM_PAGE, page, prev_id}));\n                await _getMindItems(organisation_id, kb_id, prev_id, mi_filter, mi_page_size, dispatch);\n            }\n        }\n    },\n\n    // update the mind-item paged set\n    setMindItemPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_MIND_ITEM_PAGE_SIZE, page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mi_filter = getState().appReducer.mind_item_filter;\n        await _getMindItems(organisation_id, kb_id, null, mi_filter, page_size, dispatch);\n    },\n\n\n    // update the mind item search filter\n    setMindItemFilter: (filter) => ({type: SET_MIND_ITEM_FILTER, filter}),\n\n    // remove a mind item by id\n    deleteMindItem: (id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        const prev_id = getState().appReducer.mind_item_previous;\n        await Comms.http_delete('/bot/ui-delete/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(id),\n            (response) => {\n                _getMindItems(organisation_id, kb_id, prev_id, mind_item_filter, mind_item_page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    // remove a mind item by id\n    deleteAllMindItems: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        const prev_id = getState().appReducer.mind_item_previous;\n        await Comms.http_delete('/bot/ui-delete-all/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(kb_id),\n            (response) => {\n                _getMindItems(organisation_id, kb_id, prev_id, mind_item_filter, mind_item_page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    // save a mind item to simsage\n    saveMindItem: (mindItem) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const mind_item_filter = getState().appReducer.mind_item_filter;\n        const mind_item_page_size = getState().appReducer.mind_item_page_size;\n        const prev_id = getState().appReducer.mind_item_previous;\n        await Comms.http_put('/bot/ui-save/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id), mindItem,\n            (response) => {\n                _getMindItems(organisation_id, kb_id, prev_id, mind_item_filter, mind_item_page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr}) }\n        )\n    },\n\n    botQuery: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const bot_query_page_size = getState().appReducer.bot_query_page_size;\n        const bot_query_threshold = getState().appReducer.bot_query_threshold;\n        const bot_query = getState().appReducer.bot_query;\n        if (bot_query.length > 0) {\n            const data = {\n                organisationId: organisation_id,\n                kbId: kb_id,\n                query: bot_query,\n                numResults: bot_query_page_size,\n                scoreThreshold: bot_query_threshold,\n            };\n            await Comms.http_put('/bot/query', data,\n                (response) => {\n                    dispatch({type: SET_BOT_QUERY_LIST, bot_query_result_list: response.data});\n                },\n                (errStr) => {\n                    dispatch({type: ERROR, title: \"Error\", error: errStr})\n                }\n            );\n        } else {\n            dispatch({type: SET_BOT_QUERY_LIST, bot_query_result_list: []});\n        }\n    },\n\n    setBotQueryString: (query) => async (dispatch, getState) => {\n        dispatch({type: SET_BOT_QUERY_STRING, bot_query: query});\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // synonyms\n\n    getSynonyms: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const synonym_filter = getState().appReducer.synonym_filter;\n        const prev_synonym_filter = getState().appReducer.prev_synonym_filter;\n        const synonym_page_size = getState().appReducer.synonym_page_size;\n        let prev_id = getState().appReducer.synonym_prev_id;\n        // filter criteria changed?\n        if (prev_synonym_filter !== synonym_filter) {\n            dispatch({type: RESET_SYNONYM_PAGINATION});\n            prev_id = null;\n        }\n        if (organisation_id && kb_id) {\n            await _getSynonyms(organisation_id, kb_id, prev_id, synonym_filter, synonym_page_size, dispatch);\n        }\n    },\n\n    // update the synonym page\n    setSynonymPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const synonym_filter = getState().appReducer.synonym_filter;\n        const synonym_page_size = getState().appReducer.synonym_page_size;\n        const prevPage = getState().appReducer.synonym_page;\n        const synonym_nav_list = getState().appReducer.synonym_nav_list;\n        const synonym_list = getState().appReducer.synonym_list;\n        if (page !== prevPage && page >= 0) {\n            if (page > prevPage) {\n                if (synonym_list.length > 0) {\n                    const prev_id = synonym_list[synonym_list.length - 1].id;\n                    dispatch(({type: SET_SYNONYM_PAGE, page, prev_id}));\n                    await _getSynonyms(organisation_id, kb_id, prev_id, synonym_filter, synonym_page_size, dispatch);\n                }\n            } else if (page < synonym_nav_list.length) {\n                const prev_id = synonym_nav_list[page];\n                dispatch(({type: SET_SYNONYM_PAGE, page, prev_id}));\n                await _getSynonyms(organisation_id, kb_id, prev_id, synonym_filter, synonym_page_size, dispatch);\n            }\n        }\n    },\n\n    // update the synonym list page-size\n    setSynonymPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_SYNONYM_PAGE_SIZE, page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const synonym_filter = getState().appReducer.synonym_filter;\n        await _getSynonyms(organisation_id, kb_id, null, synonym_filter, page_size, dispatch);\n    },\n\n    deleteSynonym: (id) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const prev_id = getState().appReducer.synonym_prev_id;\n        const filter = getState().appReducer.synonym_filter;\n        const page_size = getState().appReducer.synonym_page_size;\n        await Comms.http_delete('/language/delete-synonym/' + encodeURIComponent(organisation_id) + '/' +\n                                    encodeURIComponent(kb_id) + '/' + encodeURIComponent(id),\n            (response) => {\n                _getSynonyms(organisation_id, kb_id, prev_id, filter, page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    saveSynonym: (synonym) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const prev_id = getState().appReducer.synonym_prev_id;\n        const filter = getState().appReducer.synonym_filter;\n        const page_size = getState().appReducer.synonym_page_size;\n        Comms.http_put('/language/save-synonym/' + encodeURIComponent(organisation_id) + '/' +\n                            encodeURIComponent(kb_id), synonym,\n            (response) => {\n                _getSynonyms(organisation_id, kb_id, prev_id, filter, page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    setSynonymFilter: (filter) => async (dispatch, getState) => {\n        dispatch({type: SET_SYNONYM_FILTER, synonym_filter: filter});\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // semantics\n\n    getSemantics: () => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const semantic_filter = getState().appReducer.semantic_filter;\n        const prev_semantic_filter = getState().appReducer.prev_semantic_filter;\n        const semantic_page_size = getState().appReducer.semantic_page_size;\n        let prev_word = getState().appReducer.semantic_prev_word;\n        // filter criteria changed?\n        if (prev_semantic_filter !== semantic_filter) {\n            dispatch({type: RESET_SEMANTIC_PAGINATION});\n            prev_word = null;\n        }\n        if (organisation_id && kb_id) {\n            await _getSemantics(organisation_id, kb_id, prev_word, semantic_filter, semantic_page_size, dispatch);\n        }\n    },\n\n    // update the semantic page\n    setSemanticPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const semantic_filter = getState().appReducer.semantic_filter;\n        const semantic_page_size = getState().appReducer.semantic_page_size;\n        const prevPage = getState().appReducer.semantic_page;\n        const semantic_nav_list = getState().appReducer.semantic_nav_list;\n        const semantic_list = getState().appReducer.semantic_list;\n        if (page !== prevPage && page >= 0) {\n            if (page > prevPage) {\n                if (semantic_list.length > 0) {\n                    const prev_word = semantic_list[semantic_list.length - 1].word;\n                    dispatch(({type: SET_SEMANTIC_PAGE, page, prev_word: prev_word}));\n                    await _getSemantics(organisation_id, kb_id, prev_word, semantic_filter, semantic_page_size, dispatch);\n                }\n            } else if (page < semantic_nav_list.length) {\n                const prev_word = semantic_nav_list[page];\n                dispatch(({type: SET_SEMANTIC_PAGE, page, prev_word}));\n                await _getSemantics(organisation_id, kb_id, prev_word, semantic_filter, semantic_page_size, dispatch);\n            }\n        }\n    },\n\n    // update the semantic page-size\n    setSemanticPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_SEMANTIC_PAGE_SIZE, page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const semantic_filter = getState().appReducer.semantic_filter;\n        await _getSemantics(organisation_id, kb_id, null, semantic_filter, page_size, dispatch);\n    },\n\n    deleteSemantic: (word) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const filter = getState().appReducer.semantic_filter;\n        const prev_word = getState().appReducer.semantic_prev_word;\n        const page_size = getState().appReducer.semantic_page_size;\n        await Comms.http_delete('/language/delete-semantic/' + encodeURIComponent(organisation_id) + '/' +\n                                    encodeURIComponent(kb_id) + '/' + encodeURIComponent(word),\n            (response) => {\n                _getSemantics(organisation_id, kb_id, prev_word, filter, page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    findSemantics: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const filter = getState().appReducer.semantic_filter;\n        const page_size = getState().appReducer.semantic_page_size;\n        const prev_word = getState().appReducer.semantic_prev_word;\n        await _getSemantics(organisation_id, kb_id, prev_word, filter, page_size, dispatch);\n    },\n\n    saveSemantic: (semantic) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const filter = getState().appReducer.semantic_filter;\n        const page_size = getState().appReducer.semantic_page_size;\n        const prev_word = '';\n        Comms.http_put('/language/save-semantic/' + encodeURIComponent(organisation_id) + '/' +\n                        encodeURIComponent(kb_id), semantic,\n            (response) => {\n                _getSemantics(organisation_id, kb_id, prev_word, filter, page_size, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    setSemanticFilter: (filter) => async (dispatch, getState) => {\n        dispatch({type: SET_SEMANTIC_FILTER, semantic_filter: filter});\n    },\n\n    getSemanticDisplayCategories: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await _getSemanticDisplayCategories(organisation_id, kb_id, dispatch);\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // semantic display categories\n\n    saveSemanticDisplayCategory: (prevDisplayName, displayName, semanticList) => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_put('/language/semantic-display-category/',\n            {\"organisationId\": organisation_id, \"kbId\": kb_id, \"prevDisplayName\": prevDisplayName,\n                    \"displayName\": displayName, \"semanticList\": semanticList},\n            (response) => {\n                _getSemanticDisplayCategories(organisation_id, kb_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    deleteSemanticDisplayCategory: (displayName) => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        await Comms.http_delete('/language/semantic-display-category/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(displayName),\n            (response) => {\n                _getSemanticDisplayCategories(organisation_id, kb_id, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // syn-sets\n\n    deleteSynSet: (lemma) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page = getState().appReducer.synset_page;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n        await Comms.http_delete('/language/delete-syn-set/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id) + '/' + encodeURIComponent(lemma),\n            (response) => {\n                _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    findSynSets: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page = getState().appReducer.synset_page;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n        await _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n    },\n\n    saveSynSet: (syn_set) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page = getState().appReducer.synset_page;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n        Comms.http_put('/language/save-syn-set/' + encodeURIComponent(organisation_id) + '/' +\n            encodeURIComponent(kb_id), syn_set,\n            (response) => {\n                _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n            },\n            (errStr) => { dispatch({type: ERROR, title: \"Error\", error: errStr})}\n        )\n    },\n\n    setSynSetFilter: (filter) => async (dispatch, getState) => {\n        dispatch({type: SET_SYNSET_FILTER, synset_filter: filter});\n    },\n\n    // update the syn-set page\n    setSynSetPage: (page) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page_size = getState().appReducer.synset_page_size;\n        const filter = getState().appReducer.synset_filter;\n\n        dispatch(({type: SET_SYNSET_PAGE, page: page}));\n        await _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n    },\n\n    // update the syn-set pagination size\n    setSynSetPageSize: (page_size) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        dispatch(({type: SET_SYNSET_PAGE_SIZE, page_size: page_size}));\n\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const page = getState().appReducer.synset_page;\n        const filter = getState().appReducer.synset_filter;\n\n        await _getSynSets(organisation_id, kb_id, page, page_size, filter, dispatch);\n    },\n\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // reports\n\n    setReportDate: (report_date) => ({type: SET_REPORT_DATE, report_date}),\n\n    getReports: () => async (dispatch, getState) => {\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const kb_id = getState().appReducer.selected_knowledgebase_id;\n        const top = getState().appReducer.report_num_items;\n        const date = new Date(getState().appReducer.report_date);\n        const year = date.getFullYear();\n        const month = date.getMonth() + 1;\n        await _getReports(organisation_id, kb_id, year, month, top, dispatch);\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // operator\n\n    // add a new message to the list\n    processOperatorMessage: (message) => ({type: PROCESS_OPERATOR_MESSAGE, message}),\n\n    // set connected status of operator\n    setOperatorConnected: (connected) => ({type: SET_OPERATOR_CONNECTED, connected}),\n\n    // add a conversation to the list\n    addConversation: (operatorId, item) => ({type: ADD_CONVERSATION, operatorId, item}),\n\n    markConversationItemUsed: (operatorId, id) => ({type: MARK_CONVERSATION_USED, operatorId, id}),\n\n    operatorReady: (operatorId, ready) => ({type: OPERATOR_READY, operatorId, ready}),\n\n    setOperatorAnswer: (operatorId, id, answer) => ({type: SET_OPERATOR_ANSWER, operatorId, id, answer}),\n\n    setOperatorQuestion: (operatorId, id, question) => ({type: SET_OPERATOR_QUESTION, operatorId, id, question}),\n\n    clearPreviousAnswer: (operatorId) => ({type: CLEAR_PREVIOUS_ANSWER, operatorId}),\n\n    clearUser: (operatorId) => ({type: OPERATOR_CLEAR_USER, operatorId}),\n\n    addOperator: () => async (dispatch, getState) => {\n        const operators = getState().appReducer.operators;\n        if (operators.length < MAX_OPERATORS) {\n            dispatch({type: ADD_OPERATOR});\n        }\n    },\n\n    removeOperator: (id) => ({type: REMOVE_OPERATOR, id: id}),\n\n    stopClientTyping: (operator_id) => ({type: STOP_CLIENT_TYPING, operator_id: operator_id}),\n\n    // POST data to url for operator processing\n    sendOperatorMessage: (url, data) => async (dispatch, getState) => {\n        await Comms.http_post(url, data,\n            (response) => {\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    },\n\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // log list\n\n    getLogList: (subSystem) => async (dispatch, getState) => {\n        const session = getState().appReducer.session;\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        const top = getState().appReducer.log_size;\n        await _getLogList(session, organisation_id, subSystem, top, dispatch);\n    },\n\n    restartService: (subSystem) => async (dispatch, getState) => {\n        const session = getState().appReducer.session;\n        const organisation_id = getState().appReducer.selected_organisation_id;\n        await Comms.http_get('/stats/restart-service/' + encodeURIComponent(session.id) + '/' + encodeURIComponent(organisation_id) + '/' + encodeURIComponent(subSystem),\n            (response) => {},\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            }\n        )\n    },\n\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // html 5 notification permissions\n\n    getHtml5Notifications: () => async (dispatch, getState) => {\n        await _getHtmlNotifications(dispatch);\n    },\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // restore a text file on the server\n\n    restore: (base64_text) => async (dispatch, getState) => {\n        dispatch({type: BUSY, busy: true});\n        await Comms.http_put('/backup/restore', {\"data\": base64_text},\n            (response) => {\n                dispatch({type: BUSY, busy: false});\n            },\n            (errStr) => {\n                dispatch({type: ERROR, title: \"Error\", error: errStr})\n            })\n    },\n\n\n};\n\n","import React, {Component} from 'react';\n\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport uiTheme from \"../theme-ui\";\nimport Grid from '@material-ui/core/Grid';\n\nimport AppMenu from './app-menu';\nimport ErrorDialog from '../common/error-dialog';\nimport {clearState} from '../reducers/stateLoader';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\n\nconst styles = {\n    hr: {\n        color: '#eee',\n        background: '#eee',\n        width: '30%',\n        height: '1px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: '20px',\n        marginBottom: '20px',\n    },\n    spinner: {\n        position: 'relative',\n        top: '-8px',\n        left: '40px',\n        width: '32px',\n    },\n    spinnerInvisible: {\n        display: 'none',\n        position: 'relative',\n        top: '-8px',\n        left: '40px',\n        width: '32px',\n    },\n    page: {\n        textAlign: 'center',\n        fontSize: '1.0em',\n        fontFamily: 'Tahoma',\n    },\n    recaptcha: {\n        display: 'flex',\n        justifyContent: 'center',\n        width: \"100%\"\n    },\n    helpText: {\n        marginTop: '10px',\n        fontSize: '0.9em',\n        color: '#555',\n        marginBottom: '2px',\n    },\n    copyright: {\n        position: 'absolute',\n        bottom: '0px',\n        height: '25px',\n        widht: '100%',\n        color: '#aaa',\n        fontSize: '0.8em',\n        left: '40%',\n    },\n    license: {\n        marginTop: '20px',\n    },\n    busy: {\n        display: 'block',\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: '9999',\n        borderRadius: '10px',\n        opacity: '0.8',\n        backgroundSize: '100px',\n        background: \"url('../images/busy.gif') 50% 50% no-repeat rgb(255,255,255)\"\n    },\n    textBox: {\n        width: '250px',\n        borderRadius: '3px',\n        marginBottom: '10px',\n    },\n};\n\n// sign-in screen\nexport class SignIn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state={\n            email: '',\n            password: '',\n        }\n    }\n    componentDidMount() {\n        clearState();\n        this.props.notBusy();\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    handleClick() {\n        this.props.signIn(this.state.email, this.state.password);\n    }\n    onKeyPress(event) {\n        if (event.key === \"Enter\") {\n            this.handleClick();\n        }\n    }\n    render() {\n        return (\n            <div style={styles.page}>\n                <ThemeProvider theme={uiTheme}>\n                    <div>\n                        <AppMenu title=\"administration\" signed_in={false} />\n                        <ErrorDialog title={this.props.error_title}\n                                     message={this.props.error}\n                                     callback={() => this.props.closeError()} />\n\n                        {\n                            this.props.busy &&\n                            <div style={styles.busy} />\n                        }\n\n                        <Grid container spacing={1}>\n\n                            <Grid item xs={12}>\n                                <div style={styles.hr}/>\n                            </Grid>\n\n                            <Grid item xs={3} />\n                            <Grid item xs={6}>\n                                <TextField\n                                    disabled={this.props.busy}\n                                    style={styles.textBox}\n                                    autoFocus\n                                    placeholder=\"Enter your email\"\n                                    label=\"email\"\n                                    onChange = {(event) => this.setState({email: event.target.value})}\n                                    onKeyPress = {this.onKeyPress.bind(this)}\n                                />\n                            </Grid>\n                            <Grid item xs={3} />\n\n\n                            <Grid item xs={3} />\n                            <Grid item xs={6}>\n                                <TextField\n                                    disabled={this.props.busy}\n                                    style={styles.textBox}\n                                    type=\"password\"\n                                    placeholder=\"Enter your Password\"\n                                    label=\"Password\"\n                                    onChange = {(event) => this.setState({password: event.target.value})}\n                                    onKeyPress = {this.onKeyPress.bind(this)}\n                                />\n                            </Grid>\n                            <Grid item xs={3} />\n\n                            <Grid item xs={3} />\n                            <Grid item xs={6}>\n                                <Button variant=\"contained\" color=\"primary\" className=\"button-style\"\n                                              disabled={this.props.busy} onClick={() => this.handleClick()}>Sign-in\n                                </Button>\n                            </Grid>\n                            <Grid item xs={3} />\n\n                            <Grid item xs={12}>\n                                <div style={styles.hr}/>\n                            </Grid>\n\n                            <Grid item xs={3} />\n                            <Grid item xs={6}>\n                                <div style={styles.helpText}>forgotten your password?</div>\n                            </Grid>\n                            <Grid item xs={3} />\n\n\n                            <Grid item xs={3} />\n                            <Grid item xs={6}>\n                                <Button variant=\"contained\" onClick={() => window.location = '/#/reset-password-request'}\n                                        disabled={this.props.busy}  className=\"button-style\">Reset my Password</Button>\n                            </Grid>\n                            <Grid item xs={3} />\n\n\n                            <Grid item xs={12} />\n\n                            <Grid item xs={3} />\n                            <Grid item xs={6}>\n                                <div style={styles.license}>\n                                    <Button variant=\"contained\" onClick={() => window.location = '/#/os-license'}\n                                            disabled={this.props.busy} className=\"button-style\">open source licenses</Button>\n                                </div>\n                            </Grid>\n                            <Grid item xs={3} />\n\n                        </Grid>\n\n                    </div>\n                </ThemeProvider>\n            </div>\n        );\n    }\n\n}\n\n\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        busy: state.appReducer.busy,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(SignIn);\n","import React, {Component} from 'react';\n\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport uiTheme from \"../theme-ui\";\nimport Grid from '@material-ui/core/Grid';\n\nimport Api from '../common/api'\nimport AppMenu from './app-menu';\nimport ErrorDialog from '../common/error-dialog';\n\n\nconst styles = {\n    page: {\n        textAlign: 'center',\n        fontSize: '1.0em',\n        fontFamily: 'Tahoma',\n    },\n};\n\n\nexport class ResetPasswordRequest extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            email:'',\n\n            error_title: '',\n            error_msg: '',\n\n            has_error: false,  // error trapping\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleClick(event) {\n        const self = this;\n        //To be done:check for empty values before hitting submit\n        if(this.state.email.length > 0) {\n            Api.passwordResetRequest(this.state.email,\n                (response) => {\n                    self.showError('Success', \"we've emailed you a link for resetting your password.\");\n                },\n                (error) => {\n                    self.showError('Error', error);\n                }\n            );\n        }\n        else{\n            this.showError('Error', 'Input field value is missing');\n        }\n    }\n    showError(title, error_msg) {\n        this.setState({error_title: title, error_msg: error_msg});\n    }\n    closeError() {\n        this.setState({error_msg: ''});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>ResetPasswordRequest: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.page}>\n                <ThemeProvider theme={uiTheme}>\n\n                    <AppMenu title=\"administration\" loggedIn={false} />\n\n                    <ErrorDialog title={this.state.error_title}\n                                 message={this.state.error_msg}\n                                 callback={this.closeError.bind(this)} />\n\n                    <Grid container spacing={3}>\n\n                        <Grid item xs={12} />\n                        <Grid item xs={12} />\n\n                        <Grid item xs={3} />\n                        <Grid item xs={6}>\n                            <div className=\"sign-in-help-text\">Please enter your email address and we'll email you a link to reset your password.</div>\n                        </Grid>\n                        <Grid item xs={3} />\n\n                        <Grid item xs={3} />\n                        <Grid item xs={6}>\n                            <TextField\n                                autoFocus\n                                placeholder=\"Enter your email Address\"\n                                label=\"Email Address\"\n                                onChange = {(event) => this.setState({email: event.target.value})} />\n                        </Grid>\n                        <Grid item xs={3} />\n\n                        <Grid item xs={3} />\n                        <Grid item xs={6}>\n                            <Button variant=\"contained\" color=\"primary\" className=\"button-style\" onClick={(event) => this.handleClick(event)}>\n                                Submit\n                            </Button>\n                        </Grid>\n                        <Grid item xs={3} />\n\n                        <Grid item xs={12} />\n                        <Grid item xs={12} />\n\n                        <Grid item xs={3} />\n                        <Grid item xs={6}>\n                            <div className=\"sign-in-help-text\">Click here to return to sign-in</div>\n                        </Grid>\n                        <Grid item xs={3} />\n\n                        <Grid item xs={3} />\n                        <Grid item xs={6}>\n                            <div>\n                                <Button variant=\"contained\" onClick={() => window.location = '/'} className=\"button-style\">Return to Sign-in</Button>\n                            </div>\n                        </Grid>\n                        <Grid item xs={3} />\n\n                    </Grid>\n\n                </ThemeProvider>\n            </div>\n        );\n    }\n}\n\nexport default ResetPasswordRequest;\n","import React, {Component} from 'react';\n\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport uiTheme from \"../theme-ui\";\nimport Grid from '@material-ui/core/Grid';\n\nimport Api from '../common/api'\nimport AppMenu from './app-menu';\nimport ErrorDialog from '../common/error-dialog';\n\nconst queryString = require('query-string');\n\nconst styles = {\n    input: {\n        width: '350px'\n    },\n    page: {\n        textAlign: 'center',\n        fontSize: '1.0em',\n        fontFamily: 'Tahoma',\n    },\n    spacer: {\n        height: '10px',\n    }\n};\n\n\nexport class ResetPasswordResponse extends Component {\n    constructor(props){\n        super(props);\n\n        const parsed = queryString.parse(props.location.search);\n\n        let email = '';\n        let reset_id = '';\n        if (parsed['email']) {\n            email = parsed['email'];\n        }\n        if (parsed['resetid']) {\n            reset_id = parsed['resetid'];\n        }\n\n        this.state={\n            email: email,\n            reset_id: reset_id,\n            password: '',\n\n            error_title: '',\n            error_msg: '',\n\n            has_error: false,  // error trapping\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleClick(event) {\n        const self = this;\n        //To be done:check for empty values before hitting submit\n        if(this.state.email.length > 0 && this.state.reset_id.length > 0 && this.state.password.length > 5) {\n            Api.resetPassword(this.state.email, this.state.password, this.state.reset_id,\n                (response) => {\n                    self.showError('Success', \"Password reset.  You can now sign-in using your new password.\");\n                    self.setState({reset_id: '', email: '', password: ''});\n                },\n                (error) => {\n                    self.showError('Error', error);\n                }\n            );\n        }\n        else{\n            this.showError('Error', 'Input field value(s) missing or incorrect.');\n        }\n    }\n    onKeyPress(event) {\n        if (event.key === \"Enter\") {\n            this.handleClick(event);\n        }\n    }\n    showError(title, error_msg) {\n        this.setState({error_title: title, error_msg: error_msg});\n    }\n    closeError() {\n        this.setState({error_msg: ''});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>ResetPasswordResponse: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.page}>\n                <ThemeProvider theme={uiTheme}>\n\n                    <AppMenu title=\"\" loggedIn={false} />\n\n                    <ErrorDialog title={this.state.error_title}\n                                 message={this.state.error_msg}\n                                 callback={this.closeError.bind(this)} />\n\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={3} />\n                        <Grid item xs={6}>\n                            <TextField\n                                placeholder=\"Enter your email Address\"\n                                label=\"Email Address\"\n                                style={styles.input}\n                                value={this.state.email}\n                                onChange = {(event) => this.setState({email: event.target.value})} />\n                        </Grid>\n                        <Grid item xs={3} />\n\n                        <Grid item xs={3} />\n                        <Grid item xs={6}>\n                            <TextField\n                                placeholder=\"Enter the reset-id we sent you\"\n                                label=\"Reset Id\"\n                                style={styles.input}\n                                value={this.state.reset_id}\n                                onChange = {(event) => this.setState({reset_id: event.target.value})} />\n                        </Grid>\n                        <Grid item xs={3} />\n\n                        <Grid item xs={12}><br /></Grid>\n\n                        <Grid item xs={3} />\n                        <Grid item xs={6}>\n                            <TextField\n                                type=\"password\"\n                                placeholder=\"Enter your new Password\"\n                                label=\"Enter your new Password\"\n                                autoFocus={true}\n                                style={styles.input}\n                                onChange = {(event) => this.setState({password: event.target.value})}\n                                onKeyPress = {this.onKeyPress.bind(this)}\n                            />\n                        </Grid>\n                        <Grid item xs={3} />\n\n                        <Grid item xs={12}>\n                            <div style={styles.spacer}>&nbsp;</div>\n                        </Grid>\n\n                        <Grid item xs={3} />\n                        <Grid item xs={6}>\n                            <div>\n                                <Button variant=\"contained\" className=\"button-style\"\n                                              onClick={(event) => this.handleClick(event)}>\n                                    Reset Password\n                                </Button>\n                            </div>\n                        </Grid>\n                        <Grid item xs={3} />\n\n                        <Grid item xs={12}><br /></Grid>\n\n                        <Grid item xs={3} />\n                        <Grid item xs={6}>\n                            <div className=\"sign-in-help-text\">Click here to return to sign-in</div>\n                        </Grid>\n                        <Grid item xs={3} />\n\n                        <Grid item xs={3} />\n                        <Grid item xs={6}>\n                            <div>\n                                <Button variant=\"contained\" className=\"button-style\" onClick={() => window.location = '/'}>\n                                    Return to Sign-in\n                                </Button>\n                            </div>\n                        </Grid>\n                        <Grid item xs={3} />\n\n                    </Grid>\n\n                </ThemeProvider>\n            </div>\n        );\n    }\n}\n\nexport default ResetPasswordResponse;\n","import React, {Component} from 'react';\n\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport uiTheme from \"../theme-ui\";\nimport Grid from '@material-ui/core/Grid';\n\nimport AppMenu from '../auth/app-menu';\nimport ErrorDialog from '../common/error-dialog';\n\n\nconst styles = {\n    page: {\n        fontSize: '1.0em',\n        fontFamily: 'Tahoma',\n    },\n\n    content: {\n        marginTop: '20px',\n        marginLeft: '20%',\n    },\n\n    link: {\n        texcolor: '#c0c0c0'\n    },\n\n    bottomLink: {\n        textAlign: 'center',\n        marginTop: '50px',\n    },\n};\n\n\nexport class OpenSourceLicenses extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            error_title: '',\n            error_msg: '',\n            has_error: false,  // error trapping\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    showError(title, error_msg) {\n        this.setState({error_title: title, error_msg: error_msg});\n    }\n    closeError() {\n        this.setState({error_msg: ''});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>license: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.page}>\n                <ThemeProvider theme={uiTheme}>\n\n                    <AppMenu title=\"open source licenses\" loggedIn={false} />\n\n                    <ErrorDialog title={this.state.error_title}\n                                 message={this.state.error_msg}\n                                 callback={this.closeError.bind(this)} />\n\n                    <br />\n                    <br />\n\n                    <Grid container spacing={2}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://github.com/JetBrains/kotlin-web-site/blob/master/LICENSE\" rel=\"noopener noreferrer\" target=\"_blank\">Kotlin license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://github.com/JetBrains/kotlin-web-site/blob/master/LICENSE\" rel=\"noopener noreferrer\" target=\"_blank\">Kotlinx Coroutines Core license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Spring license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Jackson license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://github.com/JodaOrg/joda-time/blob/master/LICENSE.txt\" rel=\"noopener noreferrer\" target=\"_blank\">Joda-time license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">commons-io license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">commons-fileupload license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Apache http-client license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Apache http-mime license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://github.com/explosion/spaCy/blob/master/LICENSE\" rel=\"noopener noreferrer\" target=\"_blank\">spaCy license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Apache Tika license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Google API license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Google Cloud license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Google OAuth license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.isc.org/licenses/\" rel=\"noopener noreferrer\" target=\"_blank\">jBcrypt license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.datastax.com/terms/datastax-dse-driver-license-terms\" rel=\"noopener noreferrer\" target=\"_blank\">DataStax Driver license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Apache Cassandra license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Apache ActiveMQ license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://oss.oracle.com/licenses/CDDL+GPL-1.1\" rel=\"noopener noreferrer\" target=\"_blank\">javax-mail license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://junit.org/junit4/license.html\" rel=\"noopener noreferrer\" target=\"_blank\">junit license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://jsoup.org/license\" rel=\"noopener noreferrer\" target=\"_blank\">jSoup license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">snakeyaml license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.gnu.org/licenses/old-licenses/lgpl-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">javax WebSocket Client license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.eclipse.org/legal/epl-2.0/\" rel=\"noopener noreferrer\" target=\"_blank\">Tyrus WebSocket Client license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">snappy java license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Apache Spark license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Apache Avro license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Apache Parquet license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Apache Hadoop license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.apache.org/licenses/LICENSE-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">Java Native Access license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://opensource.org/licenses/lgpl-license\" rel=\"noopener noreferrer\" target=\"_blank\">JCIFS-ng license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://mit-license.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Microsoft SQL JDBC license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://opensource.org/licenses/BSD-2-Clause\" rel=\"noopener noreferrer\" target=\"_blank\">Postgres SQL JDBC license</a></div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={styles.link}><a href=\"https://www.gnu.org/licenses/old-licenses/lgpl-2.0.html\" rel=\"noopener noreferrer\" target=\"_blank\">MySQL JDBC license</a></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={10}>\n                            <div style={styles.bottomLink}>\n                                <Button variant=\"contained\" onClick={() => window.location = \"/\"} className=\"button-style\">Return to Sign-in</Button>\n                            </div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                    </Grid>\n\n                </ThemeProvider>\n            </div>\n        );\n    }\n}\n\nexport default OpenSourceLicenses;\n","import React, {Component} from 'react';\n\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport uiTheme from \"../theme-ui\";\n\nimport AppMenu from '../auth/app-menu';\nimport ErrorDialog from '../common/error-dialog';\n\n\nconst styles = {\n    page: {\n        fontSize: '0.9em',\n        fontFamily: 'Tahoma',\n    },\n\n    content: {\n        marginTop: '10px',\n        marginLeft: '50px',\n    },\n\n    link: {\n        margin: '10px',\n        texcolor: '#c0c0c0'\n    },\n\n    bottomLink: {\n        textAlign: 'center',\n        marginTop: '50px',\n        marginBottom: '50px',\n    },\n    text: {\n        lineHeight: '22px',\n        fontSize: '1.2em',\n        fontColor: '#222',\n    },\n};\n\n\nexport class LicenseAgreement extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            error_title: '',\n            error_msg: '',\n            has_error: false,  // error trapping\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    showError(title, error_msg) {\n        this.setState({error_title: title, error_msg: error_msg});\n    }\n    closeError() {\n        this.setState({error_msg: ''});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>license-agreement: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.page}>\n                <ThemeProvider theme={uiTheme}>\n                    <div>\n                        <AppMenu title=\"\" loggedIn={false} />\n                        <ErrorDialog title={this.state.error_title}\n                                     message={this.state.error_msg}\n                                     callback={this.closeError.bind(this)} />\n\n                        <br clear=\"both\" />\n                        <div style={styles.content}>\n\n                            <h1>SIMSAGE™ TERMS OF USE</h1>\n                            <br/>\n                            Welcome to SimSage™, an innovative, semantic, software-based Artificial Intelligence service that assists organisations to automate their web-page interactions with Customers. SimSage™’s capabilities include automating Customer enquiries requests for information, particularly by supplementing, or replacing Frequently Asked Questions (FAQs).<br/>\n                            <br/>\n                            <br/>\n                            These Terms of Use, as amended from time to time (Terms) explain the terms on which SimSage™  Limited (NZCN 6798094) of 86 Tinakori Road, Wellington, New Zealand (SimSage™) provides customers with access to certain services through the www.simsage.nz website (Website). Please read them carefully.<br/>\n                            <br/>\n                            By registering to use the Services and clicking “I accept”, You acknowledge that You have read and understood these Terms and if You are acting on behalf of any person for whom You are using the Services, that You have full authority to act and are deemed to have agreed to these Terms on behalf of that person for whom you use the Services.<br/>\n                            <br/>\n                            SimSage™ reserves the right to change these Terms at any time, effective on posting the modified terms on the Website, and SimSage™ will make every effort to communicate these changes to You via email or notification via the Website. It is likely the Terms will change over time, particularly as the Services evolve to reflect our development of the Services and user feedback. It is Your obligation to ensure that You have read, understood and agree to the most recent Terms available on the Website.<br/>\n                            <br/>\n                            <h2>1. The Website and the Services</h2>\n                            <br/>\n                            1.1\tThe Website is owned and managed by SimSage Limited (NZCN 6798094) of 86 Tinakori Road, Wellington, New Zealand.<br/>\n                            <br/>\n                            1.2 In consideration of You paying the Fees, SimSage™ shall provide You with the services described on the Website (Services). To avoid doubt, SimSage™’s obligations are limited to providing the Services and do not in any way include acting on Your behalf. Nothing in these Terms is intended to, or shall be deemed to, establish any partnership or joint venture between You and SimSage™, appoint either party as the agent of the other, nor authorise either party to make or enter into any commitments for, or on behalf of, the other party.<br/>\n                            <br/>\n                            1.3 SimSage™ may from time to time add, modify, suspend or cease (temporarily or permanently) providing any element of the Services upon notice to You, such notice to be effective on the earlier of SimSage™ posting on the Website or via email to You.<br/>\n                            <br/>\n                            1.4 If there is unplanned service downtime in respect of the Services or the Website, SimSage™ shall use its reasonable endeavours (but has no obligation) to notify You in advance provided that SimSage™ is able to do so and such notice will be effective on the earlier of SimSage™ posting on the Website or notifying You via email.<br/>\n                            <br/>\n                            1.5 Access to the Website and the Services may be granted to You, at SimSage™’s discretion and on terms and for a period agreed in writing (and if no time period is specified, for one month only), on a trial or ‘free’ basis (Trial). You acknowledge and agree that these Terms shall apply to the Trial, and in addition, during the Trial:<br/>\n                            1.5.1 access to the Services will be provided to You at no cost;<br/>\n                            1.5.2 such access is solely for the purpose of offering You a preview demonstration of the functionality and features of the Services;<br/>\n                            1.5.3 the functionality of the Services may be limited or restricted; and<br/>\n                            1.5.4 SimSage™ may withdraw or suspend Your access to the Services at any time, and at the end of the one month Trial period (or such other Trial period agreed in writing), Your continued access to the Website and/or Services will be subject to payment of Fees or charges in accordance with clause 4.<br/>\n                            <br/>\n                            <h2>2 Register to use the Services</h2>\n                            <br/>\n                            2.1\tTo use the Services You must first register with SimSage™ by completing the online registration form on the Website.<br/>\n                            <br/>\n                            2.2 SimSage™ will send You a confirmation email (Confirmation Email) once it has accepted and confirmed Your registration. Your contract to use the Services on these Terms (Contract) starts on the date of the Confirmation Email.<br/>\n                            <br/>\n                            2.3 SimSage™ reserves the right to conduct verification and security procedures in respect of all information provided by You to SimSage™. If SimSage™ believes the information provided by You to register and use any of the Services breaches (or may breach) any of these Terms, SimSage™ at its sole discretion may take any action it deems appropriate, including without limitation, to terminate Your Contract (with no return of any Fees already paid).<br/>\n                            <br/>\n                            2.4 These Terms apply to any Authorised Personnel who You authorize to access and use the Website and the Services through Your account. You acknowledge and agree:<br/>\n                            2.4.1 all Authorised Personnel must use the corporate  email address allocated to them by You when creating an Authorised Personnel profile;<br/>\n                            2.4.2 SimSage™ may allocate Your \"Admin\" or \"Member\" accounts with varying levels of access, and You shall comply (and ensure each Authorised Personnel complies) with any SimSage™ directions for setting up and using such accounts; and<br/>\n                            2.4.3 You are directly liable to SimSage™ at all times for the acts or omissions of Your Authorised Personnel.<br/>\n                            <br/>\n                            2.5 You shall keep, and ensure Your Authorised Personnel keep, Your and Your Authorised Personnel’s usernames and passwords (Logins) safe and secure to ensure they are not used without Your permission. You must immediately notify SimSage™ if You believe there has been unauthorised use or access to Your Logins and/or Your profile on the Website. You shall be solely responsible and liable for any breach of these Terms arising out of, or resulting from, using Your Logins to access the Services and/or the Website (whether such use is authorised by You or not).<br/>\n                            <br/>\n                            2.6 SimSage™ may, at any time on notice, require You to sign any further documents to confirm Your acceptance of, or give full effect to, these Terms.<br/>\n                            <br/>\n                            <h2>3 Your obligations - general</h2>\n                            <br/>\n                            3.1\tThe obligations in this clause 3 apply to all users of SimSage™, the Services and/or the Website. Additional obligations   are set out below.<br/>\n                            <br/>\n                            3.2 You shall at all times use the Services and the Website in accordance with these Terms.<br/>\n                            <br/>\n                            3.3 You shall ensure Your use of the Services and/or the Website, including submitting any information, data, images, videos, audio, files, links to external websites, communication between Authorised Personnel, and all other material of any format (Submissions), in each case:<br/>\n                            3.3.1 complies with all applicable laws;<br/>\n                            3.3.2 does not infringe any intellectual property or other proprietary rights of any third party;<br/>\n                            3.3.3 does not, or could not reasonably be deemed to:<br/>\n                            <ul>\n                                <li>be offensive, illegal, inappropriate or in any way promote racism, bigotry, hatred or physical harm of any kind against any group or individual;</li>\n                                <li>harass or advocate harassment of another person;</li>\n                                <li>display pornographic or sexually explicit material;</li>\n                                <li>promote conduct that is abusive, threatening, obscene, or defamatory;</li>\n                                <li>promote any illegal activities, or provide instructional information about illegal activities, including violating someone else’s privacy; or</li>\n                                <li>provide or create computer viruses, other malware or denial of service attacks;</li>\n                                <li>promote or contain information that is inaccurate, false or misleading;</li>\n                                <li>engage in promoting contests, sweepstakes and pyramid schemes;</li>\n                                <li>exploit people in a sexual or violent manner;</li>\n                                <li>invade or violate any third party’s right to privacy; and</li>\n                                <li>transmit \"junk mail\", or \"chain letters\", or unsolicited mass mailing, messaging or \"spamming\";</li>\n                            </ul>\n                            and You hereby indemnify SimSage™ for all losses, liabilities, costs and expenses (including legal costs) suffered or incurred by SimSage™ (and/or its parent company) which arise directly or indirectly from Your breach of this clause 3.2.<br/>\n                            <br/>\n                            3.4 SimSage™ does not vet, verify the accuracy, correctness and completeness, edit or modify any Submission or any other information, data and materials created, used and/or published by You or on Your behalf on Your Website to determine whether they may result in any liability to any third party. You warrant that You have the right to use all such information and material.<br/>\n                            <br/>\n                            3.5 Notwithstanding clause 3.3, SimSage™ reserves the right to refuse to publish any Submissions, or to remove or edit a Submission (in whole or in part and at any time), if SimSage™ believes Your use of the Services and/or the Website breaches these Terms.<br/>\n                            <br/>\n                            3.6 You shall not at any time:<br/>\n                            3.6.1 use the Services and/or the Website to impersonate (or in a way that impersonates) another User or person; and<br/>\n                            3.6.2 use the information made available to You through Your use of the Services and/or the Website for any purpose other than for procuring benefit out of the Services and/or the Website; and<br/>\n                            3.6.3 do anything whatsoever which (or which is likely to) impair, interfere with, damage, or cause harm or distress to any person using the Services and/or the Website or in respect of the network.<br/>\n                            <br/>\n                            3.7 SimSage™ takes breaches of this clause 3 very seriously and reserves the right to take any action that SimSage™ deems necessary, including suspending or terminating Your use of the Services and/or access to the Website. SimSage™ may also commence legal proceedings if there is illegal use of the Services and/or the Website, or disclose information to any third party who is claiming that any material posted or uploaded by You to our Website violates their intellectual property or other proprietary rights or their right to privacy. You shall promptly notify SimSage™ if You are aware of any breach (or any suspected breach) of this clause 3 by Your Authorised Personnel.<br/>\n                            <br/>\n                            <h2>4 Fees</h2>\n                            <br/>\n                            4.1 The fees to access the Services are set out on the Website (Fees). Except where You are using any Services that are specifically noted on the Website as “Free”, or participating in a Trial in accordance with clause 1.5, You may only access the Services by paying the Fees noted on the Website..<br/>\n                            <br/>\n                            4.2 Unless stated otherwise on the Website or agreed by SimSage™ in writing, the Fees shall be payable by You, in the manner as set out on the Website.<br/>\n                            <br/>\n                            4.3 All Fees are inclusive of GST and all other taxes or duties, and are non-refundable for any reason whatsoever.<br/>\n                            <br/>\n                            4.4 The Fees or any rate of charge may be increased by SimSage™ upon not less than 30 days prior written notice to You, which notice may be provided through the Website.<br/>\n                            <br/>\n                            <h2>5 Warranties</h2>\n                            <br/>\n                            5.1 You: You warrant that (a) You have the right and capacity to enter into, and be bound by, these Terms;  (b) You shall comply with all applicable laws relating to Your use of the Services and/or the Website; and (c)  You shall comply with SimSage™’s requirements and reasonable directions relating to the Services and Website as notified by SimSage™ from time to time.<br/>\n                            <br/>\n                            5.2 SimSage™: The provision of, access to, and use of, the Services and the Website is on an \"as is \" basis and at Your own risk. SimSage™ gives no warranty about the Services and/or the Website, and in particular, SimSage™ does not warrant that:<br/>\n                            5.2.1 the Services will meet Your requirements or that it will be suitable for any particular purpose. It is Your sole responsibility to determine that the Services meet Your needs and/or the needs of Your business and are suitable for the purposes for which they are used; or<br/>\n                            5.2.2 the use of the Services will be uninterrupted or error free. Among other things, the operation and availability of the systems used for accessing the Services, including public telephone services, computer networks and the Internet, can be unpredictable and may from time to time interfere with or prevent access to the Services. SimSage™ is not in any way responsible for any such interference or prevention of Your access or use of the Services.\n                            To avoid doubt, all implied conditions or warranties are excluded to the maximum extent permitted by law, including (without limitation) warranties of merchantability, non-infringement of intellectual property, accuracy, completeness, fitness for a particular purpose, and any warranties arising by statute or otherwise in law or from course of dealing, course of performance, or use of trade.<br/>\n                            <br/>\n                            5.3 Third party websites: SimSage™ may display or provide links or other interaction with third party websites and third party advertising banners on the Website (Third Party Websites). In particular, the Services may also provide You with the opportunity to connect and publish Your Information through Third Party Websites and other third party services such as social and business networking sites. Use of any such Third Party Websites and services shall be at Your sole risk and subject to the terms and conditions of the Third Party Website provider.<br/>\n                            <br/>\n                            <h2>6 Limitation of liability</h2>\n                            <br/>\n                            6.1 To the maximum extent permitted by law, SimSage™ excludes all liability and responsibility to You (or any other person) in contract, tort (including negligence), or otherwise, for any loss (including loss of information, Data, profits and savings) or damage resulting, directly or indirectly, from any use of, or reliance on, the Services and/or Website.<br/>\n                            <br/>\n                            6.2 If You suffer loss or damage as a result of SimSage™'s negligence or failure to comply with these Terms, any claim by You against SimSage™ arising from SimSage™'s negligence or failure will be limited in respect of any one incident, or series of connected incidents, to the Fees paid by You in the previous month. You are directly liable to SimSage™ at all times for the acts or omissions of Your Authorised Personnel, in accordance with clause 2.4.<br/>\n                            <br/>\n                            6.3 If You are not satisfied with the Services, Your sole and exclusive remedy is to terminate these Terms in accordance with clause 7.<br/>\n                            <br/>\n                            <h2>7 Termination</h2>\n                            <br/>\n                            7.1 Trial policy: If SimSage™ agrees in writing, in accordance with clause 1.5, to provide You with a trial usage period when You first sign up for access to the Services, You can evaluate the Services under the specified trial usage conditions, with no obligation to continue to use the Services. If You choose to continue using the Services thereafter, any payment applicable in accordance with clause 7 will be billed to You from the day You first added Your billing details into the Services.<br/>\n                            <br/>\n                            7.2 Prepaid Subscriptions: SimSage™ will not provide any refund for any remaining prepaid period for a prepaid Fee subscription.<br/>\n                            <br/>\n                            7.3 No-fault termination: These Terms will continue for the period covered by the Fee paid or payable under clause 7.1. At the end of each billing period, these Terms will automatically continue for another period of the same duration as that period, provided You continue to pay the prescribed Fee when due, unless either party terminates these Terms by giving at least 30 days’ notice to the other party before the end of the relevant payment period. If You terminate these Terms, You shall be liable to pay all relevant Fees on a pro-rata basis for each day of the then current period up to and including the day of termination of these Terms.<br/>\n                            <br/>\n                            7.4 Breach: If You:<br/>\n                            7.4.1 breach any of these Terms (including by non-payment of any Fees) and (i) if the breach is capable of being remedied, do not remedy the breach within 14 days after receiving notice of the breach; and (ii) if the breach is not capable of being remedied (which includes any payment of Fees that are more than 30 days overdue); or<br/>\n                            7.4.2 You or Your business become insolvent or Your business goes into liquidation or has a receiver or manager appointed of any of its assets or if You become insolvent, or make any arrangement with Your creditors, or become subject to any similar insolvency event in any jurisdiction,\n                            SimSage™ may, at its sole discretion:<br/>\n                            7.4.3 Terminate this Agreement and Your use of the Services;<br/>\n                            7.4.4 Suspend for any definite or indefinite period of time, Your use of the Services;<br/>\n                            7.4.5 Suspend or terminate access to all or any Data; and/or<br/>\n                            7.4.6 Take any of these actions in relation to any other person/s whom You have authorised to have access to Your information or Data.<br/>\n                            <br/>\n                            7.5 Accrued Rights: Termination of these Terms is without prejudice to any rights or obligations of the parties which have accrued up to and including the date of termination, and shall not affect the provisions of these Terms which expressly, or by their nature, are intended to continue, including this clause 7 (Termination), and clauses 5 (Warranties), 6 (Limitation of Liability), 8 (Intellectual Property Rights). On termination of this Agreement You will:<br/>\n                            7.5.1 remain liable for any accrued Fees and amounts which become due for payment before or after termination; and<br/>\n                            7.5.2 immediately cease to use the Services.<br/>\n                            <br/>\n                            <h2>8 Intellectual property rights</h2>\n                            <br/>\n                            8.1 Title to, and all intellectual property rights in, the Services, the Website, including all software forming part of the Website (Software), and any documentation relating to the Services, is and remains the property of SimSage™ (or its licensors). Nothing in these Terms will transfer from SimSage™ to You any right, title or interest in the Services, the Website, the Software and associated documentation, all of which remain exclusively with SimSage™ (or its licensors). All rights in and to the Software and the Website not expressly granted to You are reserved by SimSage™ (and its licensors).<br/>\n                            <br/>\n                            8.2 You may print off one copy and may download extracts of any pages from the Website solely for use by You; and You may draw the attention of other Users to Submissions or materials posted on the Website. You must not use any part of the Submissions of other Users and all materials on the Website for any purpose other than accessing the Website or obtaining a benefit from the Services in accordance with these Terms.<br/>\n                            <br/>\n                            8.3 You shall not, and shall procure that Authorised Personnel shall not modify, translate, create or attempt to create derivative copies of or copy the Software and/or the Website in whole or in part; reverse engineer, decompile, disassemble or otherwise reduce the object code of the Software and/or the Website to source code form; distribute, sub-licence, assign, share, timeshare, sell, rent, lease, transmit, grant a security interest in or otherwise transfer the Software, the Website and/or Your right to use the Software or the Website.<br/>\n                            <br/>\n                            8.4 You:<br/>\n                            8.4.1 Warrant that You own or have the right or licence to use the intellectual property rights in the Your Information, all information and materials provided by You to SimSage™; and<br/>\n                            8.4.2 indemnify SimSage™ against all losses, liabilities, costs and expenses (including but not limited to legal costs) arising from or incurred by reason of any infringement of any intellectual property right by the use or possession of Your Information, and all other information and material provided by You to SimSage™.<br/>\n                            <br/>\n                            <h2>9 Data protection & privacy policy</h2>\n                            <br/>\n                            9.1 You and SimSage™ shall comply with the Privacy Act 1993 (and all other successor legislation and regulations) in performing their obligations under these Terms.<br/>\n                            <br/>\n                            9.2 SimSage™ processes personal information (as defined in the Privacy Act 1993) which it collects in the course of providing the Services in accordance with its Privacy Policy which is accessible on the Website. You should read that policy at www.SimSage.nz/privacy/. You will be deemed to have accepted that policy when You accept these Terms.<br/>\n                            <br/>\n                            9.3 For personal information which is processed by SimSage™ on Your behalf as part of the Services, SimSage™ will act strictly in accordance with Your instructions by following the processing and security obligations contained in these Terms. You confirm that You are solely responsible for ensuring that any such processing and security obligations comply with all applicable privacy and data protection laws. You hereby indemnify SimSage™ against all losses, liabilities, costs and expenses (including but not limited to legal costs) arising from or incurred by reason of Your failure to comply with this clause 9.<br/>\n                            <br/>\n                            <h2>10 General</h2>\n                            <br/>\n                            10.1 No Assignment: You may not assign or transfer any rights to any other person without SimSage™'s prior written consent. SimSage™ may assign or transfer its rights and/or obligations under these Terms without requiring Your consent.<br/>\n                            <br/>\n                            10.2 Waiver: If either party waives any breach of these Terms, this will not constitute a waiver of any other breach. No waiver will be effective unless made in writing.<br/>\n                            <br/>\n                            10.3 Delays: Neither party will be liable for any delay or failure in performing its obligations under these Terms if the delay or failure is due to any cause outside its reasonable control. This clause does not apply to any obligation to pay money.<br/>\n                            <br/>\n                            10.4 Severability: If any provision of these Terms is invalid, unenforceable or conflicts with applicable law, that provision is replaced with a provision which, as far as possible, accomplishes the original purpose of that provision. The remainder of these Terms will be binding on the parties.<br/>\n                            <br/>\n                            10.5 Notices: Unless specified otherwise in these Terms, any notice given under these Terms by one party to the other must be in writing by email and will be deemed to have been given on transmission. Notices to SimSage™ must be sent to support@simsage.nz  or to any other email address notified by email to You by SimSage™. Notices to You will be sent to the email address which You provided when registering for the Services. SimSage™ reserves the right to change these Terms at any time, effective on posting the modified terms on the Website, and SimSage™ will make every effort to communicate these changes to You via email or notification via the Website.<br/>\n                            <br/>\n                            10.6 Rights of Third Parties: A person who is not a party to these Terms has no right to benefit under or to enforce any term of these Terms.<br/>\n                            <br/>\n                            10.7 Acknowledgement: You acknowledge that in entering into these Terms, You have not relied on any representations, undertakings or promises given by or implied from anything said or written (whether on the Website, the internet or in negotiation between the parties) except as expressly set out in these Terms.<br/>\n                            <br/>\n                            10.8 Entire agreement: These Terms, together with our Privacy Policy and the terms of any other notices or instructions given to You under these Terms, supersede and extinguish all prior agreements, representations (whether oral or written), and understandings and constitute the entire agreement between You and SimSage™ relating to the Services, the Website and the other matters addressed in these Terms.<br/>\n                            <br/>\n                            10.9 Governing law and jurisdiction: These Terms are governed by, and shall be construed in accordance with, New Zealand law and shall be subject to the exclusive jurisdiction of the New Zealand courts.<br/>\n                            <br/>\n                            <br/>\n                        </div>\n\n                        <div style={styles.bottomLink}>\n                            <Button variant=\"contained\" onClick={() => window.close()} className=\"button-style\">close</Button>\n                        </div>\n\n                    </div>\n                </ThemeProvider>\n            </div>\n        );\n    }\n}\n\nexport default LicenseAgreement;\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\n\nexport class MessageDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            title: props.title,\n            message: props.message,\n            callback: props.callback,\n            has_error: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleOk() {\n        this.setState({open: false});\n        if (this.state.callback) {\n            this.state.callback(true);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        // see if we have data to start this dialog\n        this.setState({\n            open: (props.message.length > 0),\n            message: props.message,\n            callback: props.callback,\n            title: props.title\n        })\n    }\n    cancel() {\n        if (this.state.callback) {\n            this.state.callback(false);\n        }\n    }\n    ok() {\n        if (this.state.callback) {\n            this.state.callback(true);\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>message-dialog.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    open={this.state.open}\n                    fullWidth={true}\n                    maxWidth=\"md\"\n                    onClose={() => this.cancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\">{this.state.title}</DialogTitle>\n                <DialogContent>\n                    <div>\n                        <div dangerouslySetInnerHTML={{__html: this.state.message}} />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={() => this.cancel()}>Cancel</Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.ok()}>OK</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default MessageDialog;\n","import React, {Component} from 'react';\n\nimport Downshift from 'downshift';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\n\n// how many characters before we start calling back\nconst controlWidth = '500px';\n\nconst styles = {\n    control: {\n        float: 'left',\n        width: 'calc(controlWidth - 20px)',\n    },\n    downShift: {\n        marginTop: '-15px',\n        float: 'left',\n        width: controlWidth,\n    },\n    popover: {\n        width: controlWidth,\n    },\n    pullDownBox: {\n        float: 'right',\n        marginTop: '10px',\n        marginRight: '-22px',\n    },\n    pullDownImage: {\n        width: '18px',\n    },\n};\n\n// a simple auto-complete box with navigation, data-get calls and onSelect callbacks\n// uses: \"downshift\": \"^3.2.7\"\n// npm install --save downshift\nexport class AutoComplete extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            has_error: false,\n            id: props.id,\n\n            // the text inside the text box\n            label: props.label ? props.label : '',\n\n            // callback when an item is selected (returns the data part below)\n            onSelect: props.onSelect,\n\n            // callback to get [{ label: 'display', data: {} }, ...]\n            onFilter: props.onFilter,\n\n            // the value to display in the box\n            value: props.value ? props.value : '',\n\n            // popper / menu values displayed y/n\n            isOpen: false,\n\n            // index of item selected in the drop down menu\n            selectedIndex: -1,\n\n            minTextSize: props.minTextSize >= 0 ? props.minTextSize : 2,\n\n            // the list of values set by onFilter()\n            suggestion_list: [],\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    componentDidMount() {\n    }\n    UNSAFE_componentWillReceiveProps(next) {\n        // see if we have data to start this dialog\n        if (next !== null) {\n            this.setState({\n                id: next.id,\n                label: next.label ? next.label : '',\n                value: next.value ? next.value : '',\n                minTextSize: next.minTextSize >= 0 ? next.minTextSize : 2,\n                onSelect: next.onSelect,\n                onFilter: next.onFilter,\n            });\n        }\n    }\n    // get text to display?\n    getLookupData(text) {\n        if (text.length >= this.state.minTextSize && this.state.onFilter) {\n            this.state.onFilter(text, (list) => {\n                this.setState({suggestion_list: list, value: text, isOpen: list.length > 0});\n            });\n        }\n    }\n    // get text to display?\n    showAllData(force) {\n        if (this.state.onFilter) {\n            if (this.state.isOpen && !force) {\n                this.closeControl();\n            } else {\n                this.state.onFilter('', (list) => {\n                    this.setState({suggestion_list: list, isOpen: list.length > 0});\n                });\n            }\n        }\n    }\n    closeControl() {\n        // is value valid?\n        const value = this.state.value;\n        let exists = false;\n        this.state.onFilter('', (list) => {\n            for (const i in list) {\n                if (list[i].label === value) {\n                    exists = true;\n                }\n            }\n        });\n        if (!exists) {\n            this.setState({suggestion_list: [], isOpen: false, value: ''});\n            if (this.state.onSelect) {\n                this.state.onSelect('', '');\n            }\n        } else {\n            this.setState({suggestion_list: [], isOpen: false});\n        }\n    }\n    static renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem }) {\n        const isHighlighted = highlightedIndex === index;\n        const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n        return (\n            <MenuItem\n                {...itemProps}\n                key={suggestion.label}\n                selected={isHighlighted}\n                component=\"div\"\n                style={{\n                    height: '22px',\n                    fontSize: '16px',\n                    fontWeight: isSelected ? 500 : 400,\n                }}\n            >\n                {suggestion.label}\n            </MenuItem>\n        );\n    }\n    select(selectedItem) {\n        const list = this.state.suggestion_list;\n        if (list && list.length > 0 && this.state.onSelect) {\n            for (let i = 0; i < list.length; i++) {\n                if (list[i].label === selectedItem) {\n                    this.state.onSelect(selectedItem, list[i].data);\n                    this.setState({isOpen: false, selection_list: [], value: selectedItem})\n                }\n            }\n        }\n    }\n    // keyboard handler for drop down menu list (cursor up/down controls + enter)\n    handleKey(event) {\n        const si = this.state.selectedIndex;\n        const list = this.state.suggestion_list;\n        if (list.length === 0) {\n            this.setState({selectedIndex: -1})\n        } else {\n            if (event.keyCode === 13) {  // select\n                if (si >= 0 && si < list.length) {\n                    this.select(list[si].label);\n                }\n            } else if (event.keyCode === 38) { // arrow up\n                if (si > 0) {\n                    this.setState({selectedIndex: si - 1});\n                } else {\n                    this.setState({selectedIndex: 0});\n                }\n            } else if (event.keyCode === 40) { // arrow down\n                if (si < 0) {\n                    this.setState({selectedIndex: 0});\n                } else {\n                    if (si + 1 >= list.length) {\n                        this.setState({selectedIndex: list.length - 1});\n                    } else {\n                        this.setState({selectedIndex: si + 1});\n                    }\n                }\n            }\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return (<h1>auto-complete.js: Something went wrong.</h1>);\n        }\n        return (\n            <div style={styles.control}>\n\n                <div style={styles.downShift}>\n                    <Downshift id={this.state.id}\n                               onSelect={(data) => this.select(data)} >\n                        {({\n                              getItemProps,\n                              selectedItem,\n                          }) => (\n                            <div>\n                                <TextField\n                                    placeholder={this.state.label}\n                                    inputProps={{fontSize: '30px'}}\n                                    value={this.state.value}\n                                    onClick={() => this.showAllData(true)}\n                                    onBlur={() => this.closeControl()}\n                                    spellCheck={false}\n                                    onKeyDown={(event) => {\n                                        if (this.state.isOpen)\n                                            this.handleKey(event);\n                                        else\n                                            this.showAllData(true);\n                                    }}\n                                    onChange={(event) => {  this.setState({value: event.target.value});\n                                        this.getLookupData(event.target.value);\n                                    }}\n                                    fullWidth={true}\n                                />\n                                {\n                                    !this.state.isOpen &&\n                                    <div style={styles.pullDownBox}>\n                                        <img src=\"../images/pulldown.svg\" style={styles.pullDownImage} onClick={() => this.showAllData(false)} alt=\"auto complete\" />\n                                    </div>\n                                }\n                                {\n                                    this.state.isOpen &&\n                                    <div style={styles.pullDownBox}>\n                                        <img src=\"../images/pulldown-rotated.svg\" style={styles.pullDownImage} onClick={() => this.showAllData(false)} alt=\"auto complete\" />\n                                    </div>\n                                }\n                                {this.state.isOpen &&\n                                <Paper\n                                    square\n                                    style={{\n                                        position: \"absolute\",\n                                        zIndex: \"999\",\n                                        marginTop: 8,\n                                        paddingBottom: \"20px\",\n                                        width: '500px',\n                                        minHeight: '30px',\n                                        maxHeight: '300px',\n                                        overflowX: 'auto',\n                                        overflowY: 'auto',\n                                    }}\n                                >\n                                    {this.state.suggestion_list.map((suggestion, index) =>\n                                        AutoComplete.renderSuggestion({\n                                            suggestion,\n                                            index,\n                                            itemProps: getItemProps({\n                                                item: suggestion.label,\n                                                value: suggestion.label,\n                                                data: suggestion.data\n                                            }),\n                                            highlightedIndex: this.state.selectedIndex,\n                                            selectedItem,\n                                        }),\n                                    )}\n                                </Paper>\n                                }\n                            </div>\n                        )}\n                    </Downshift>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default AutoComplete;\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\n\nexport class OrganisationEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            onSave: props.onSave,\n            onError: props.onError,\n\n            id: this.props.id,\n            name: this.props.name,\n            enabled: this.props.enabled,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            this.state.onSave({id: this.state.id,\n                name: this.state.name,\n                enabled: this.state.enabled,\n            });\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            onSave: props.onSave,\n            onError: props.onError,\n\n            id: props.id,\n            name: props.name,\n            max_tpm: props.max_tpm,\n            analytics_window_size_in_months: props.analytics_window_size_in_months,\n            enabled: props.enabled,\n            bot_enabled: props.bot_enabled,\n            analytics_enabled: props.analytics_enabled,\n            operator_enabled: props.operator_enabled,\n            language_enabled: props.language_enabled,\n        })\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>organisation-edit.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    open={this.state.open}\n                    fullWidth={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\">Edit Organisation</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={3}>\n                            <div>organisation's name</div>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <TextField\n                                autoFocus={true}\n                                onChange={(event) => this.setState({name: event.target.value})}\n                                placeholder=\"name\"\n                                variant=\"standard\"\n                                fullWidth={true}\n                                value={this.state.name}\n                            />\n                        </Grid>\n                        <Grid item xs={2} />\n\n\n                        <Grid item xs={4} />\n                        <Grid item xs={6}>\n                            <Checkbox\n                                checked={this.state.enabled}\n                                onChange={(event) => { this.setState({enabled: event.target.checked}); }}\n                                value=\"enable this organisation?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            organisation enabled?\n                        </Grid>\n                        <Grid item xs={2} />\n\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.handleSave()}>Save</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default OrganisationEdit;\n","import React from 'react';\n\nconst styles = {\n    uploadContainer: {\n        float: 'left',\n        width: '400px',\n        minWidth: '400px',\n        // border: '1px solid lightgray',\n        padding: '1px',\n        marginLeft: '10px',\n        background: 'white',\n        fontWeight: 700,\n        fontSize: '10pt',\n        cursor: 'pointer',\n    },\n    formWidth: {\n        marginTop: '-20px',\n    },\n    uploadControl: {\n        marginTop: '10px',\n    },\n    imageButton: {\n        float: 'left',\n        marginRight: '20px',\n        paddingTop: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    restoreImage: {\n        width: '25px',\n    },\n    busyImage: {\n        width: '28px',\n        height: '28px',\n        marginTop: '-10px',\n        float: 'left',\n    },\n    uploadInput: {\n        float: 'left',\n    },\n    uploadWheel: {\n        marginLeft: '5px',\n        marginTop: '14px',\n        height: '28px',\n        float: 'left',\n    },\n};\n\nexport class RestoreUpload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filename: '',\n            fileType: '',\n            data: '',\n            organisationId: props.organisationId,\n            onError: props.onError,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            organisationId: nextProps.organisationId,\n            onError: nextProps.onError,\n        });\n    }\n\n    _handleImageChange(e) {\n        e.preventDefault();\n\n        const self = this;\n        const reader = new FileReader();\n        const file = e.target.files[0];\n        const filename = file['name'];\n        const fileType = file['type'];\n\n        reader.onloadend = () => {\n            self.setState({\n                filename: filename,\n                fileType: fileType,\n                data: reader.result\n            });\n        };\n        reader.readAsDataURL(file)\n    }\n\n    upload() {\n        if (this.state.data) {\n            const payload = {\n                organisationId: this.state.organisationId,\n                data: this.state.data,\n            };\n            if (this.props.doUpload) {\n                this.props.doUpload(payload);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(e) => this._handleSubmit(e)} style={styles.uploadContainer}>\n                    <div style={styles.formWidth}>\n                        {\n                            this.state.data && this.state.data.length > 0 && this.state.fileType === \"text/plain\" &&\n                            <div style={styles.imageButton} onClick={() => this.upload()}><img\n                                style={styles.restoreImage} src=\"../images/restore.svg\"\n                                title={\"Click here to restore data from \\\"\" + this.state.filename + \"\\\"\"}\n                                alt=\"restore data from file\"/></div>\n                        }\n                        <input style={styles.uploadControl}\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default RestoreUpload;\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {Api} from '../common/api'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Comms from \"../common/comms\";\nimport {Home} from \"../home\";\nimport {OrganisationEdit} from \"./organisation-edit\"\nimport Grid from \"@material-ui/core/Grid\";\nimport RestoreUpload from \"../common/restore-upload\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\n\nconst styles = {\n    pageWidth: {\n        width: '900px'\n    },\n    label: {\n        color: '#555',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    editBox: {\n        width: '500px',\n        marginBottom: '15px',\n    },\n    roleBlock: {\n        padding: '5px',\n        marginTop: '20px',\n        float: 'left',\n        width: '400px',\n        border: '1px solid #888',\n        borderRadius: '4px',\n        marginLeft: '10px',\n    },\n    roleLabel: {\n        fontSize: '0.8em',\n        color: '#aaa',\n    },\n    roleArea: {\n        padding: '20px',\n    },\n    roleChip: {\n        margin: '2px',\n    },\n    addImage: {\n        width: '25px',\n    },\n    textFieldBox: {\n        float: 'left',\n    },\n    imageBox: {\n        float: 'left',\n    },\n    imageSize: {\n        marginTop: '20px',\n        width: '20px',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n\n    searchBox: {\n        boxShadow: 'none',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n    copiedStyle: {\n        fontSize: '10px',\n        marginLeft: '25px',\n        marginTop: '-22px',\n        position: 'absolute',\n        float: 'left',\n        zIndex: '99',\n    },\n    organisationIdLabel: {width: '170px', float: 'left', height: '24px'},\n    copyImageSpan: {float: 'left', marginTop: '-5px', marginLeft: '10px'},\n    clipboardImage: {width: '24px', height: '24px;'},\n};\n\n\nexport class Organisations extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            edit_organisation: false,\n\n            edit_organisation_id: \"\",\n            edit_name: \"\",\n            max_tpm: 0,\n            analytics_window_size_in_months: 12,\n            enabled: true,\n            bot_enabled: true,\n            analytics_enabled: true,\n            operator_enabled: true,\n            language_enabled: true,\n\n            // organisation id view dialog\n            copied_visible: '',\n            view_organisation_id: false,\n\n            organisation: null,\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    addNewOrganisation() {\n        this.setState({edit_organisation: true,\n                             organisation: null,\n                             edit_organisation_id: \"\",\n                             edit_name: \"\",\n                             max_tpm: 0,\n                             analytics_window_size_in_months: 12,\n                             enabled: true,\n                             bot_enabled: true,\n                             analytics_enabled: true,\n                             operator_enabled: true,\n                             language_enabled: true,\n        })\n    }\n    refreshSecurityId() {\n        this.setState({edit_security_id: Api.createGuid()})\n    }\n    editOrganisation(organisation) {\n        if (organisation) {\n            this.setState({edit_organisation: true,\n                                 organisation: organisation,\n                                 id: organisation.id,\n                                 name: organisation.name,\n                                 max_tpm: Api.defined(organisation.maxTransactionsPerMonth) ? organisation.maxTransactionsPerMonth : 0,\n                                 analytics_window_size_in_months: Api.defined(organisation.analyticsWindowInMonths) ? organisation.analyticsWindowInMonths : 12,\n                                 enabled: Api.defined(organisation.enabled) ? organisation.enabled : true,\n                                 bot_enabled: Api.defined(organisation.botEnabled) ? organisation.botEnabled : true,\n                                 analytics_enabled: Api.defined(organisation.analyticsEnabled) ? organisation.analyticsEnabled : true,\n                                 operator_enabled: Api.defined(organisation.operatorEnabled) ? organisation.operatorEnabled : true,\n                                 language_enabled: Api.defined(organisation.languageEnabled) ? organisation.languageEnabled : true,\n            })\n        }\n    }\n    deleteOrganisationAsk(organisation) {\n        if (organisation && this.props.openDialog) {\n            this.props.openDialog(\"are you sure you want to remove \\\"\" + organisation.name + \"\\\" ?\",\n                                  \"Remove Organisation\", (action) => { this.deleteOrganisation(action) });\n            this.setState({organisation: organisation})\n        }\n    }\n    deleteOrganisation(action) {\n        if (action) {\n            this.props.deleteOrganisation(this.state.organisation.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getOrganisationList();\n        }\n    }\n    getOrganisations() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        for (const i in this.props.organisation_list) {\n            if (i >= first && i < last) {\n                if (this.props.organisation_list.hasOwnProperty(i))\n                    paginated_list.push(this.props.organisation_list[i]);\n            }\n        }\n        return paginated_list;\n    }\n    save(organisation) {\n        if (organisation) {\n            if (organisation.name.length > 0) {\n                this.props.updateOrganisation({\n                    id: Api.defined(organisation.id) ? organisation.id : '', name: organisation.name,\n                    maxTransactionsPerMonth: organisation.max_tpm,\n                    analyticsWindowInMonths: organisation.analytics_window_size_in_months, enabled: organisation.enabled,\n                    botEnabled: organisation.bot_enabled, analyticsEnabled: organisation.analytics_enabled,\n                    operatorEnabled: organisation.operator_enabled, languageEnabled: organisation.language_enabled,\n                });\n                this.setState({edit_organisation: false, organisation: null});\n            } else {\n                this.props.setError(\"Incomplete Data\", \"Please complete all fields.  Must have a name.\");\n            }\n        } else {\n            this.setState({edit_organisation: false, organisation: null});\n        }\n    }\n    backupAll() {\n        window.open(Comms.get_backup_url(this.props.selected_organisation_id, 'all'), '_blank');\n    }\n    backup(organisationId) {\n        window.open(Comms.get_backup_url(organisationId, 'specific'), '_blank');\n    }\n    restore(data) {\n        if (data && data.data && data.data.length > 0) {\n            this.props.restore(data.data);\n        }\n    }\n    downloadHtml(html, organisation) {\n        window.open(Comms.get_html_url(html, organisation.id), '_blank');\n    }\n    viewIds(organisation) {\n        this.setState({view_organisation_id: true, organisation: organisation});\n    }\n    startCopiedVisible(org_id) {\n        this.setState({copied_visible: org_id});\n        window.setTimeout(() => { this.setState({copied_visible: \"\"})}, 1000);\n    }\n    render() {\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        return (\n            <div>\n                <OrganisationEdit open={this.state.edit_organisation}\n                                    id={this.state.id}\n                                    name={this.state.name}\n                                    enabled={this.state.enabled}\n                                    onError={(title, err) => this.props.showError(title, err)}\n                                    onSave={(data) => this.save(data)} />\n\n                <div style={styles.searchBox}>\n                    <Grid item xs={12}>\n                        <div style={styles.findBox}>\n                            <div style={styles.floatLeftLabel}>filter</div>\n                            <div style={styles.searchFloatLeft}>\n                                <input type=\"text\" value={this.props.user_filter} autoFocus={true} style={styles.text}\n                                       onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                       onChange={(event) => {\n                                           this.props.setOrganisationFilter(event.target.value)\n                                       }}/>\n                            </div>\n                            <div style={styles.floatLeft}>\n                                <img style={styles.search}\n                                     onClick={() => this.props.getOrganisationList()}\n                                     src=\"../images/dark-magnifying-glass.svg\" title=\"filter\" alt=\"filter\"/>\n                            </div>\n                        </div>\n                    </Grid>\n                </div>\n\n                <br clear=\"both\" />\n\n                <Paper style={styles.pageWidth}>\n                    <Table>\n                        <TableHead>\n                            <TableRow style={styles.tableHeaderStyle}>\n                                <TableCell style={styles.tableHeaderStyle}>organisation</TableCell>\n                                <TableCell style={styles.tableHeaderStyle}>actions</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                this.getOrganisations().map((organisation) => {\n                                    return (\n                                        <TableRow key={organisation.id}>\n                                            <TableCell>\n                                                <div style={styles.label}>{organisation.name}</div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <div style={styles.linkButton}\n                                                     onClick={() => { this.viewIds(organisation); }}>\n                                                    <img src=\"../images/id.svg\" style={styles.dlImageSize}\n                                                         title=\"view knowledge base ids\" alt=\"ids\"/>\n                                                </div>\n                                                <div style={styles.linkButton} onClick={() => this.editOrganisation(organisation)}>\n                                                    <img src=\"../images/edit.svg\" style={styles.dlImageSize} title=\"edit organisation\" alt=\"edit\"/>\n                                                </div>\n                                                <div style={styles.linkButton} onClick={() => this.deleteOrganisationAsk(organisation)}>\n                                                    <img src=\"../images/delete.svg\" style={styles.dlImageSize} title=\"remove organisation\" alt=\"remove\"/>\n                                                </div>\n                                                <div style={styles.linkButton} onClick={() => this.downloadHtml(\"search\", organisation)}>\n                                                    <img src=\"../images/search.svg\" style={styles.dlImageSize} title=\"download this organisation's search interface (html)\" alt=\"download search interface\"/>\n                                                </div>\n                                                {isAdmin &&\n                                                <div style={styles.linkButton} onClick={() => this.backup(organisation.id)}>\n                                                    <img src=\"../images/backup.svg\" style={styles.dlImageSize} title={\"backup this organisation\"}\n                                                         alt={\"backup \" + organisation.name} />\n                                                </div>\n                                                }\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                })\n                            }\n                            <TableRow>\n                                <TableCell colSpan={2}>\n                                    {isAdmin &&\n                                    <div style={styles.imageButton} onClick={() => this.backupAll()}><img\n                                        style={styles.addImage} src=\"../images/backup.svg\"\n                                        title=\"backup all organisations\"\n                                        alt=\"backup all organisations\"/></div>\n                                    }\n                                    <div style={styles.imageButton} onClick={() => this.addNewOrganisation()}><img\n                                        style={styles.addImage} src=\"../images/add.svg\" title=\"add new organisation\"\n                                        alt=\"add new organisation\"/></div>\n                                    <br />\n                                    {isAdmin &&\n                                    <RestoreUpload doUpload={(data) => this.restore(data)}\n                                                   organisationId={this.props.selected_organisation_id}\n                                                   onError={(err) => this.props.setError(\"Error\", err)} />\n                                    }\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={this.props.organisation_list.length}\n                        rowsPerPage={this.state.page_size}\n                        page={this.state.page}\n                        backIconButtonProps={{\n                            'aria-label': 'Previous Page',\n                        }}\n                        nextIconButtonProps={{\n                            'aria-label': 'Next Page',\n                        }}\n                        onChangePage={(event, page) => this.changePage(page)}\n                        onChangeRowsPerPage={(event) => this.changePageSize(event.target.value)}\n                    />\n\n                </Paper>\n\n\n                <Dialog aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                        open={this.state.view_organisation_id}\n                        disableBackdropClick={true}\n                        disableEscapeKeyDown={true}\n                        fullWidth={true}\n                        maxWidth=\"md\"\n                        onClose={() => this.setState({view_details: false})} >\n                    <DialogTitle>{this.state.organisation != null ? this.state.organisation.name : \"\"} organisation-id</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <div style={styles.organisationIdLabel}>\n                                organisation id\n                            </div>\n                            <div style={styles.floatLeft}>{this.state.organisation ? this.state.organisation.id : \"\"}</div>\n                            <span style={styles.copyImageSpan} title={'copy organisation id'}>\n                                <img src='../images/clipboard-copy.svg' style={styles.clipboardImage} alt={'copy'}\n                                     onClick={() => { navigator.clipboard.writeText(this.state.organisation ? this.state.organisation.id : \"\");\n                                                      this.startCopiedVisible(this.state.organisation.id);\n                                     }}/>\n                                {this.state.organisation != null && this.state.copied_visible === this.state.organisation.id &&\n                                    <div style={styles.copiedStyle}>copied</div>\n                                }\n                            </span>\n                            <br clear='both' />\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.setState({view_organisation_id: false})}>Close</Button>\n                    </DialogActions>\n                </Dialog>\n\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n        user: state.appReducer.user,\n\n        organisation_list: state.appReducer.organisation_list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Organisations);\n\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {Home} from '../home';\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst styles = {\n    pageWidth: {\n        width: '900px',\n    },\n    label: {\n        color: '#555',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    disabledLinkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#eee',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    editBox: {\n        width: '500px',\n    },\n    roleBlock: {\n        padding: '5px',\n        marginTop: '20px',\n        float: 'left',\n        width: '400px',\n        border: '1px solid #888',\n        borderRadius: '4px',\n        marginLeft: '10px',\n    },\n    roleLabel: {\n        fontSize: '0.8em',\n        color: '#aaa',\n    },\n    roleArea: {\n        padding: '20px',\n    },\n    roleChip: {\n        margin: '2px',\n    },\n    addImage: {\n        width: '25px',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    dlImageSizeDisabled: {\n        width: '24px',\n        opacity: '0.2'\n    },\n    searchBox: {\n        boxShadow: 'none',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n};\n\nconst roles = ['admin', 'operator', 'crawler', 'manager']; // reporter has been removed temporarily\n\nexport class UserManager extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            edit_user: false,\n            user: null,\n            edit_user_id: \"\",\n            edit_first_name: \"\",\n            edit_surname: \"\",\n            edit_email: \"\",\n            edit_password: \"\",\n            edit_roles: [],\n            edit_kb_list: [],\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    numUsers(organisation_id, isAdmin) {\n        let count = 0;\n        for (const i in this.props.user_list) {\n            const user = this.props.user_list[i];\n            const roleStr = UserManager.formatRoles(this.props.selected_organisation_id, user.roles);\n            if (isAdmin || roleStr.length > 0) { // has a role or isAdmin?\n                count += 1;\n            }\n        }\n        return count;\n    }\n    getUsers(isAdmin) {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        let index = 0;\n        for (const i in this.props.user_list) {\n            // paginate all users - but only those that have roles in this organisation\n            const user = this.props.user_list[i];\n            const roleStr = UserManager.formatRoles(this.props.selected_organisation_id, user.roles);\n            if (isAdmin || roleStr.length > 0) { // has a role or is admin?\n                if (index >= first && index < last) {\n                    paginated_list.push(user);\n                }\n                index += 1; // one more user in this set of roles\n            }\n        }\n        return paginated_list;\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    static formatRoles(organisationId, roles) {\n        let roles_str = \"\";\n        for (const role of roles) {\n            // admin always displays\n            if (role.organisationId === organisationId || role.role === \"admin\") {\n                // make sure we add the admin role only once\n                if (role.role === \"admin\" && roles_str.indexOf(\"admin\") === -1) {\n                    if (roles_str.length > 0) {\n                        roles_str += \", \";\n                    }\n                    roles_str += role.role;\n                } else if (role.role !== \"admin\") {  // any other role just add\n                    if (roles_str.length > 0) {\n                        roles_str += \", \";\n                    }\n                    roles_str += role.role;\n                }\n            }\n        }\n        return roles_str;\n    }\n    getAvailableRoles() {\n        const list = [];\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        for (const available_role of roles) {\n            let found = false;\n            for (const role of this.state.edit_roles) {\n                if (available_role === role) {\n                    found = true;\n                }\n            }\n            if (!found) {\n                if (available_role === 'admin' && isAdmin) {\n                    list.push(available_role);\n                } else if (available_role !== 'admin') {\n                    list.push(available_role);\n                }\n            }\n        }\n        return list;\n    }\n    addNewUser() {\n        this.setState({edit_user: true, user: null,\n                            edit_user_id: \"\", edit_first_name: \"\",\n                            edit_surname: \"\", edit_email: \"\",\n                            edit_password: \"\",\n                            edit_roles: [],\n                            edit_kb_list: [],\n                        })\n    }\n    editUser(user) {\n        if (user) {\n            const filtered_roles = user.roles.filter(x => x.organisationId === this.props.selected_organisation_id);\n            const role_list = [];\n            for (const role of filtered_roles) {\n                role_list.push(role.role);\n            }\n            const kb_list = [];\n            if (user.operatorKBList) {\n                for (const operatorKB of user.operatorKBList) {\n                    for (const available_kb of this.props.knowledge_base_list) {\n                        if (available_kb.kbId === operatorKB.kbId) {\n                            kb_list.push(available_kb);\n                        }\n                    }\n                }\n            }\n            this.setState({edit_user: true, user: user,\n                edit_user_id: user.id,\n                edit_first_name: user.firstName,\n                edit_surname: user.surname,\n                edit_email: user.email,\n                edit_password: \"\",\n                edit_roles: role_list,\n                edit_kb_list: kb_list,\n            })\n        }\n    }\n    fillNames() {\n        function capitalizeFirstLetter(string) {\n            if (string.length > 0) {\n                return string.slice(0, 1).toUpperCase() + string.slice(1);\n            }\n            return string;\n        }        // if there is an email address and there is no first-surname - try and use the email address to complete\n        if (this.state.edit_email.length > 0 && this.state.edit_email.indexOf('@') > 0) {\n            const firstPart = this.state.edit_email.split('@')[0];\n            const firstNameSurname = firstPart.split('.');\n            let newFirst = \"\";\n            let newSur = \"\";\n            if (this.state.edit_first_name.length === 0) {\n                newFirst = capitalizeFirstLetter(firstNameSurname[0]);\n            }\n            if (this.state.edit_surname.length === 0 && firstNameSurname.length > 1) {\n                newSur = capitalizeFirstLetter(firstNameSurname[1]);\n            }\n            if (newFirst.length > 0 && newSur.length > 0) {\n                this.setState({edit_first_name: newFirst, edit_surname: newSur});\n\n            } else if (newFirst.length > 0) {\n                this.setState({edit_first_name: newFirst});\n\n            } else if (newSur.length > 0) {\n                this.setState({edit_surname: newSur});\n            }\n        }\n    }\n    removeRoleFromUser(role) {\n        const new_roles = [];\n        for (const erole of this.state.edit_roles) {\n            if (role !== erole) {\n                new_roles.push(erole);\n            }\n        }\n        this.setState({edit_roles: new_roles});\n    }\n    addRoleToUser(role) {\n        const roles = JSON.parse(JSON.stringify(this.state.edit_roles));\n        roles.push(role);\n        this.setState({edit_roles: roles});\n    }\n    deleteUserAsk(user, isAdmin) {\n        if (user && this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0) {\n            this.props.openDialog(\"are you sure you want to remove \" + user.firstName + \" \" + user.surname + \"?\",\n                \"Remove User\", (action) => {\n                    this.deleteUser(action)\n                });\n            this.setState({user: user});\n        } else {\n            this.props.setError('No Organisation', 'Please select an organisation from the drop-down box.')\n        }\n    }\n    deleteUser(action) {\n        if (action) {\n            this.props.deleteUser(this.props.selected_organisation_id, this.state.user.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    editCancel() {\n        this.setState({edit_user: false, user: null});\n        if (this.state.closeDialog) {\n            this.state.closeDialog();\n        }\n    }\n    editOk() {\n        if (this.state.edit_first_name.length > 0 &&\n            this.state.edit_surname.length > 0 &&\n            this.state.edit_email.length > 0 &&\n            (this.state.edit_user_id.length > 0 || this.state.edit_password.length > 0)) {\n\n            // do we have an operator and knowledge bases?\n            if (UserManager.hasOperatorRole(this.state.edit_roles) && this.state.edit_kb_list.length === 0) {\n                this.props.setError(\"Incomplete Data\", \"An operator must have at least one knowledge base associated with it.\");\n            } else {\n                // organisation_id, user_id, name, surname, email, password, role_list, kb_list\n                this.props.updateUser(this.props.selected_organisation_id, this.state.edit_user_id,\n                                      this.state.edit_first_name, this.state.edit_surname, this.state.edit_email,\n                                      this.state.edit_password, this.state.edit_roles, this.state.edit_kb_list);\n                this.setState({edit_user: false, user: null});\n            }\n        } else {\n            this.props.setError(\"Incomplete Data\", \"Please complete all fields.  \" +\n                \"Must have email-address, first-name, surname, and at least one role.  \" +\n                \"New Accounts must have a password.\");\n        }\n    }\n    static hasOperatorRole(edit_roles) {\n        if (edit_roles) {\n            for (const role of edit_roles) {\n                if (role === \"operator\") {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getUsers();\n        }\n    }\n    removeKBFromUser(kb) {\n        const new_kbs = [];\n        for (const ekb of this.state.edit_kb_list) {\n            if (kb.kbId !== ekb.kbId) {\n                new_kbs.push(ekb);\n            }\n        }\n        this.setState({edit_kb_list: new_kbs});\n    }\n    addKBToUser(kb) {\n        const kbs = JSON.parse(JSON.stringify(this.state.edit_kb_list));\n        kbs.push(kb);\n        this.setState({edit_kb_list: kbs});\n    }\n    getAvailableKnowledgeBases() {\n        const list = [];\n        for (const available_kb of this.props.knowledge_base_list) {\n            let found = false;\n            for (const kb of this.state.edit_kb_list) {\n                if (available_kb.kbId === kb.kbId) {\n                    found = true;\n                }\n            }\n            if (!found) {\n                list.push(available_kb);\n            }\n        }\n        return list;\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0;\n    }\n    render() {\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        const isManager = Home.hasRole(this.props.user, ['manager']);\n        return (\n            <div>\n                { this.isVisible() &&\n                <div>\n                <div style={styles.searchBox}>\n                    <Grid item xs={12}>\n                        <div style={styles.findBox}>\n                            <div style={styles.floatLeftLabel}>filter</div>\n                            <div style={styles.searchFloatLeft}>\n                                <input type=\"text\" value={this.props.user_filter} autoFocus={true} style={styles.text}\n                                       onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                       onChange={(event) => {\n                                           this.props.setUserFilter(event.target.value)\n                                       }}/>\n                            </div>\n                            <div style={styles.floatLeft}>\n                                <img style={styles.search}\n                                     onClick={() => this.props.getUsers()}\n                                     src=\"../images/dark-magnifying-glass.svg\" title=\"filter\" alt=\"filter\"/>\n                            </div>\n                        </div>\n                    </Grid>\n                </div>\n\n                <br clear=\"both\" />\n\n                <Paper style={styles.pageWidth}>\n                    <Table>\n                        <TableHead>\n                            <TableRow style={styles.tableHeaderStyle}>\n                                <TableCell style={styles.tableHeaderStyle}>user name</TableCell>\n                                <TableCell style={styles.tableHeaderStyle}>first name</TableCell>\n                                <TableCell style={styles.tableHeaderStyle}>surname</TableCell>\n                                <TableCell style={styles.tableHeaderStyle}>roles</TableCell>\n                                <TableCell style={styles.tableHeaderStyle}>actions</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                this.getUsers(isAdmin).map((user) => {\n                                    const canEdit = Home.canEdit(user, isAdmin, isManager);\n                                    const canDelete = Home.canDelete(user, this.props.user, isAdmin, isManager);\n                                    return (\n                                        <TableRow key={user.id}>\n                                            <TableCell>\n                                                <div style={styles.label}>{user.email}</div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <div style={styles.label}>{user.firstName}</div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <div style={styles.label}>{user.surname}</div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <div style={styles.label}>{UserManager.formatRoles(this.props.selected_organisation_id, user.roles)}</div>\n                                            </TableCell>\n                                            <TableCell>\n                                                { !canEdit &&\n                                                    <div style={styles.disabledLinkButton} title=\"cannot edit this user\">\n                                                        <img src=\"../images/edit.svg\" style={styles.dlImageSizeDisabled}\n                                                             title=\"cannot edit this user\" alt=\"cannot edit this user\"/>\n                                                    </div>\n                                                }\n                                                { canEdit &&\n                                                    <div style={styles.linkButton} title=\"Edit this user\"\n                                                         onClick={() => this.editUser(user)}>\n                                                        <img src=\"../images/edit.svg\" style={styles.dlImageSize}\n                                                             title=\"edit user\" alt=\"edit\"/>\n                                                    </div>\n                                                }\n                                                {\n                                                    !canDelete &&\n                                                    <div style={styles.disabledLinkButton} title=\"cannot remove this user\">\n                                                        <img src=\"../images/delete.svg\" style={styles.dlImageSizeDisabled}\n                                                             title=\"cannot remove this user\" alt=\"cannot remove this user\"/>\n                                                    </div>\n                                                }\n                                                {\n                                                    canDelete &&\n                                                    <div style={styles.linkButton} title=\"Remove this user\"\n                                                         onClick={() => this.deleteUserAsk(user, isAdmin)}>\n                                                        <img src=\"../images/delete.svg\" style={styles.dlImageSize}\n                                                             title={isAdmin ? \"remove user\" : \"remove user roles\"} alt=\"remove\"/>\n                                                    </div>\n                                                }\n                                            </TableCell>\n                                        </TableRow>\n                                    )\n                                })\n                            }\n                            <TableRow>\n                                <TableCell />\n                                <TableCell />\n                                <TableCell />\n                                <TableCell />\n                                <TableCell>\n                                    {this.props.selected_organisation_id.length > 0 && (isAdmin || isManager) &&\n                                    <div style={styles.imageButton} onClick={() => this.addNewUser()}><img\n                                        style={styles.addImage} src=\"../images/add.svg\" title=\"add new user\"\n                                        alt=\"add new user\"/></div>\n                                    }\n                                </TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell colSpan={5}>\n                                    <TablePagination\n                                        rowsPerPageOptions={[5, 10, 25]}\n                                        component=\"div\"\n                                        count={this.numUsers(this.props.selected_organisation_id, isAdmin)}\n                                        rowsPerPage={this.state.page_size}\n                                        page={this.state.page}\n                                        backIconButtonProps={{\n                                            'aria-label': 'Previous Page',\n                                        }}\n                                        nextIconButtonProps={{\n                                            'aria-label': 'Next Page',\n                                        }}\n                                        onChangePage={(event, page) => this.changePage(page)}\n                                        onChangeRowsPerPage={(event) => this.changePageSize(event.target.value)}\n                                    />\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n\n                </Paper>\n\n\n                <Dialog aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                        open={this.state.edit_user}\n                        disableBackdropClick={true}\n                        disableEscapeKeyDown={true}\n                        fullWidth={true}\n                        maxWidth=\"md\"\n                        onClose={() => this.setState({edit_user: false, user: null})} >\n                    <DialogTitle>{this.state.edit_user_id ? \"Edit User\" : \"Add New User\"}</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            autoFocus={true}\n                            style={styles.editBox}\n                            placeholder=\"email\"\n                            label=\"email\"\n                            value={this.state.edit_email}\n                            onBlur={() => this.fillNames()}\n                            onChange = {(event) => this.setState({edit_email: event.target.value})}\n                        />\n                        <TextField\n                            style={styles.editBox}\n                            placeholder=\"first name\"\n                            label=\"first name\"\n                            value={this.state.edit_first_name}\n                            onChange = {(event) => this.setState({edit_first_name: event.target.value})}\n                        />\n                        <TextField\n                            style={styles.editBox}\n                            placeholder=\"surname\"\n                            label=\"surname\"\n                            value={this.state.edit_surname}\n                            onChange = {(event) => this.setState({edit_surname: event.target.value})}\n                        />\n                        <TextField\n                            style={styles.editBox}\n                            placeholder=\"password\"\n                            label=\"password\"\n                            type=\"password\"\n                            value={this.state.edit_password}\n                            onChange = {(event) => this.setState({edit_password: event.target.value})}\n                        />\n                        <div>\n                            <div style={styles.roleBlock}>\n                                <div style={styles.roleLabel}>user roles</div>\n                                <div style={styles.roleArea}>\n                                {\n                                    this.state.edit_roles.map((role) => {\n                                        return (<Chip key={role} color=\"secondary\"\n                                                      style={styles.roleChip}\n                                                      onClick={() => this.removeRoleFromUser(role)}\n                                                      label={role} variant=\"outlined\" />)\n                                    })\n                                }\n                                </div>\n                            </div>\n                            <div style={styles.roleBlock}>\n                                <div style={styles.roleLabel}>available roles</div>\n                                <div style={styles.roleArea}>\n                                    {\n                                        this.getAvailableRoles().map((role) => {\n                                            return (<Chip key={role} color=\"primary\"\n                                                          style={styles.roleChip}\n                                                          onClick={() => this.addRoleToUser(role)}\n                                                          label={role} variant=\"outlined\" />)\n                                        })\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        { UserManager.hasOperatorRole(this.state.edit_roles) &&\n                            <div>\n                                <div style={styles.roleBlock}>\n                                    <div style={styles.roleLabel}>operator's knowledge bases</div>\n                                    <div style={styles.roleArea}>\n                                        {\n                                            this.state.edit_kb_list.map((kb) => {\n                                                return (<Chip key={kb.kbId} color=\"secondary\"\n                                                              style={styles.roleChip}\n                                                              onClick={() => this.removeKBFromUser(kb)}\n                                                              label={kb.name} variant=\"outlined\"/>)\n                                            })\n                                        }\n                                    </div>\n                                </div>\n                                <div style={styles.roleBlock}>\n                                    <div style={styles.roleLabel}>operator available knowledge bases</div>\n                                    <div style={styles.roleArea}>\n                                        {\n                                            this.getAvailableKnowledgeBases().map((kb) => {\n                                                return (<Chip key={kb.kbId} color=\"primary\"\n                                                              style={styles.roleChip}\n                                                              onClick={() => this.addKBToUser(kb)}\n                                                              label={kb.name} variant=\"outlined\"/>)\n                                            })\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color=\"primary\" onClick={() => this.editCancel()}>Cancel</Button>\n                        <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.editOk()}>Save</Button>\n                    </DialogActions>\n                </Dialog>\n\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        user_list: state.appReducer.user_list,\n        user_filter: state.appReducer.user_filter,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        knowledge_base_list: state.appReducer.knowledge_base_list,\n        user: state.appReducer.user,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(UserManager);\n\n","import React, {Component} from 'react';\nimport Button from \"@material-ui/core/Button\";\n\nconst active_colour = '#eed000';\nconst inactive_colour = '#c0c0c0';\n\nconst styles = {\n    tableStyle: {\n        marginTop: '10px',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '12px',\n        width: '90%',\n    },\n    tHeader: {\n        height: '22px',\n        marginBottom: '5px',\n        backgroundColor: '#f0f0f0',\n    },\n    tCol: {\n        height: '22px',\n        marginBottom: '5px',\n        backgroundColor: '#f0f0f0',\n    },\n    tCell: {\n        backgroundColor: '#c0c0c0'\n    },\n    legenda: {\n        float: 'left',\n        marginTop: '20px',\n    },\n    activeText: {\n        backgroundColor: active_colour,\n        float: 'left',\n        width: '100px',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '12px',\n        fontWeight: '900',\n        borderRadius: '2px',\n        textAlign: 'center',\n        padding: '5px',\n    },\n    inactiveText: {\n        backgroundColor: inactive_colour,\n        float: 'left',\n        width: '100px',\n        fontFamily: 'Open Sans, sans-serif',\n        fontSize: '12px',\n        fontWeight: '900',\n        borderRadius: '2px',\n        textAlign: 'center',\n        padding: '5px',\n        marginLeft: '10px',\n    },\n    button1: {\n        float: 'left',\n        padding: '5px',\n        marginLeft: '100px',\n        marginTop: '-10px',\n    },\n    button2: {\n        float: 'left',\n        padding: '5px',\n        marginLeft: '10px',\n        marginTop: '-10px',\n    },\n    labelTop: {\n        marginTop: '10px',\n        fontSize: '0.9em',\n        fontWeight: '600',\n    }\n};\n\n\nconst time_list = ['00:00','01:00','02:00','03:00','04:00','05:00','06:00','07:00','08:00','09:00','10:00','11:00',\n                   '12:00','13:00','14:00','15:00','16:00','17:00','18:00','19:00','20:00','21:00','22:00','23:00'];\n\nconst day_list = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];\n\n// time schedule all selected\nconst defaultAllTimesSelected = 'mon-0,tue-0,wed-0,thu-0,fri-0,sat-0,sun-0,mon-1,tue-1,wed-1,thu-1,fri-1,sat-1,sun-1,mon-2,tue-2,wed-2,thu-2,fri-2,sat-2,sun-2,mon-3,tue-3,wed-3,thu-3,fri-3,sat-3,sun-3,mon-4,tue-4,wed-4,thu-4,fri-4,sat-4,sun-4,mon-5,tue-5,wed-5,thu-5,fri-5,sat-5,sun-5,mon-6,tue-6,wed-6,thu-6,fri-6,sat-6,sun-6,mon-7,tue-7,wed-7,thu-7,fri-7,sat-7,sun-7,mon-8,tue-8,wed-8,thu-8,fri-8,sat-8,sun-8,mon-9,tue-9,wed-9,thu-9,fri-9,sat-9,sun-9,mon-10,tue-10,wed-10,thu-10,fri-10,sat-10,sun-10,mon-11,tue-11,wed-11,thu-11,fri-11,sat-11,sun-11,mon-12,tue-12,wed-12,thu-12,fri-12,sat-12,sun-12,mon-13,tue-13,wed-13,thu-13,fri-13,sat-13,sun-13,mon-14,tue-14,wed-14,thu-14,fri-14,sat-14,sun-14,mon-15,tue-15,wed-15,thu-15,fri-15,sat-15,sun-15,mon-16,tue-16,wed-16,thu-16,fri-16,sat-16,sun-16,mon-17,tue-17,wed-17,thu-17,fri-17,sat-17,sun-17,mon-18,tue-18,wed-18,thu-18,fri-18,sat-18,sun-18,mon-19,tue-19,wed-19,thu-19,fri-19,sat-19,sun-19,mon-20,tue-20,wed-20,thu-20,fri-20,sat-20,sun-20,mon-21,tue-21,wed-21,thu-21,fri-21,sat-21,sun-21,mon-22,tue-22,wed-22,thu-22,fri-22,sat-22,sun-22,mon-23,tue-23,wed-23,thu-23,fri-23,sat-23,sun-23';\n\n// display error dialog\nexport class TimeSelect extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onSave: props.onSave,  // save callback\n            time: props.time,\n            time_map: this.setupTimeMap(props.time),\n            has_error: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        let time = '';\n        for (let key in this.state.time_map) {\n            if (this.state.time_map[key] === 1) {\n                if (time.length > 0) {\n                    time += ',';\n                }\n                time += key;\n            }\n        }\n        if (this.state.onSave) {\n            this.state.onSave(time);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            const time_map = this.setupTimeMap(nextProps.time);\n            this.setState({\n                time: nextProps.time,\n                onSave: nextProps.onSave,\n                time_map: time_map,\n            })\n        }\n    }\n    setupTimeMap(time_str) {\n        // \"mon-1,tue-3\" etc.\n        let time_map = {};\n        if (time_str)\n            time_str.split(',').map((item) => {time_map[item] = 1; return time_map[item];});\n        return time_map;\n    }\n    gs(cell) {\n        if (this.state.time_map[cell] === 1) {\n            return {backgroundColor: active_colour}\n        } else {\n            return {backgroundColor: inactive_colour}\n        }\n    }\n    clearAll() {\n        this.setState({time_map: this.setupTimeMap(''), time: ''});\n        if (this.state.onSave) {\n            this.state.onSave('');\n        }\n    }\n    selectAll() {\n        this.setState({time_map: this.setupTimeMap(defaultAllTimesSelected), time: defaultAllTimesSelected});\n        if (this.state.onSave) {\n            this.state.onSave(defaultAllTimesSelected);\n        }\n    }\n    select(item) {\n        let tm = this.state.time_map;\n        if (item === \"all\") {\n            // invert all\n            for (let i = 0; i < 24; i++) {\n                day_list.map( (dow) => {\n                    const str = dow + '-' + i;\n                    if (tm[str] === 1) {\n                        tm[str] = 0;\n                    } else {\n                        tm[str] = 1;\n                    }\n                    return tm[str];\n                });\n            }\n        } else if (item.indexOf('-') > 0) {\n            // single cell selector\n            if (tm[item] === 1) {\n                tm[item] = 0;\n            } else {\n                tm[item] = 1;\n            }\n\n        } else if (day_list.indexOf(item) >= 0) {\n            // 24 hour selector\n            for (let i = 0; i < 24; i++) {\n                const str = item + '-' + i;\n                if (tm[str] === 1) {\n                    tm[str] = 0;\n                } else {\n                    tm[str] = 1;\n                }\n            }\n        } else {\n            // day of week selector\n            day_list.map( (dow) => {\n                const str = dow + '-' + item;\n                if (tm[str] === 1) {\n                    tm[str] = 0;\n                } else {\n                    tm[str] = 1;\n                }\n                return tm[str];\n            });\n        }\n        this.setState({time_map: tm});\n        this.handleSave();\n    }\n    // return a pretty version of GMT time (eg. Tue, 10:21)\n    timeStr() {\n        const gmtTime = new Date().toGMTString();\n        const day = gmtTime.split(\",\")[0];\n        const time = gmtTime.split(\" \")[4].split(\":\");\n        const time_no_seconds = time[0] + \":\" + time[1];\n        return day + \", \" + time_no_seconds;\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>time-select.js: Something went wrong.</h1>;\n        }\n        return (\n            <div>\n                <div style={styles.labelTop}>all times in GMT (now {this.timeStr()})</div>\n                <table style={styles.tableStyle}>\n                    <tbody>\n                    <tr>\n                        <td onClick={() => this.select('all')}/>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"time-\"+value} onClick={() => this.select('' + value)} style={styles.tHeader}>{str}</td>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('mon')} style={styles.tCol}>Monday</td>\n                        { time_list.map((str, value) => {\n                             return (<td key={\"mon-\"+value} onClick={() => this.select('mon-'+value)} style={this.gs('mon-'+value)} />)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('tue')} style={styles.tCol}>Tuesday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"tue-\"+value} onClick={() => this.select('tue-'+value)} style={this.gs('tue-'+value)} />)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('wed')} style={styles.tCol}>Wednesday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"wed-\"+value} onClick={() => this.select('wed-'+value)} style={this.gs('wed-'+value)}/>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('thu')} style={styles.tCol}>Thursday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"thu-\"+value} onClick={() => this.select('thu-'+value)} style={this.gs('thu-'+value)}/>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('fri')} style={styles.tCol}>Friday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"fri-\"+value} onClick={() => this.select('fri-'+value)} style={this.gs('fri-'+value)}/>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('sat')} style={styles.tCol}>Saturday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"sat-\"+value} onClick={() => this.select('sat-'+value)} style={this.gs('sat-'+value)}/>)\n                        })}\n                    </tr>\n                    <tr>\n                        <td onClick={() => this.select('sun')} style={styles.tCol}>Sunday</td>\n                        { time_list.map((str, value) => {\n                            return (<td key={\"sun-\"+value} onClick={() => this.select('sun-'+value)} style={this.gs('sun-'+value)}/>)\n                        })}\n                    </tr>\n                    </tbody>\n                </table>\n\n                <br />\n                <div style={styles.legenda}>\n                    <div style={styles.activeText}>active</div>\n                    <div style={styles.inactiveText}>inactive</div>\n                    <div style={styles.button1}>\n                        <Button variant=\"outlined\"\n                                color=\"secondary\"\n                                onClick={() => this.clearAll()}>\n                            clear all\n                        </Button>\n                    </div>\n                    <div style={styles.button2}>\n                        <Button variant=\"outlined\"\n                                color=\"secondary\"\n                                onClick={() => this.selectAll()}>\n                            select all\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TimeSelect;\n","import React, {Component} from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from '@material-ui/core/TextField';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport {Api} from '../common/api'\nimport {Comms} from \"../common/comms\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TimeSelect from \"../common/time-select\";\n\n\nconst defaultIndexSchedule = 'mon-0,tue-0,wed-0,thu-0,fri-0,sat-0,sun-0,mon-1,tue-1,wed-1,thu-1,fri-1,sat-1,sun-1,mon-2,tue-2,wed-2,thu-2,fri-2,sat-2,sun-2,mon-3,tue-3,wed-3,thu-3,fri-3,sat-3,sun-3';\n\n\nconst styles = {\n    pageWidth: {\n        width: '900px',\n    },\n    label: {\n        color: '#555',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    editBox: {\n        width: '500px',\n        marginBottom: '15px',\n    },\n    sidBox: {\n        width: '350px',\n        marginBottom: '15px',\n    },\n    roleBlock: {\n        padding: '5px',\n        marginTop: '20px',\n        float: 'left',\n        width: '400px',\n        border: '1px solid #888',\n        borderRadius: '4px',\n        marginLeft: '10px',\n    },\n    roleLabel: {\n        fontSize: '0.8em',\n        color: '#aaa',\n    },\n    roleArea: {\n        padding: '20px',\n    },\n    roleChip: {\n        margin: '2px',\n    },\n    addImage: {\n        width: '25px',\n    },\n    textFieldBox: {\n        float: 'left',\n    },\n    imageBox: {\n        float: 'left',\n    },\n    imageSize: {\n        marginTop: '20px',\n        width: '20px',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    timeTabContent: {\n        marginLeft: '40px',\n    },\n    paddingBottom: {\n        display: 'inline-block',\n        marginBottom: '130px',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    copiedStyle: {\n        fontSize: '10px',\n        marginLeft: '25px',\n        marginTop: '-22px',\n        position: 'absolute',\n        float: 'left',\n        zIndex: '99',\n    },\n    lineHeight: {height: '30px'},\n    organisationIdLabel: {width: '170px', float: 'left', height: '24px'},\n    copyImageSpan: {float: 'left', marginTop: '-5px', marginLeft: '10px'},\n    clipboardImage: {width: '24px', height: '24px;'},\n};\n\n\nexport class KnowledgeBases extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: 'general',\n\n            edit_knowledgebase: false,\n            edit_knowledgebase_id: \"\",\n            knowledgeBase: null,\n\n            edit_kb_id: \"\",\n            edit_name: \"\",\n            edit_email: \"\",\n            edit_security_id: \"\",\n            edit_enabled: true,\n            edit_max_queries_per_day: \"0\",\n            edit_analytics_window_size_in_months: \"0\",\n            edit_operator_enabled: true,\n            edit_capacity_warnings: true,\n            edit_created: 0,\n            edit_index_optimization_schedule: defaultIndexSchedule,\n\n            // view ids\n            view_ids: false,\n            copied_visible: '',\n            kb: null,\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    addNewKnowledgeBase() {\n        this.setState({edit_knowledgebase: true, knowledgeBase: null,\n            edit_knowledgebase_id: \"\",\n            edit_name: \"\",\n            edit_email: \"\",\n            edit_enabled: true,\n            edit_max_queries_per_day: \"0\",\n            edit_analytics_window_size_in_months: \"0\",\n            edit_operator_enabled: true,\n            edit_capacity_warnings: true,\n            edit_created: 0,\n            edit_security_id: Api.createGuid(),\n            edit_index_optimization_schedule: defaultIndexSchedule,\n        })\n    }\n    refreshSecurityId() {\n        this.setState({edit_security_id: Api.createGuid()})\n    }\n    editKnowledgeBase(knowledgeBase) {\n        if (knowledgeBase) {\n            this.setState({edit_knowledgebase: true, knowledgeBase: knowledgeBase,\n                edit_knowledgebase_id: knowledgeBase.kbId,\n                edit_name: knowledgeBase.name,\n                edit_email: knowledgeBase.email,\n                edit_security_id: knowledgeBase.securityId,\n                edit_enabled: knowledgeBase.enabled,\n                edit_max_queries_per_day: knowledgeBase.maxQueriesPerDay,\n                edit_analytics_window_size_in_months: knowledgeBase.analyticsWindowInMonths,\n                edit_operator_enabled: knowledgeBase.operatorEnabled,\n                edit_capacity_warnings: knowledgeBase.capacityWarnings,\n                edit_index_optimization_schedule: knowledgeBase.indexOptimizationSchedule,\n                edit_created: knowledgeBase.created,\n            })\n        }\n    }\n    optimizeIndexes(knowledgeBase) {\n        if (knowledgeBase && knowledgeBase.kbId) {\n            this.props.optimizeIndexes(this.props.selected_organisation_id, knowledgeBase.kbId);\n        }\n    }\n    deleteKnowledgeBaseAsk(knowledgeBase) {\n        if (knowledgeBase) {\n            this.props.openDialog(\"are you sure you want to remove \\\"\" + knowledgeBase.name + \"\\\" ?\", \"Remove Knowledge base\", (action) => { this.deleteKnowledgeBase(action) });\n            this.setState({knowledgeBase: knowledgeBase});\n        }\n    }\n    deleteKnowledgeBase(action) {\n        if (action) {\n            this.props.deleteKnowledgeBase(this.props.selected_organisation_id, this.state.knowledgeBase.kbId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    editCancel() {\n        this.setState({edit_knowledgebase: false, knowledgeBase: null});\n    }\n    editOk() {\n        if (this.state.edit_name.length > 0) {\n            this.props.updateKnowledgeBase(this.props.selected_organisation_id, this.state.edit_knowledgebase_id,\n                                           this.state.edit_name, this.state.edit_email, this.state.edit_security_id,\n                                           this.state.edit_enabled, this.state.edit_max_queries_per_day,\n                                           this.state.edit_analytics_window_size_in_months, this.state.edit_operator_enabled,\n                                           this.state.edit_capacity_warnings, this.state.edit_created,\n                                           this.state.edit_index_optimization_schedule);\n            this.setState({edit_knowledgebase: false, knowledgeBase: null});\n        } else {\n            this.props.setError(\"Incomplete Data\", \"Please complete all fields.\");\n        }\n    }\n    viewIds(knowledge_base) {\n        this.setState({view_ids: true, kb: knowledge_base});\n    }\n    downloadHtml(html, kb) {\n        window.open(Comms.get_html_url(html, this.props.selected_organisation_id, kb.kbId), '_blank');\n    }\n    getKnowledgeBases() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        for (const i in this.props.knowledge_base_list) {\n            if (i >= first && i < last) {\n                paginated_list.push(this.props.knowledge_base_list[i]);\n            }\n        }\n        return paginated_list;\n    }\n    updateSchedule(time) {\n        if (time !== null) {\n            this.setState({edit_index_optimization_schedule: time});\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0;\n    }\n    startCopiedVisible(org_id) {\n        this.setState({copied_visible: org_id});\n        window.setTimeout(() => { this.setState({copied_visible: \"\"})}, 1000);\n    }\n    render() {\n        const t_value = this.state.selectedTab;\n        return (\n                <div>\n                    { this.isVisible() &&\n\n                    <div>\n\n                        <Paper style={styles.pageWidth}>\n                            <Table>\n                                <TableHead>\n                                    <TableRow style={styles.tableHeaderStyle}>\n                                        <TableCell style={styles.tableHeaderStyle}>knowledge base</TableCell>\n                                        <TableCell style={styles.tableHeaderStyle}>email queries to</TableCell>\n                                        <TableCell style={styles.tableHeaderStyle}>actions</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {\n                                        this.getKnowledgeBases().map((knowledge_base) => {\n                                            return (\n                                                <TableRow key={knowledge_base.kbId}>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{knowledge_base.name}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{knowledge_base.email}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.linkButton}\n                                                             onClick={() => this.viewIds(knowledge_base)}>\n                                                            <img src=\"../images/id.svg\" style={styles.dlImageSize}\n                                                                 title=\"view knowledge base ids\" alt=\"ids\"/>\n                                                        </div>\n                                                        <div style={styles.linkButton}\n                                                             onClick={() => this.editKnowledgeBase(knowledge_base)}>\n                                                            <img src=\"../images/edit.svg\" style={styles.dlImageSize}\n                                                                 title=\"edit knowledge base\" alt=\"edit\"/>\n                                                        </div>\n                                                        <div style={styles.linkButton}\n                                                             onClick={() => this.optimizeIndexes(knowledge_base)}>\n                                                            <img src=\"../images/optimize.svg\" style={styles.dlImageSize}\n                                                                 title=\"optimize knowledge base indexes\" alt=\"optimize\"/>\n                                                        </div>\n                                                        <div style={styles.linkButton}\n                                                             onClick={() => this.deleteKnowledgeBaseAsk(knowledge_base)}>\n                                                            <img src=\"../images/delete.svg\" style={styles.dlImageSize}\n                                                                 title=\"remove knowledge base\" alt=\"remove\"/>\n                                                        </div>\n                                                    </TableCell>\n                                                </TableRow>\n                                            )\n                                        })\n                                    }\n                                    <TableRow>\n                                        <TableCell/>\n                                        <TableCell/>\n                                        <TableCell>\n                                            {this.props.selected_organisation_id.length > 0 &&\n                                            <div style={styles.imageButton} onClick={() => this.addNewKnowledgeBase()}>\n                                                <img\n                                                    style={styles.addImage} src=\"../images/add.svg\" title=\"add new user\"\n                                                    alt=\"add new user\"/></div>\n                                            }\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n\n                            <TablePagination\n                                rowsPerPageOptions={[5, 10, 25]}\n                                component=\"div\"\n                                count={this.props.knowledge_base_list.length}\n                                rowsPerPage={this.state.page_size}\n                                page={this.state.page}\n                                backIconButtonProps={{\n                                    'aria-label': 'Previous Page',\n                                }}\n                                nextIconButtonProps={{\n                                    'aria-label': 'Next Page',\n                                }}\n                                onChangePage={(event, page) => this.changePage(page)}\n                                onChangeRowsPerPage={(event) => this.changePageSize(event.target.value)}\n                            />\n\n                        </Paper>\n\n\n                        <Dialog aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                                open={this.state.edit_knowledgebase}\n                                disableBackdropClick={true}\n                                disableEscapeKeyDown={true}\n                                fullWidth={true}\n                                maxWidth=\"lg\"\n                                onClose={() => this.setState({edit_knowledgebase: false, knowledgeBase: null})}>\n                            <DialogTitle>{this.state.edit_knowledgebase_id ? \"Edit Knowledge Base\" : \"Add New Knowledge Base\"}</DialogTitle>\n                            <DialogContent>\n\n                                <Tabs value={this.state.selectedTab} onChange={(event, value)=> this.setState({selectedTab: value})}>\n                                    <Tab label=\"general\" value=\"general\" style={styles.tab} />\n                                    <Tab label=\"index optimization schedule\" value=\"schedule\" style={styles.tab} />\n                                </Tabs>\n\n                                <br />\n\n                                {t_value === 'general' &&\n                                <Grid container spacing={2}>\n\n                                    <Grid item xs={1}/>\n                                    <Grid item xs={3}>\n                                        <div>name</div>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <TextField\n                                            autoFocus={true}\n                                            style={styles.editBox}\n                                            placeholder=\"knowledge base name\"\n                                            value={this.state.edit_name}\n                                            onChange={(event) => this.setState({edit_name: event.target.value})}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={2}/>\n\n\n                                    <Grid item xs={1}/>\n                                    <Grid item xs={3}>\n                                        <div>email questions to</div>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <TextField\n                                            style={styles.editBox}\n                                            placeholder=\"email questions to\"\n                                            value={this.state.edit_email}\n                                            onChange={(event) => this.setState({edit_email: event.target.value})}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={2}/>\n\n\n                                    <Grid item xs={1}/>\n                                    <Grid item xs={3}>\n                                        <div>security id</div>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <TextField\n                                            style={styles.sidBox}\n                                            disabled={true}\n                                            placeholder=\"security id\"\n                                            label=\"security id\"\n                                            value={this.state.edit_security_id}\n                                            onChange={(event) => this.setState({edit_security_id: event.target.value})}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <div style={styles.imageBox}>\n                                            <img title=\"generate new security id\" alt=\"refresh\"\n                                                 src=\"../images/refresh.svg\"\n                                                 onClick={() => this.refreshSecurityId()}\n                                                 style={styles.imageSize}/>\n                                        </div>\n                                    </Grid>\n\n\n                                    <Grid item xs={2}/>\n                                    <Grid item xs={5}>\n                                        <Checkbox\n                                            checked={this.state.edit_enabled}\n                                            onChange={(event) => {\n                                                this.setState({edit_enabled: event.target.checked});\n                                            }}\n                                            value=\"enable this knowledge-base?\"\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                        knowledge-base enabled?\n                                    </Grid>\n                                    <Grid item xs={5}>\n                                        <Checkbox\n                                            checked={this.state.edit_operator_enabled}\n                                            onChange={(event) => {\n                                                this.setState({edit_operator_enabled: event.target.checked});\n                                            }}\n                                            value=\"enable operator access?\"\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                        operator enabled?\n                                    </Grid>\n\n\n                                    <Grid item xs={2}/>\n                                    <Grid item xs={5}>\n                                        <Checkbox\n                                            checked={this.state.edit_capacity_warnings}\n                                            onChange={(event) => {\n                                                this.setState({edit_capacity_warnings: event.target.checked});\n                                            }}\n                                            value=\"enable capacity warnings?\"\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                        capacity-warnings on?\n                                    </Grid>\n                                    <Grid item xs={5}/>\n\n\n                                    <Grid item xs={2}/>\n                                    <Grid item xs={7}>\n                                        <div>maximum number of queries per day (0 is no limits)</div>\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <TextField\n                                            onChange={(event) => this.setState({edit_max_queries_per_day: event.target.value})}\n                                            placeholder=\"max transactions per month\"\n                                            variant=\"standard\"\n                                            fullWidth={true}\n                                            value={this.state.edit_max_queries_per_day}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={1}/>\n\n\n                                    <Grid item xs={2}/>\n                                    <Grid item xs={7}>\n                                        <div>maximum analytics retention period in months (0 is no limits)</div>\n                                    </Grid>\n                                    <Grid item xs={2}>\n                                        <TextField\n                                            onChange={(event) => this.setState({edit_analytics_window_size_in_months: event.target.value})}\n                                            placeholder=\"max analytics retention period in months\"\n                                            variant=\"standard\"\n                                            fullWidth={true}\n                                            value={this.state.edit_analytics_window_size_in_months}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={1}/>\n\n\n                                </Grid>\n                                }\n\n                                {t_value === 'schedule' &&\n                                <div style={styles.timeTabContent}>\n                                    <TimeSelect time={this.state.edit_index_optimization_schedule}\n                                                onSave={(time) => this.updateSchedule(time)}/>\n                                    <div style={styles.paddingBottom}></div>\n                                </div>\n                                }\n\n                            </DialogContent>\n                            <DialogActions>\n                                <Button color=\"primary\" onClick={() => this.editCancel()}>Cancel</Button>\n                                <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.editOk()}>Save</Button>\n                            </DialogActions>\n                        </Dialog>\n\n                    </div>\n                }\n\n\n                    <Dialog aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                            open={this.state.view_ids}\n                            disableBackdropClick={true}\n                            disableEscapeKeyDown={true}\n                            fullWidth={true}\n                            maxWidth=\"md\"\n                            onClose={() => this.setState({view_ids: false})} >\n                        <DialogTitle>{this.state.kb != null ? this.state.kb.name : \"\"} IDS</DialogTitle>\n                        <DialogContent>\n                            <div>\n                                <div style={styles.lineHeight}>\n                                    <div style={styles.organisationIdLabel}>\n                                        organisation id\n                                    </div>\n                                    <div style={styles.floatLeft}>{this.props.selected_organisation_id ? this.props.selected_organisation_id : \"\"}</div>\n                                    <span style={styles.copyImageSpan} title={'copy organisation id'}>\n                                    <img src='../images/clipboard-copy.svg' style={styles.clipboardImage} alt={'copy'}\n                                         onClick={() => { navigator.clipboard.writeText(this.props.selected_organisation_id ? this.props.selected_organisation_id : \"\");\n                                             this.startCopiedVisible(this.props.selected_organisation_id);\n                                         }}/>\n                                        {this.props.selected_organisation_id && this.state.copied_visible === this.props.selected_organisation_id &&\n                                        <div style={styles.copiedStyle}>copied</div>\n                                        }\n                                </span>\n                                    <br clear='both' />\n                                </div>\n\n                                <div style={styles.lineHeight}>\n                                    <div style={styles.organisationIdLabel}>\n                                        knowledge base id\n                                    </div>\n                                    <div style={styles.floatLeft}>{this.state.kb ? this.state.kb.kbId : \"\"}</div>\n                                    <span style={styles.copyImageSpan} title={'copy knowledge base id'}>\n                                    <img src='../images/clipboard-copy.svg' style={styles.clipboardImage} alt={'copy'}\n                                         onClick={() => { navigator.clipboard.writeText(this.state.kb ? this.state.kb.kbId : \"\");\n                                             this.startCopiedVisible(this.state.kb.kbId);\n                                         }}/>\n                                        {this.state.kb && this.state.copied_visible === this.state.kb.kbId &&\n                                        <div style={styles.copiedStyle}>copied</div>\n                                        }\n                                </span>\n                                    <br clear='both' />\n                                </div>\n\n                                <div style={styles.lineHeight}>\n                                    <div style={styles.organisationIdLabel}>\n                                        security id\n                                    </div>\n                                    <div style={styles.floatLeft}>{this.state.kb ? this.state.kb.securityId : \"\"}</div>\n                                    <span style={styles.copyImageSpan} title={'copy security id'}>\n                                    <img src='../images/clipboard-copy.svg' style={styles.clipboardImage} alt={'copy'}\n                                         onClick={() => { navigator.clipboard.writeText(this.state.kb ? this.state.kb.securityId : \"\");\n                                             this.startCopiedVisible(this.state.kb.securityId);\n                                         }}/>\n                                        {this.state.kb && this.state.copied_visible === this.state.kb.securityId &&\n                                        <div style={styles.copiedStyle}>copied</div>\n                                        }\n                                </span>\n                                    <br clear='both' />\n                                </div>\n\n                            </div>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.setState({view_ids: false})}>Close</Button>\n                        </DialogActions>\n                    </Dialog>\n\n\n\n                </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        knowledge_base_list: state.appReducer.knowledge_base_list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(KnowledgeBases);\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Comms from '../common/comms';\nimport Api from '../common/api';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\n\nconst styles = {\n    label: {\n        marginTop: '20px',\n        marginBottom: '20px',\n        color: '#555',\n    },\n    gridWidth: {\n        width: '900px',\n    },\n    hr: {\n        border: '0.5px solid #f0f0f0',\n        width: '100%',\n    },\n    snapshotItem: {\n        marginBottom: '5px',\n    },\n    refreshImage: {\n        float: 'right',\n        width: '24px',\n        cursor: 'pointer',\n    },\n    addImage: {\n        float: 'right',\n        marginTop: '-8px',\n        width: '24px',\n        cursor: 'pointer',\n    },\n    addImageDisabled: {\n        float: 'right',\n        marginTop: '-8px',\n        width: '24px',\n        backgroundColor: '#aaaaaa',\n        borderRadius: '12px',\n        cursor: 'pointer',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    downloadImage: {\n        width: '24px',\n    },\n    tableWidth: {\n        width: '100%',\n    }\n};\n\n\nexport class Inventory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date_time: 0,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n    }\n    programUploaded() {\n    }\n    programConverted(program) {\n        if (program) {\n            window.open().document.body.innerHTML += program.replace(/\\n/g, \"<br />\");\n        }\n    }\n    inventorizeDump(dateTime) {\n        window.open(Comms.get_inventorize_dump_url(this.props.selected_organisation_id, this.props.selected_knowledgebase_id, dateTime), '_blank');\n    }\n    inventorizeDumpSpreadsheet(dateTime) {\n        window.open(Comms.get_inventorize_dump_spreadhseet_url(this.props.selected_organisation_id, this.props.selected_knowledgebase_id, dateTime), '_blank');\n    }\n    deleteInventorizeAsk(dateTime) {\n        this.setState({date_time: dateTime});\n        this.props.openDialog(\"are you sure you want to remove the report dated <b>\" + Api.unixTimeConvert(dateTime) + \"</b>?\",\n            \"Remove Inventory Report\", (action) => { this.deleteReport(action) });\n    }\n    deleteReport(action) {\n        if (action) {\n            this.props.deleteInventoryItem(this.state.date_time);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    mindDump() {\n        window.open(Comms.get_mind_dump_url(this.props.selected_organisation_id, this.props.selected_knowledgebase_id), '_blank');\n    }\n    queryLogDump() {\n        window.open(Comms.get_query_log_url(this.props.selected_organisation_id, this.props.selected_knowledgebase_id), '_blank');\n    }\n    restore(data) {\n        if (data) {\n            this.setState({uploading: true});\n            Api.restore(data,\n                () => {\n                    this.setState({uploading: false,\n                        message_title: \"Success\",\n                        message: \"data restored\",\n                        message_callback: () => { this.setState({message: \"\", message_title: \"\"})}\n                    });\n                },\n                (errStr) => {\n                    this.props.setError(\"Error\", errStr);\n                })\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        return (\n            <div>\n                <Grid container spacing={1} style={styles.gridWidth}>\n\n                    {this.isVisible() &&\n                    <Grid item xs={12}><div style={styles.hr} /></Grid>\n                    }\n\n                    {this.isVisible() &&\n                    <Grid item xs={12}>\n                        <div style={styles.label}>Manage snapshots of your document inventory.\n                            {this.props.inventorize_busy &&\n                                <span>  SimSage is busy creating a new snapshot.</span>\n                            }\n                        </div>\n                    </Grid>\n                    }\n\n                    {this.isVisible() &&\n                        <Grid item xs={12}>\n\n                                <Paper>\n                                    <Table style={styles.tableWidth}>\n                                        <TableHead>\n                                            <TableRow style={styles.tableHeaderStyle}>\n                                                <TableCell style={styles.tableHeaderStyle}>created</TableCell>\n                                                <TableCell style={styles.tableHeaderStyle}>action</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            { this.props.inventorize_list && this.props.inventorize_list.timeList && this.props.inventorize_list.timeList.map((item) => {\n                                                return (\n                                                    <TableRow key={item}>\n                                                        <TableCell>\n                                                            <div style={styles.snapshotItem}>\n                                                                content snapshot {Api.unixTimeConvert(item)}\n                                                            </div>\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <div style={styles.linkButton} onClick={() => this.inventorizeDump(item)}>\n                                                                <img src=\"../images/parquet.png\" style={styles.downloadImage} title=\"download as parquet-file\" alt=\"download parquet\"/>\n                                                            </div>\n                                                            <div style={styles.linkButton} onClick={() => this.inventorizeDumpSpreadsheet(item)}>\n                                                                <img src=\"../images/xlsx.svg\" style={styles.downloadImage} title=\"download as spreadsheet-xlsx\" alt=\"download spreadsheet\"/>\n                                                            </div>\n                                                            <div style={styles.linkButton} onClick={() => this.deleteInventorizeAsk(item)}>\n                                                                <img src=\"../images/delete.svg\" style={styles.downloadImage} title=\"remove report\" alt=\"remove\"/>\n                                                            </div>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            })}\n                                            <TableRow>\n                                                <TableCell/>\n                                                <TableCell>\n                                                    {this.props.selected_organisation_id.length > 0 && !this.props.inventorize_busy &&\n                                                    <div style={styles.imageButton} onClick={() => {\n                                                        this.props.createInventory();\n                                                        this.props.forceInventoryBusy();\n                                                    }}><img\n                                                        style={styles.addImage} src=\"../images/add.svg\" title=\"create a new snapshot\" alt=\"create new snapshot\"/></div>\n                                                    }\n                                                    {this.props.selected_organisation_id.length > 0 && this.props.inventorize_busy &&\n                                                        <div style={styles.imageButton}>\n                                                            <img style={styles.addImageDisabled} src=\"../images/add.svg\" title=\"SimSage is currently busy processing an inventory.  Please try again later.\" alt=\"create new snapshot\"/>\n                                                        </div>\n                                                    }\n                                                    {this.props.selected_organisation_id.length > 0 &&\n                                                    <img src=\"../images/refresh.svg\" alt=\"refresh\"\n                                                         title=\"refresh the inventory list\"\n                                                         onClick={() => {\n                                                             this.props.getInventoryList();\n                                                             this.props.getInventoryBusy();\n                                                         }}\n                                                         style={styles.refreshImage}/>\n                                                    }\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableBody>\n                                    </Table>\n\n                                </Paper>\n                        </Grid>\n                    }\n\n\n                </Grid>\n\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        inventorize_list: state.appReducer.inventorize_list,\n        knowledge_base_list: state.appReducer.knowledge_base_list,\n        inventorize_busy: state.appReducer.inventorize_busy,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Inventory);\n\n","import React, {Component} from 'react';\n\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MessageDialog from \"../common/message-dialog\";\nimport {Api} from \"../common/api\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst crawler_list = [\n    {\"key\": \"none\", \"value\": \"please select crawler type\"},\n    {\"key\": \"file\", \"value\": \"file crawler\"},\n    {\"key\": \"web\", \"value\": \"web crawler\"},\n    {\"key\": \"office365\", \"value\": \"office 365 crawler\"},\n    {\"key\": \"dropbox\", \"value\": \"dropbox crawler\"},\n    {\"key\": \"wordpress\", \"value\": \"WordPress external crawler\"},\n    {\"key\": \"gdrive\", \"value\": \"Google-drive crawler\"},\n    {\"key\": \"nfs\", \"value\": \"nfs external crawler\"},\n    {\"key\": \"database\", \"value\": \"database crawler\"},\n    {\"key\": \"restfull\", \"value\": \"REST-full crawler\"},\n];\n\n// slider display\nconst marks = [\n    {\n        value: 0,\n        label: 'File list',\n    },\n    {\n        value: 33,\n        label: 'GDPR compliance',\n    },\n    {\n        value: 66,\n        label: 'Semantic Search',\n    },\n    {\n        value: 100,\n        label: 'Language NLU',\n    },\n];\n\nfunction markText(value) {\n    if (value < 10) return \"file\";\n    if (value < 50) return \"gdpr\";\n    if (value < 80) return \"search\";\n    return \"lang\"\n}\n\n\nconst styles = {\n    customWidth: {\n        width: '48%',\n    },\n    textField: {\n        width: '98%',\n    },\n    formContent: {\n        marginTop: '20px',\n        width: '98%',\n    },\n    exportButton: {\n    },\n};\n\nexport class CrawlerGeneral extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,  // save data\n            onError: props.onError,\n            error_title: props.error_title,\n            error_msg: props.error_msg,\n\n            // messages\n            message_callback: null,\n            message: '',\n            message_title: '',\n\n            organisation_id: Api.defined(props.organisation_id) ? props.organisation_id : '',\n            kb_id: Api.defined(props.kb_id) ? props.kb_id : '',\n            sourceId: Api.defined(props.sourceId) ? props.sourceId : '0',\n            nodeId: Api.defined(props.nodeId) ? props.nodeId : '0',\n            maxItems: Api.defined(props.maxItems) ? props.maxItems : '0',\n            maxBotItems: Api.defined(props.maxBotItems) ? props.maxBotItems : '0',\n\n            name: Api.defined(props.name) ? props.name : '',\n            filesPerSecond: Api.defined(props.filesPerSecond) ? props.filesPerSecond : '0',\n            crawlerType: Api.defined(props.crawlerType) ? props.crawlerType : 'none',\n            deleteFiles: props.deleteFiles,\n            allowAnonymous: props.allowAnonymous,\n            enablePreview: props.enablePreview,\n            processingLevel: props.processingLevel,\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({\n                            filesPerSecond: nextProps.filesPerSecond,\n                            crawlerType: Api.defined(nextProps.crawlerType) ? nextProps.crawlerType : 'none',\n                            deleteFiles: nextProps.deleteFiles,\n                            allowAnonymous: nextProps.allowAnonymous,\n                            enablePreview: nextProps.enablePreview,\n                            processingLevel: nextProps.processingLevel,\n                            organisation_id: nextProps.organisation_id,\n                            kb_id: nextProps.kb_id,\n                            sourceId: nextProps.sourceId,\n                            nodeId: nextProps.nodeId,\n                            maxItems: nextProps.maxItems,\n                            maxBotItems: nextProps.maxBotItems,\n                            name: nextProps.name,\n                            onSave: nextProps.onSave,\n\n                            onError: nextProps.onError,\n                            error_title: nextProps.error_title,\n                            error_msg: nextProps.error_msg,\n                        }));\n        }\n    }\n    construct_data(data) {\n        const crawlerType = Api.defined(data.crawlerType) ? data.crawlerType : this.state.crawlerType;\n        const allowAnonymous = (Api.defined(data.allowAnonymous) ? data.allowAnonymous : this.state.allowAnonymous) || (crawlerType === 'web');\n        return {filesPerSecond: Api.defined(data.filesPerSecond) ? data.filesPerSecond : this.state.filesPerSecond,\n                crawlerType: crawlerType,\n                deleteFiles: Api.defined(data.deleteFiles) ? data.deleteFiles : this.state.deleteFiles,\n                allowAnonymous: allowAnonymous,\n                enablePreview: Api.defined(data.enablePreview) ? data.enablePreview : this.state.enablePreview,\n                processingLevel: Api.defined(data.processingLevel) ? data.processingLevel : this.state.processingLevel,\n                name: Api.defined(data.name) ? data.name : this.state.name,\n                sourceId: Api.defined(data.sourceId) ? data.sourceId : this.state.sourceId,\n                nodeId: Api.defined(data.nodeId) ? data.nodeId : this.state.nodeId,\n                maxItems: Api.defined(data.maxItems) ? data.maxItems : this.state.maxItems,\n                maxBotItems: Api.defined(data.maxBotItems) ? data.maxBotItems : this.state.maxBotItems,\n            };\n    }\n    setError(title, error_msg) {\n        if (this.props.onError) {\n            this.props.onError(title, error_msg);\n        }\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    testCrawler() {\n        const name = this.state.name;\n        Api.testCrawler(this.state.organisation_id, this.state.kb_id, this.state.sourceId,\n            (response) => {\n                this.setState({\n                    message_callback: (action) => { this.setState({message_title: '', message: ''})},\n                    message_title: 'Crawler Test',\n                    message: 'Success!  crawler \"' + name + '\" can communicate with its intended end-point.'\n                });\n            },\n            (err) => {\n                console.log(\"crawler-test error:\");\n                console.log(err);\n                this.setError(\"Error Testing Crawler\", err);\n            });\n    }\n    processingLevelToMark() {\n        if (this.state.processingLevel === \"FILES\") return 0;\n        if (this.state.processingLevel === \"GDPR\") return 33;\n        if (this.state.processingLevel === \"SEARCH\") return 66;\n        return 100;\n    }\n    setProcessingLevelFromMark(value) {\n        let processingLevel = \"NLU\";\n        if (value === 0) processingLevel = \"FILES\";\n        else if (value === 33) processingLevel = \"GDPR\";\n        else if (value === 66) processingLevel = \"SEARCH\";\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data({\"processingLevel\": processingLevel}));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-general.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n\n                <MessageDialog callback={(action) => this.state.message_callback(action)}\n                               open={this.state.message.length > 0}\n                               message={this.state.message}\n                               title={this.state.message_title} />\n\n                <Grid container spacing={2}>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <Select\n                            value={this.state.crawlerType}\n                            disabled={(\"\" + this.state.sourceId) !== \"0\"}\n                            style={styles.customWidth}\n                            onChange={(event) => {this.change_callback({crawlerType: event.target.value})}}>\n                            {\n                                crawler_list.map((value) => {\n                                    return (<MenuItem key={value.key} value={value.key}>{value.value}</MenuItem>)\n                                })\n                            }\n                        </Select>\n                    </Grid>\n                    <Grid item xs={1} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"Crawler Name\"\n                            autoFocus\n                            label=\"Crawler Name\"\n                            value={this.state.name}\n                            style={styles.textField}\n                            onChange={(event) => {this.change_callback({name: event.target.value})}}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"files per second throttle\"\n                            label=\"files per second throttle\"\n                            value={this.state.filesPerSecond}\n                            style={styles.textField}\n                            onChange={(event) => {this.change_callback({filesPerSecond: event.target.value})}}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"Maximum number of files (0 for no limits)\"\n                            label=\"Maximum number of files (0 for no limits)\"\n                            value={this.state.maxItems}\n                            style={styles.textField}\n                            onChange={(event) => {this.change_callback({maxItems: event.target.value})}}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"Maximum number of QA (Bot) entries (0 for no limits)\"\n                            label=\"Maximum number of QA (Bot) entries (0 for no limits)\"\n                            value={this.state.maxBotItems}\n                            style={styles.textField}\n                            onChange={(event) => {this.change_callback({maxBotItems: event.target.value})}}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"node-id (0 for single node systems)\"\n                            label=\"node-id (0 for single node systems)\"\n                            value={this.state.nodeId}\n                            style={styles.textField}\n                            onChange={(event) => {this.change_callback({nodeId: event.target.value})}}\n                        />\n                    </Grid>\n                    <Grid item xs={6} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"At the end of a run through your data we can optionally check if files have been removed by seeing which files weren't seen during a run.  Check this option if you want files that no longer exist removed automtically from SimSage.\">\n                            <Checkbox\n                                checked={this.state.deleteFiles}\n                                onChange={(event) => { this.change_callback({deleteFiles: event.target.checked}); }}\n                                value=\"delete files?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            remove un-seen files?\n                        </div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={{float: 'left'}} title=\"Our default web-search and bot-interfaces require anonymous access to the data gathered by this source.  Check this box if you want anonymous users to view the data in it. (always enabled for web-sources).\">\n                                <Checkbox\n                                    checked={this.state.allowAnonymous || this.state.crawlerType === 'web'}\n                                    disabled={this.state.crawlerType === 'web'}\n                                    onChange={(event) => { this.change_callback({allowAnonymous: event.target.checked}); }}\n                                    value=\"allow anonymous access to these files?\"\n                                    inputProps={{\n                                        'aria-label': 'primary checkbox',\n                                    }}\n                                />\n                                allow anonymous access to these files?\n                            </div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            <div style={{float: 'left', width: '80%'}} title=\"Select what kind of processing you want done to these files\">\n                                <Slider\n                                    defaultValue={this.processingLevelToMark()}\n                                    valueLabelFormat={markText}\n                                    getAriaValueText={markText}\n                                    aria-labelledby=\"crawler-level\"\n                                    onChange={(event, newValue) => this.setProcessingLevelFromMark(newValue)}\n                                    step={null}\n                                    valueLabelDisplay=\"auto\"\n                                    marks={marks}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <div style={{float: 'left'}} title=\"Check this box if you preview images generated for each document.  Document search must be enabled for this to work.\">\n                                <Checkbox\n                                    checked={this.state.enablePreview && (this.state.processingLevel === \"SEARCH\" || this.state.processingLevel === \"NLU\")}\n                                    disabled={this.state.processingLevel !== \"SEARCH\" && this.state.processingLevel !== \"NLU\"}\n                                    onChange={(event) => { this.change_callback({enablePreview: event.target.checked}); }}\n                                    value=\"enable document image previews?\"\n                                    inputProps={{\n                                        'aria-label': 'primary checkbox',\n                                    }}\n                                />\n                                enable document image previews?\n                            </div>\n                        </ Grid>\n                        <Grid item xs={1} />\n\n\n                        <Grid item xs={1} />\n                        <Grid item xs={5}>\n                            {this.state.sourceId && this.state.sourceId > 0 &&\n                            <div>\n                                <Button color=\"secondary\" variant=\"outlined\" style={styles.exportButton}\n                                        onClick={() => this.testCrawler()}>Test Connection</Button>\n                            </div>\n                            }\n                        </Grid>\n                        <Grid item xs={6} />\n\n                    </Grid>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerGeneral;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Api from '../common/api'\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        marginLeft: '20px',\n    },\n    textField: {\n        marginRight: '10px',\n        width: '500px',\n    },\n};\n\n\nexport class CrawlerFile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // file specific\n            file_username: Api.defined(props.file_username) ? props.file_username : '',\n            file_password: Api.defined(props.file_password) ? props.file_password : '',\n            file_server: Api.defined(props.file_server) ? props.file_server : '',\n            file_domain: Api.defined(props.file_domain) ? props.file_domain : '',\n            file_share_name: Api.defined(props.file_share_name) ? props.file_share_name : '',\n            file_share_path: Api.defined(props.file_share_path) ? props.file_share_path : '',\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({file_username: nextProps.file_username,\n                file_password: nextProps.file_password,\n                file_domain: nextProps.file_domain,\n                file_server: nextProps.file_server,\n                file_share_name: nextProps.file_share_name,\n                file_share_path: nextProps.file_share_path,\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {file_username: Api.defined(data.file_username) ? data.file_username : this.state.file_username,\n            file_password: Api.defined(data.file_password) ? data.file_password : this.state.file_password,\n            file_domain: Api.defined(data.file_domain) ? data.file_domain : this.state.file_domain,\n            file_server: Api.defined(data.file_server) ? data.file_server : this.state.file_server,\n            file_share_name: Api.defined(data.file_share_name) ? data.file_share_name : this.state.file_share_name,\n            file_share_path: Api.defined(data.file_share_path) ? data.file_share_path : this.state.file_share_path,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-file.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n                <TextField\n                    placeholder=\"user name\"\n                    label=\"user name\"\n                    value={this.state.file_username}\n                    onChange={(event) => {this.change_callback({file_username: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n                <br />\n\n                <TextField\n                    placeholder=\"password\"\n                    label=\"password\"\n                    type=\"password\"\n                    value={this.state.file_password}\n                    onChange={(event) => {this.change_callback({file_password: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n                <br />\n\n                <TextField\n                    placeholder=\"domain (leave blank for default or no domain)\"\n                    label=\"domain\"\n                    value={this.state.file_domain}\n                    onChange={(event) => {this.change_callback({file_domain: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n                <br />\n\n                <TextField\n                    placeholder=\"server (hostname or ip-address)\"\n                    label=\"server\"\n                    value={this.state.file_server}\n                    onChange={(event) => {this.change_callback({file_server: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n                <br />\n\n                <TextField\n                    placeholder=\"share name\"\n                    label=\"share name\"\n                    value={this.state.file_share_name}\n                    onChange={(event) => {this.change_callback({file_share_name: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n                <br />\n\n                <TextField\n                    placeholder=\"path inside share (optional)\"\n                    label=\"path inside share\"\n                    value={this.state.file_share_path}\n                    onChange={(event) => {this.change_callback({file_share_path: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerFile;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Api from '../common/api';\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        width: '98%',\n    },\n    textField: {\n        width: '98%',\n    },\n};\n\n\nexport class CrawlerWeb extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onError: props.onError,\n            onSave: props.onSave,\n\n            // web specific\n            web_base_url: Api.defined(props.web_base_url) ? props.web_base_url : '',\n            web_css: Api.defined(props.web_css) ? props.web_css : '',\n            web_css_ignore: Api.defined(props.web_css_ignore) ? props.web_css_ignore : '',\n            web_extension_filter: Api.defined(props.web_extension_filter) ? props.web_extension_filter : '',\n            web_extension_filter_ignore: Api.defined(props.web_extension_filter_ignore) ? props.web_extension_filter_ignore : '',\n            web_article_filter_incl_csv: Api.defined(props.web_article_filter_incl_csv) ? props.web_article_filter_incl_csv : '',\n            web_article_filter_excl_csv: Api.defined(props.web_article_filter_excl_csv) ? props.web_article_filter_excl_csv : '',\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({web_base_url: nextProps.web_base_url,\n                web_css: Api.defined(nextProps.web_css) ? nextProps.web_css : '',\n                web_extension_filter: Api.defined(nextProps.web_extension_filter) ? nextProps.web_extension_filter : '',\n                web_css_ignore: Api.defined(nextProps.web_css_ignore) ? nextProps.web_css_ignore : '',\n                web_extension_filter_ignore: Api.defined(nextProps.web_extension_filter_ignore) ? nextProps.web_extension_filter_ignore : '',\n                web_article_filter_incl_csv: Api.defined(nextProps.web_article_filter_incl_csv) ? nextProps.web_article_filter_incl_csv : '',\n                web_article_filter_excl_csv: Api.defined(nextProps.web_article_filter_excl_csv) ? nextProps.web_article_filter_excl_csv : '',\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {web_base_url: Api.defined(data.web_base_url) ? data.web_base_url : this.state.web_base_url,\n            web_css: Api.defined(data.web_css) ? data.web_css : this.state.web_css,\n            web_css_ignore: Api.defined(data.web_css_ignore) ? data.web_css_ignore : this.state.web_css_ignore,\n            web_extension_filter: Api.defined(data.web_extension_filter) ? data.web_extension_filter : this.state.web_extension_filter,\n            web_extension_filter_ignore: Api.defined(data.web_extension_filter_ignore) ? data.web_extension_filter_ignore : this.state.web_extension_filter_ignore ,\n            web_article_filter_incl_csv: Api.defined(data.web_article_filter_incl_csv) ? data.web_article_filter_incl_csv : this.state.web_article_filter_incl_csv ,\n            web_article_filter_excl_csv: Api.defined(data.web_article_filter_excl_csv) ? data.web_article_filter_excl_csv : this.state.web_article_filter_excl_csv ,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-web.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n\n                <Grid container spacing={2}>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"http/s base name list (preferably https), one per line\"\n                            multiline={true}\n                            autoFocus={true}\n                            variant=\"outlined\"\n                            rows=\"3\"\n                            label=\"http/s base name list (preferably https), one per line\"\n                            value={this.state.web_base_url}\n                            onChange={(event) => {this.change_callback({web_base_url: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            label=\"file extensions to include (csv list)\"\n                            variant=\"outlined\"\n                            value={this.state.web_extension_filter}\n                            onChange={(event) => {this.change_callback({web_extension_filter: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            label=\"file extensions to exclude (csv list)\"\n                            variant=\"outlined\"\n                            value={this.state.web_extension_filter_ignore}\n                            onChange={(event) => {this.change_callback({web_extension_filter_ignore: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"css/html root fragments to include csv\"\n                            multiline={true}\n                            variant=\"outlined\"\n                            rows=\"3\"\n                            label=\"css/html root fragments to include csv (e.g. div.class or id)\"\n                            value={this.state.web_css}\n                            onChange={(event) => {this.change_callback({web_css: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"css/html root fragments to exclude csv\"\n                            multiline={true}\n                            variant=\"outlined\"\n                            rows=\"3\"\n                            label=\"css/html root fragments to exclude csv (e.g. div.class or id)\"\n                            value={this.state.web_css_ignore}\n                            onChange={(event) => {this.change_callback({web_css_ignore: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"csv words, include articles by words [optional]\"\n                            multiline={true}\n                            variant=\"outlined\"\n                            rows=\"3\"\n                            label=\"csv words, include articles by words [optional]\"\n                            value={this.state.web_article_filter_incl_csv}\n                            onChange={(event) => {this.change_callback({web_article_filter_incl_csv: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"csv words, exclude articles by words [optional]\"\n                            multiline={true}\n                            variant=\"outlined\"\n                            rows=\"3\"\n                            label=\"csv words, exclude articles by words [optional]\"\n                            value={this.state.web_article_filter_excl_csv}\n                            onChange={(event) => {this.change_callback({web_article_filter_excl_csv: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                </Grid>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerWeb;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Grid from \"@material-ui/core/Grid\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Api} from \"../common/api\";\n\nconst type_list = [\n    {\"key\": \"none\", \"value\": \"please select database type\"},\n    {\"key\": \"mysql\", \"value\": \"MySQL\"},\n    {\"key\": \"postgresql\", \"value\": \"Postgresql\"},\n    {\"key\": \"microsoftsql\", \"value\": \"Microsoft SQL\"},\n];\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        width: '98%',\n    },\n    fieldWidth: {\n        width: '100%',\n    },\n    dbType: {\n        float: 'right',\n        marginTop: '6px',\n        marginRight: '10px',\n    }\n};\n\n\nexport class CrawlerDatabase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // database specific\n            db_username: props.db_username ? props.db_username : '',\n            db_password: props.db_password ? props.db_password : '',\n            db_jdbc: props.db_jdbc ? props.db_jdbc : '',\n            db_type: Api.defined(props.db_type) ? props.db_type : 'none',\n            db_query: props.db_query ? props.db_query : '',\n            db_pk: props.db_pk ? props.db_pk : '',\n            db_template: props.db_template ? props.db_template : '',\n            db_text: props.db_text ? props.db_text : '',\n            metadata_list: props.metadata_list ? props.metadata_list : [],\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({file_username: nextProps.file_username,\n                db_username: nextProps.db_username,\n                db_password: nextProps.db_password,\n                db_jdbc: nextProps.db_jdbc,\n                db_type: Api.defined(nextProps.db_type) ? nextProps.db_type : 'none',\n                db_query: nextProps.db_query,\n                db_pk: nextProps.db_pk,\n                db_template: nextProps.db_template,\n                db_text: nextProps.db_text,\n                metadata_list: nextProps.metadata_list,\n\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {db_username: Api.defined(data.db_username) ? data.db_username : this.state.db_username,\n            db_password: Api.defined(data.db_password) ? data.db_password : this.state.db_password,\n            db_jdbc: Api.defined(data.db_jdbc) ? data.db_jdbc : this.state.db_jdbc,\n            db_type: Api.defined(data.db_type) ? data.db_type : this.state.db_type,\n            db_query: Api.defined(data.db_query) ? data.db_query : this.state.db_query,\n            db_pk: Api.defined(data.db_pk) ? data.db_pk : this.state.db_pk,\n            db_template: Api.defined(data.db_template) ? data.db_template : this.state.db_template,\n            db_text: Api.defined(data.db_text) ? data.db_text : this.state.db_text,\n            metadata_list: Api.defined(data.metadata_list) ? data.metadata_list : this.state.metadata_list,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-database.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n\n                <Grid container spacing={1}>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"the user name for accessing this database\"\n                            label=\"user name\"\n                            variant=\"outlined\"\n                            value={this.state.db_username}\n                            onChange={(event) => {this.change_callback({db_username: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"password\"\n                            label=\"password (enter a value to change it)\"\n                            type=\"password\"\n                            variant=\"outlined\"\n                            value={this.state.db_password}\n                            onChange={(event) => {this.change_callback({db_password: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"jdbc connection string, e.g. jdbc:microsoft:sqlserver://HOST:1433;DatabaseName=DATABASE\"\n                            label=\"jdbc connection string\"\n                            variant=\"outlined\"\n                            value={this.state.db_jdbc}\n                            onChange={(event) => {this.change_callback({db_jdbc: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={1}>\n                        <div style={styles.dbType}>Database</div>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Select\n                            value={this.state.db_type}\n                            style={styles.fieldWidth}\n                            onChange={(event) => {this.change_callback({db_type: event.target.value})}}>\n                            {\n                                type_list.map((value) => {\n                                    return (<MenuItem key={value.key} value={value.key}>{value.value}</MenuItem>)\n                                })\n                            }\n                        </Select>\n                    </Grid>\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"the name of the primary key field for this SELECT\"\n                            label=\"primary key name\"\n                            variant=\"outlined\"\n                            value={this.state.db_pk}\n                            onChange={(event) => {this.change_callback({db_pk: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"SQL query, a valid SELECT statement, no other allowed\"\n                            label=\"sql query\"\n                            variant=\"outlined\"\n                            multiline={true}\n                            rows={3}\n                            value={this.state.db_query}\n                            onChange={(event) => {this.change_callback({db_query: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"sql text index template, an text template referencing SQL fields in square brackets [FIELD-NAME]\"\n                            label=\"sql text index template\"\n                            variant=\"outlined\"\n                            multiline={true}\n                            rows={7}\n                            value={this.state.db_text}\n                            onChange={(event) => {this.change_callback({db_text: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"sql html render template, an html template referencing SQL fields in square brackets [FIELD-NAME]\"\n                            label=\"sql html render template\"\n                            variant=\"outlined\"\n                            multiline={true}\n                            rows={7}\n                            value={this.state.db_template}\n                            onChange={(event) => {this.change_callback({db_template: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerDatabase;\n","import React, {Component} from 'react';\n\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {Api} from \"../common/api\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\n// valid metadata drop-down values\nconst metadata_list = [\n    {\"key\": \"none\", \"display\": null, \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"author\", \"display\": null, \"field1\": \"{author}\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"created\", \"display\": null, \"field1\": \"{created}\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"last modified\", \"display\": null, \"field1\": \"{lastmod}\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"title\", \"display\": null, \"field1\": \"{title}\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"image from binary-blob\", \"display\": null, \"field1\": \"binary-blob-image\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"image from base64\", \"display\": null, \"field1\": \"base64-image\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"image from url\", \"display\": null, \"field1\": \"url-image\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"category\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"two level category\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"number range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"monetary x 100 range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"monetary range\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"star rating\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"select if true\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n    {\"key\": \"csv string\", \"display\": \"\", \"field1\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"false\", \"sort_default\": \"\", \"sort_asc\": \"\", \"sort_desc\": \"\"},\n];\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        width: '98%',\n    },\n    instructionLabel: {\n        fontSize: '10px',\n        marginLeft: '20px',\n    },\n    table: {\n        marginTop: '10px',\n        marginLeft: '20px',\n        borderSpacing: '0',\n        border: '1px solid #aaaaaa',\n        borderRadius: '5px',\n    },\n    tableHead: {\n        backgroundColor: '#aaaaaa',\n        color: '#ffffff',\n    },\n    db_field: {\n        verticalAlign: 'top',\n        width: '250px',\n    },\n    display: {\n        width: '250px',\n    },\n    displayFieldWidth: {\n    },\n    tdDisplayFieldWidth: {\n        verticalAlign: 'top',\n        width: '200px',\n    },\n    tdSort: {\n        verticalAlign: 'top',\n    },\n    sortLabel: {\n        fontSize: '10px',\n    },\n    tdSort2: {\n        float: 'left',\n        height: '32px',\n        marginLeft: '15px',\n    },\n    metadata_dropdown_box: {\n        marginLeft: '10px',\n        width: '220px',\n        padding: '5px',\n        verticalAlign: 'top',\n        marginTop: '8px',\n    },\n    mdDropbox: {\n        float: 'left',\n        marginLeft: '10px',\n        width: '220px',\n        padding: '5px',\n        verticalAlign: 'top',\n    },\n    metadata_field: {\n        width: '200px',\n        padding: '5px',\n    },\n    sort_field: {\n        width: '100px',\n        padding: '5px',\n    },\n    action_field: {\n        width: '100px',\n        padding: '5px',\n    },\n    metadata_dropdown: {\n        marginLeft: '5px',\n        width: '200px',\n    },\n    imageButton: {\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n        cursor: 'pointer',\n        color: \"green\",\n    },\n    deleteBox: {\n        marginTop: '-14px',\n        color: '#888',\n        float: 'left',\n        cursor: 'pointer',\n    },\n    upDownArrow: {\n        float: 'left',\n        marginTop: '-16px',\n        padding: '2px',\n        fontSize: '26px',\n        cursor: 'pointer',\n    },\n    deleteImage: {\n        width: '24px',\n    },\n    dbFieldWidth: {\n        width: '250px',\n    },\n    tdMetadataFieldName: {\n        verticalAlign: 'top',\n    },\n    mdFieldWidth: {\n        width: '200px',\n    },\n    tdAction: {\n        float: 'left',\n        marginTop: '8px',\n        verticalAlign: 'top',\n    }\n};\n\n\nexport class CrawlerMetadataMapper extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // metadata set\n            metadata_list: props.metadata_list ? props.metadata_list : [],\n        };\n\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({\n                metadata_list: nextProps.metadata_list,\n\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            ...this.props.owner_data, metadata_list: Api.defined(data.metadata_list) ? data.metadata_list : this.state.metadata_list\n        };\n    }\n    set_db(record, index, value) {\n        const md_list = this.state.metadata_list;\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].db1 = value;\n            this.setState({metadata_list: md_list});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data({...this.state, metadata_list: md_list}));\n            }\n        }\n    }\n    set_db_extra(record, index, value) {\n        const md_list = this.state.metadata_list;\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].db2 = value;\n            this.setState({metadata_list: md_list});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data({...this.state, metadata_list: md_list}));\n            }\n        }\n    }\n    set_md_type(record, index, value) {\n        const md_list = this.state.metadata_list;\n        if (index >= 0 && index < md_list.length) {\n            let match_item = null;\n            for (const item of metadata_list) {\n                if (item.key === value) {\n                    match_item = item;\n                    break;\n                }\n            }\n            if (match_item != null) {\n                md_list[index] = JSON.parse(JSON.stringify(match_item));\n                this.setState({metadata_list: md_list});\n                if (this.state.onSave) {\n                    this.state.onSave(this.construct_data({...this.state, metadata_list: md_list}));\n                }\n            }\n        }\n    }\n    setDisplayName(record, index, value) {\n        const md_list = this.state.metadata_list;\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].display = value;\n            this.setState({metadata_list: md_list});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data({...this.state, metadata_list: md_list}));\n            }\n        }\n    }\n    setUserMetadataName1(record, index, value) {\n        const md_list = this.state.metadata_list;\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].field1 = value;\n            this.setState({metadata_list: md_list});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data({...this.state, metadata_list: md_list}));\n            }\n        }\n    }\n    setSort(record, index, value) {\n        const md_list = this.state.metadata_list;\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].sort = value ? \"true\" : \"false\";\n            this.setState({metadata_list: md_list});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data({...this.state, metadata_list: md_list}));\n            }\n        }\n    }\n    setValue(record, index, field_name, value) {\n        const md_list = this.state.metadata_list;\n        if (index >= 0 && index < md_list.length) {\n            md_list[index][field_name] = value;\n            this.setState({metadata_list: md_list});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data({...this.state, metadata_list: md_list}));\n            }\n        }\n    }\n    setDefaultSort(record, index, direction, value) {\n        const md_list = this.state.metadata_list;\n        if (index >= 0 && index < md_list.length) {\n            md_list[index].sort_default = (value ? direction : \"\");\n            for (const i in md_list) {\n                if (\"\"+i !== \"\"+index && md_list.hasOwnProperty(i)) {\n                    md_list[i].sort_default = \"\";\n                }\n            }\n            this.setState({metadata_list: md_list});\n            if (this.state.onSave) {\n                this.state.onSave(this.construct_data({...this.state, metadata_list: md_list}));\n            }\n        }\n    }\n    deleteMetadataItem(index) {\n        const md_list = [];\n        const i_index = '' + index\n        for (let i in this.state.metadata_list) {\n            if (i !== i_index) {\n                if (this.state.metadata_list.hasOwnProperty(i))\n                    md_list.push(this.state.metadata_list[i]);\n            }\n        }\n        this.setState({metadata_list: md_list});\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data({...this.state, metadata_list: md_list}));\n        }\n    }\n    addNewMetadataMapping() {\n        const md_list = this.state.metadata_list;\n        md_list.push(JSON.parse(JSON.stringify(metadata_list[0]))); // add a copy of item 0\n        this.setState({metadata_list: md_list});\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data({...this.state, metadata_list: md_list}));\n        }\n    }\n    checkMetadataName(event) {\n        // only allow valid characters to propagate for metadata names\n        if ((event.key >= 'a' && event.key <= 'z') ||\n            (event.key >= 'A' && event.key <= 'Z') ||\n            (event.key >= '0' && event.key <= '9') || event.key === '-') {\n            return true;\n        } else {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n    }\n    move_row_up(md, index) {\n        if (index > 0) {\n            const md_list = this.state.metadata_list;\n            const temp = md_list[index-1];\n            md_list[index-1] = md;\n            md_list[index] = temp;\n            this.setState({metadata_list: md_list});\n        }\n    }\n    move_row_down(md, index) {\n        const md_list = this.state.metadata_list;\n        if (index + 1 < md_list.length) {\n            const temp = md_list[index+1];\n            md_list[index+1] = md;\n            md_list[index] = temp;\n            this.setState({metadata_list: md_list});\n        }\n    }\n    needs_metadata_field(md) {\n        return (md.key === \"category\" || md.key === \"number range\" || md.key === \"two level category\" ||\n                md.key === \"monetary x 100 range\" || md.key === \"monetary range\" || md.key === \"star rating\" ||\n                md.key === \"select if true\" || md.key === \"csv string\");\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-metadata-mapper.js: Something went wrong.</h1>;\n        }\n        const self = this;\n        const num_rows = this.state.metadata_list.length;\n        return (\n            <div style={styles.formContent}>\n\n                <div style={styles.instructionLabel}>All rows in order of UI.  Use 'actions' arrows to re-arrange existing rows.</div>\n\n                <table style={styles.table}>\n\n                    <thead>\n                        <tr style={styles.tableHead}>\n                            <td style={styles.metadata_dropdown_box}>data-type</td>\n                            <td style={styles.db_field}>source field</td>\n                            <td style={styles.display}>UI display-name</td>\n                            <td style={styles.metadata_field}>metadata name</td>\n                            <td style={styles.sort_field}>sortable</td>\n                            <td style={styles.action_field}>actions</td>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                    <tr>\n                        <td colSpan={3}>&nbsp;</td>\n                    </tr>\n\n                    {\n                        this.state.metadata_list.map(function(md, index) {\n                            return (<tr key={index}>\n\n                                <td style={styles.mdDropbox}>\n                                    <Select\n                                        value={md.key}\n                                        style={styles.metadata_dropdown}\n                                        title=\"select what kind of metadata field to use\"\n                                        onChange={(event) => { self.set_md_type(md, index, event.target.value) }}>\n                                        {\n                                            metadata_list.map((value, j) => {\n                                                return (<MenuItem key={j} value={value.key}>{value.key}</MenuItem>)\n                                            })\n                                        }\n                                    </Select>\n                                </td>\n\n                                {md.key !== \"two level category\" &&\n                                <td style={styles.db_field}>\n                                    <input type=\"text\"\n                                        placeholder=\"source [field-name]\"\n                                        title=\"the source-name field to use for this category\"\n                                        value={md.db1}\n                                        onChange={(event) => {\n                                            self.set_db(md, index, event.target.value)\n                                        }}\n                                        style={styles.dbFieldWidth}/>\n                                </td>\n                                }\n\n                                {md.key === \"two level category\" &&\n                                <td style={styles.db_field}>\n                                    <input type=\"text\"\n                                        placeholder=\"level 1 [field-name]\"\n                                        value={md.db1}\n                                        title=\"the first source field to use for this double category\"\n                                        onChange={(event) => {\n                                            self.set_db(md, index, event.target.value)\n                                        }}\n                                        style={styles.dbFieldWidth}/>\n                                    <input type=\"text\"\n                                        placeholder=\"level 2 [field-name]\"\n                                        value={md.db2}\n                                        title=\"the second source field to use for this double category\"\n                                        onChange={(event) => {\n                                            self.set_db_extra(md, index, event.target.value)\n                                        }}\n                                        style={styles.dbFieldWidth}/>\n                                </td>\n                                }\n\n\n                                <td style={styles.tdDisplayFieldWidth}>\n                                    {\n                                        md.display !== null &&\n                                        <span>\n                                            <input type=\"text\"\n                                                placeholder=\"UI display-name\"\n                                                title=\"name displayed in the UI for this item\"\n                                                value={md.display}\n                                                onChange={(event) => {self.setDisplayName(md, index, event.target.value)}}  />\n                                        </span>\n                                    }\n                                </td>\n\n\n                                <td style={styles.tdMetadataFieldName}>\n                                {\n                                    self.needs_metadata_field(md) &&\n                                    <div style={styles.mdFieldWidth}>\n                                        <input type=\"text\"\n                                            placeholder=\"metadata name\"\n                                            value={md.field1}\n                                            title=\"metadata names should only contain 0..9, a..z, and A..Z\"\n                                            onKeyDown={(event) => {return self.checkMetadataName(event)}}\n                                            onChange={(event) => {self.setUserMetadataName1(md, index, event.target.value)}}  />\n                                    </div>\n                                }\n                                    { md.sort === \"true\" &&\n                                    <div>\n                                        <input type=\"text\"\n                                               placeholder=\"sort descending UI text\"\n                                               value={md.sort_desc}\n                                               title=\"The text to display for this field if a descending sort is selected of this type\"\n                                               onChange={(event) => {self.setValue(md, index, \"sort_desc\", event.target.value)}}  />\n                                    </div>\n                                    }\n                                    { md.sort === \"true\" &&\n                                     <div>\n                                         <input type=\"text\"\n                                                placeholder=\"sort ascending UI text\"\n                                                value={md.sort_asc}\n                                                title=\"The text to display for this field if an ascending sort is selected of this type\"\n                                                onChange={(event) => {self.setValue(md, index, \"sort_asc\", event.target.value)}}  />\n                                     </div>\n                                    }\n                                    {md.sort === \"true\" &&\n                                        <br></br>\n                                    }\n                                </td>\n\n                                <td style={styles.tdSort}>\n                                    {md.sort !== \"\" &&\n                                    <div style={styles.tdSort2} title=\"enable this category as an item used for sorting in the UI\">\n                                        <Checkbox\n                                            checked={md.sort === \"true\"}\n                                            onChange={(event) => {\n                                                self.setSort(md, index, event.target.checked);\n                                            }}\n                                            value=\"enable result sorting over this field?\"\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                        <span style={styles.sortLabel}>sort</span>\n                                    </div>\n                                    }\n                                    {md.sort === \"true\" &&\n                                    <div style={styles.tdSort2} title=\"set this descending field as the default sort field for the UI\">\n                                        {'\\u2190'}\n                                        <Checkbox\n                                            checked={md.sort_default === \"desc\"}\n                                            onChange={(event) => {\n                                                self.setDefaultSort(md, index, \"desc\", event.target.checked);\n                                            }}\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                        <span style={styles.sortLabel}>default</span>\n                                    </div>\n                                    }\n\n                                    {md.sort === \"true\" &&\n                                    <div style={styles.tdSort2} title=\"set this ascending field as the default sort field for the UI\">\n                                        {'\\u2190'}\n                                        <Checkbox\n                                            checked={md.sort_default === \"asc\"}\n                                            onChange={(event) => {\n                                                self.setDefaultSort(md, index, \"asc\", event.target.checked);\n                                            }}\n                                            inputProps={{\n                                                'aria-label': 'primary checkbox',\n                                            }}\n                                        />\n                                        <span style={styles.sortLabel}>default</span>\n                                    </div>\n                                    }\n                                </td>\n\n                                <td style={styles.tdAction}>\n                                    <span style={styles.deleteBox} onClick={() => self.deleteMetadataItem(index)} title=\"remove this metadata item\">\n                                        <img src=\"../images/delete.svg\" style={styles.deleteImage} title=\"remove this metadata mapping\" alt=\"remove this metadata mapping\"/>\n                                    </span>\n                                    {index > 0 &&\n                                    <span style={styles.upDownArrow} title=\"move row up (change UI ordering)\"\n                                          onClick={() => {\n                                              self.move_row_up(md, index)\n                                          }}>&#8679;</span>\n                                    }\n                                    {index + 1 < num_rows &&\n                                    <span style={styles.upDownArrow} title=\"move row down (change UI ordering)\"\n                                          onClick={() => {\n                                              self.move_row_down(md, index)\n                                          }}>&#8681;</span>\n                                    }\n                                </td>\n\n                            </tr>)\n                        })\n                    }\n\n                    <tr>\n                        <td colSpan={5}>&nbsp;</td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan={5} />\n                        <td>\n                            <div style={styles.imageButton} onClick={() => this.addNewMetadataMapping()}><img\n                                style={styles.addImage} src=\"../images/add.svg\" title=\"add new metadata mapping\"\n                                alt=\"add new metadata mapping\"/></div>\n                        </td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan={5}>&nbsp;</td>\n                    </tr>\n\n                    </tbody>\n\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerMetadataMapper;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Api from '../common/api'\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        width: '98%',\n    },\n    textField: {\n        width: '95%',\n    },\n    dlText: {\n        marginTop: '-2px',\n        width: '150px',\n        float: 'left',\n    },\n    manualBox: {\n        float: 'right',\n        marginRight: '100px',\n    },\n    manualImage: {\n        float: 'left',\n        width: '40px',\n    }\n};\n\n\nexport class CrawlerOffice365 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // office 365 properties\n            tenantId: props.tenantId ? props.tenantId : '',\n            clientId: props.clientId ? props.clientId : '',\n            clientSecret: props.clientSecret ? props.clientSecret : '',\n            redirectUrl: props.redirectUrl ? props.redirectUrl : '',\n\n            crawlOneDrive: Api.defined(props.crawlOneDrive) ? props.crawlOneDrive : false,\n            crawlAllOfOneDrive: Api.defined(props.crawlAllOfOneDrive) ? props.crawlAllOfOneDrive : false,\n            oneDriveUsersToCrawl: props.oneDriveUsersToCrawl ? props.oneDriveUsersToCrawl : '',\n\n            crawlSharePoint: Api.defined(props.crawlSharePoint) ? props.crawlSharePoint : false,\n            crawlRootSite: Api.defined(props.crawlRootSite) ? props.crawlRootSite : false,\n            sharePointSitesToCrawl: props.sharePointSitesToCrawl ? props.sharePointSitesToCrawl : '',\n\n            crawlExchange: Api.defined(props.crawlExchange) ? props.crawlExchange : false,\n            crawlAllOfExchange: Api.defined(props.crawlAllOfExchange) ? props.crawlAllOfExchange : false,\n            exchangeUsersToCrawl: props.exchangeUsersToCrawl ? props.exchangeUsersToCrawl : '',\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({tenantId: nextProps.tenantId,\n                clientId: nextProps.clientId,\n                db_password: nextProps.db_password,\n                clientSecret: nextProps.clientSecret,\n                redirectUrl: nextProps.redirectUrl,\n\n                crawlOneDrive: nextProps.crawlOneDrive,\n                crawlAllOfOneDrive: nextProps.crawlAllOfOneDrive,\n                oneDriveUsersToCrawl: nextProps.oneDriveUsersToCrawl,\n\n                crawlSharePoint: nextProps.crawlSharePoint,\n                crawlRootSite: nextProps.crawlRootSite,\n                sharePointSitesToCrawl: nextProps.sharePointSitesToCrawl,\n\n                crawlExchange: nextProps.crawlExchange,\n                crawlAllOfExchange: nextProps.crawlAllOfExchange,\n                exchangeUsersToCrawl: nextProps.exchangeUsersToCrawl,\n\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            tenantId: data.tenantId ? data.tenantId : this.state.tenantId,\n            clientId: data.clientId ? data.clientId : this.state.clientId,\n            clientSecret: data.clientSecret ? data.clientSecret : this.state.clientSecret,\n            redirectUrl: data.redirectUrl ? data.redirectUrl : this.state.redirectUrl,\n\n            crawlOneDrive: Api.defined(data.crawlOneDrive) ? data.crawlOneDrive : this.state.crawlOneDrive,\n            crawlAllOfOneDrive: Api.defined(data.crawlAllOfOneDrive) ? data.crawlAllOfOneDrive : this.state.crawlAllOfOneDrive,\n            oneDriveUsersToCrawl: data.oneDriveUsersToCrawl ? data.oneDriveUsersToCrawl : this.state.oneDriveUsersToCrawl,\n\n            crawlSharePoint: Api.defined(data.crawlSharePoint) ? data.crawlSharePoint : this.state.crawlSharePoint,\n            crawlRootSite: Api.defined(data.crawlRootSite) ? data.crawlRootSite : this.state.crawlRootSite,\n            sharePointSitesToCrawl: data.sharePointSitesToCrawl ? data.sharePointSitesToCrawl : this.state.sharePointSitesToCrawl,\n\n            crawlExchange: Api.defined(data.crawlExchange) ? data.crawlExchange : this.state.crawlExchange,\n            crawlAllOfExchange: Api.defined(data.crawlAllOfExchange) ? data.crawlAllOfExchange : this.state.crawlAllOfExchange,\n            exchangeUsersToCrawl: data.exchangeUsersToCrawl ? data.exchangeUsersToCrawl : this.state.exchangeUsersToCrawl,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-office365.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n\n                <Grid container spacing={1}>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"tenant id\"\n                            label=\"tenant id\"\n                            autoFocus={true}\n                            value={this.state.tenantId}\n                            onChange={(event) => {this.change_callback({tenantId: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <div style={styles.manualBox}>\n                            <a href=\"../resources/simsage-office365-setup.pdf\" id=\"dlOffice365\" target=\"_blank\" title=\"download the SimSage Office 365 setup guide\">\n                                <div style={styles.dlText}>download Microsoft Azure configuration instructions</div>\n                                <img src=\"../images/pdf-icon.png\" alt=\"offce 365 setup guide\" style={styles.manualImage}/></a>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"client id\"\n                            label=\"client id\"\n                            value={this.state.clientId}\n                            onChange={(event) => {this.change_callback({clientId: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"client secret\"\n                            label=\"client secret\"\n                            value={this.state.clientSecret}\n                            onChange={(event) => {this.change_callback({clientSecret: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"redirect url: the SimSage interface url to return-to after MS sign-in completes.\"\n                            label=\"redirect url\"\n                            value={this.state.redirectUrl}\n                            onChange={(event) => {this.change_callback({redirectUrl: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={6} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"Check this box if you want OneDrive of your Office365 to be included\">\n                            <Checkbox\n                                checked={this.state.crawlOneDrive}\n                                onChange={(event) => { this.change_callback({crawlOneDrive: event.target.checked}); }}\n                                value=\"enable OneDrive?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            enable OneDrive?\n                        </div>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"Check this box if you want ALL of OneDrive to be included\">\n                            <Checkbox\n                                checked={this.state.crawlAllOfOneDrive}\n                                disabled={!this.state.crawlOneDrive}\n                                onChange={(event) => { this.change_callback({crawlAllOfOneDrive: event.target.checked}); }}\n                                value=\"crawl all of OneDrive?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            crawl all of OneDrive?\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"specific one-drive accounts (comma separated email addresses)\"\n                            label=\"specific one-drive accounts (comma separated email addresses)\"\n                            disabled={this.state.crawlAllOfOneDrive || !this.state.crawlOneDrive}\n                            variant=\"outlined\"\n                            multiline={true}\n                            rows={2}\n                            value={this.state.oneDriveUsersToCrawl}\n                            onChange={(event) => {this.change_callback({oneDriveUsersToCrawl: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"Check this box if you want SharePoint of your Office365 to be included\">\n                            <Checkbox\n                                checked={this.state.crawlSharePoint}\n                                onChange={(event) => { this.change_callback({crawlSharePoint: event.target.checked}); }}\n                                value=\"enable SharePoint indexing?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            enable SharePoint indexing?\n                        </div>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"Check this box if you want the root SharePoint site to be indexed\">\n                            <Checkbox\n                                checked={this.state.crawlRootSite}\n                                disabled={!this.state.crawlSharePoint}\n                                onChange={(event) => { this.change_callback({crawlRootSite: event.target.checked}); }}\n                                value=\"crawl SharePoint root site?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            crawl SharePoint root site?\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"other SharePoint sites (comma separated ids)\"\n                            label=\"other SharePoint sites (comma separated ids)\"\n                            disabled={!this.state.crawlSharePoint}\n                            variant=\"outlined\"\n                            multiline={true}\n                            rows={2}\n                            value={this.state.sharePointSitesToCrawl}\n                            onChange={(event) => {this.change_callback({sharePointSitesToCrawl: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"Check this box if you want Exchange of your Office365 to be included\">\n                            <Checkbox\n                                checked={this.state.crawlExchange}\n                                onChange={(event) => { this.change_callback({crawlExchange: event.target.checked}); }}\n                                value=\"enable Exchange?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            enable Exchange?\n                        </div>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <div style={{float: 'left'}} title=\"Check this box if you want ALL of Exchange to be included\">\n                            <Checkbox\n                                checked={this.state.crawlAllOfExchange}\n                                disabled={!this.state.crawlExchange}\n                                onChange={(event) => { this.change_callback({crawlAllOfExchange: event.target.checked}); }}\n                                value=\"crawl all of Exchange?\"\n                                inputProps={{\n                                    'aria-label': 'primary checkbox',\n                                }}\n                            />\n                            crawl all of Exchange?\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"specific exchange accounts (comma separated email addresses)\"\n                            label=\"specific exchange accounts (comma separated email addresses)\"\n                            disabled={this.state.crawlAllOfExchange || !this.state.crawlExchange}\n                            variant=\"outlined\"\n                            multiline={true}\n                            rows={2}\n                            value={this.state.exchangeUsersToCrawl}\n                            onChange={(event) => {this.change_callback({exchangeUsersToCrawl: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                </Grid>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerOffice365;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport Api from '../common/api';\nimport Chip from \"@material-ui/core/Chip\";\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        marginLeft: '20px',\n    },\n    textField: {\n        marginRight: '10px',\n        width: '700px',\n    },\n    dlText: {\n        marginTop: '-2px',\n        width: '150px',\n        float: 'left',\n    },\n    manualBox: {\n        float: 'right',\n        marginRight: '100px',\n    },\n    manualImage: {\n        float: 'left',\n        width: '40px',\n    },\n    roleBlock: {\n        padding: '5px',\n        marginTop: '20px',\n        float: 'left',\n        width: '400px',\n        border: '1px solid #888',\n        borderRadius: '4px',\n        marginLeft: '10px',\n    },\n    roleLabel: {\n        fontSize: '0.8em',\n        color: '#aaa',\n    },\n    roleArea: {\n        padding: '20px',\n    },\n    roleChip: {\n        margin: '2px',\n    },\n};\n\n\nexport class CrawlerDropbox extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // dropbox properties\n            clientToken: props.clientToken ? props.clientToken : '',\n            folderList: props.folderList ? props.folderList : '',\n            userList: Api.defined(props.userList) ? props.userList : '',\n        };\n\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({tenantId: nextProps.tenantId,\n                clientToken: Api.defined(nextProps.clientToken) ? nextProps.clientToken : '',\n                folderList: Api.defined(nextProps.folderList) ? nextProps.folderList : '',\n                userList: Api.defined(nextProps.userList) ? nextProps.userList : '',\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            clientToken: Api.defined(data.clientToken) ? data.clientToken : this.state.clientToken,\n            folderList: Api.defined(data.folderList) ? data.folderList : this.state.folderList,\n            userList: Api.defined(data.userList) ? data.userList : this.state.userList,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            const c_data = this.construct_data(data);\n            this.state.onSave(c_data);\n        }\n    }\n    getSelectedUsers() {\n        const selectedUsers = {};\n        for (const user_id of this.state.userList.split(\",\")) {\n            if (user_id) {\n                selectedUsers[user_id] = true;\n            }\n        }\n        const user_list = [];\n        for (const user of this.props.availableUserList) {\n            if (user.id && selectedUsers[user.id]) {\n                user_list.push(user);\n            }\n        }\n        return user_list;\n    }\n    getAvailableUsers() {\n        const selectedUsers = {};\n        for (const user_id of this.state.userList.split(\",\")) {\n            if (user_id) {\n                selectedUsers[user_id] = true;\n            }\n        }\n        const user_list = [];\n        for (const user of this.props.availableUserList) {\n            if (user.id && !selectedUsers[user.id]) {\n                user_list.push(user);\n            }\n        }\n        return user_list;\n    }\n    removeUser(removeUser) {\n        const new_list = [];\n        for (const user_id of this.state.userList.split(\",\")) {\n            if (user_id && user_id !== removeUser.id) {\n                new_list.push(user_id);\n            }\n        }\n        this.change_callback({userList: new_list.join()});\n    }\n    addUser(user) {\n        let new_list = this.state.userList;\n        if (new_list.length > 0) {\n            new_list = new_list + ',' + user.id\n        } else {\n            new_list = user.id\n        }\n        this.change_callback({userList: new_list});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-dropbox.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n                <TextField\n                    placeholder=\"client token\"\n                    label=\"client token\"\n                    value={this.state.clientToken}\n                    onChange={(event) => {this.change_callback({clientToken: event.target.value})}}\n                    style={styles.textField}\n                />\n\n                <div style={styles.manualBox}>\n                    <a href=\"../resources/simsage-dropbox-setup.pdf\" id=\"dlDropbox\" target=\"_blank\" title=\"download the SimSage Dropbox setup guide\">\n                        <div style={styles.dlText}>download Dropbox configuration instructions</div>\n                        <img src=\"../images/pdf-icon.png\" alt=\"dropbox setup guide\" style={styles.manualImage}/></a>\n                </div>\n\n                <br />\n                <br />\n\n                <TextField\n                    placeholder=\"specific folders to crawl (separated by commas), leave empty to crawl all.\"\n                    label=\"specific folders to crawl (separated by commas), leave empty to crawl all.\"\n                    multiline={true}\n                    rows={5}\n                    value={this.state.folderList}\n                    onChange={(event) => {this.change_callback({folderList: event.target.value})}}\n                    style={styles.textField}\n                />\n                <br />\n\n                <div>\n                    <div style={styles.roleBlock}>\n                        <div style={styles.roleLabel}>users with access</div>\n                        <div style={styles.roleArea}>\n                            {\n                                this.getSelectedUsers().map((user) => {\n                                    return (<Chip key={user.id} color=\"secondary\"\n                                                  style={styles.roleChip}\n                                                  onClick={() => this.removeUser(user)}\n                                                  label={user.firstName + ' ' + user.surname} variant=\"outlined\" />)\n                                })\n                            }\n                        </div>\n                    </div>\n                    <div style={styles.roleBlock}>\n                        <div style={styles.roleLabel}>available users</div>\n                        <div style={styles.roleArea}>\n                            {\n                                this.getAvailableUsers().map((user) => {\n                                    return (<Chip key={user.id} color=\"primary\"\n                                                  style={styles.roleChip}\n                                                  onClick={() => this.addUser(user)}\n                                                  label={user.firstName + ' ' + user.surname} variant=\"outlined\" />)\n                                })\n                            }\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerDropbox;\n","import React from 'react';\n\nconst styles = {\n    uploadContainer: {\n        float: 'left',\n        width: '90%',\n        minWidth: '90%',\n        padding: '1px',\n        marginLeft: '10px',\n        background: 'white',\n        display: 'inline-block',\n        fontWeight: 700,\n        fontSize: '10pt',\n        cursor: 'pointer',\n    },\n    formWidth: {\n        marginTop: '-20px',\n        float: 'left',\n    },\n    uploadControl: {\n        marginTop: '10px',\n        float: 'left',\n    },\n    imageButton: {\n        float: 'left',\n        marginLeft: '10px',\n        paddingTop: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    restoreImage: {\n        width: '25px',\n    },\n    busyImage: {\n        width: '28px',\n        height: '28px',\n        marginTop: '-10px',\n        float: 'left',\n    },\n    uploadInput: {\n        float: 'left',\n    },\n    uploadWheel: {\n        marginLeft: '5px',\n        marginTop: '14px',\n        height: '28px',\n        float: 'left',\n    },\n};\n\nexport class RestoreWPArchive extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filename: '',\n            fileType: '',\n            data: '',\n            organisationId: props.organisationId,\n            kbId: props.kbId,\n            sourceId: props.sourceId,\n            onError: props.onError,\n        };\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            organisationId: nextProps.organisationId,\n            kbId: nextProps.kbId,\n            sourceId: nextProps.sourceId,\n            onError: nextProps.onError,\n        });\n    }\n\n    _handleImageChange(e) {\n        e.preventDefault();\n\n        const self = this;\n        const reader = new FileReader();\n        const file = e.target.files[0];\n        const filename = file['name'];\n        const fileType = file['type'];\n\n        reader.onloadend = () => {\n            self.setState({\n                filename: filename,\n                fileType: fileType,\n                data: reader.result\n            });\n        };\n        reader.readAsDataURL(file)\n    }\n\n    upload() {\n        if (this.state.data) {\n            const payload = {\n                organisationId: this.state.organisationId,\n                kbId: this.state.kbId,\n                sid: \"\",\n                sourceId: this.state.sourceId,\n                data: this.state.data,\n            };\n            if (this.props.doUpload) {\n                this.props.doUpload(payload);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(e) => this._handleSubmit(e)} style={styles.uploadContainer}>\n                    <div style={styles.formWidth}>\n                        <input style={styles.uploadControl}\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                        {\n                            this.state.data && this.state.data.length > 0 && this.state.fileType === \"application/zip\" &&\n                            <span style={styles.imageButton} onClick={() => this.upload()}><img\n                                style={styles.restoreImage} src=\"../images/restore.svg\"\n                                title={\"Click here to upload WordPress Archive \\\"\" + this.state.filename + \"\\\"\"}\n                                alt=\"restore data from file\"/></span>\n                        }\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default RestoreWPArchive;\n","import React, {Component} from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport Comms from \"../common/comms\";\nimport RestoreWPArchive from \"../common/restore-wp-archive\";\n\nconst styles = {\n    formContent: {\n        marginTop: '50px',\n        marginLeft: '50px',\n        fontSize: '0.9em',\n    },\n    exportWP: {\n        marginTop: '50px',\n    },\n    exportButton: {\n        marginTop: '10px',\n    },\n    importWP: {\n        marginTop: '50px',\n        float: 'left',\n    },\n    importText: {\n        marginBottom: '20px',\n    },\n    restoreWP: {\n        marginTop: '50px',\n    }\n};\n\n\nexport class CrawlerWordpress extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            organisation_id: props.organisation_id,\n            kb_id: props.kb_id,\n            source_id: props.source_id,\n            onSave: props.onSave,\n            onError: props.onError,\n        };\n\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState({\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            });\n        }\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            // dummy value in order to save\n            this.state.onSave({crawlerType: \"wordpress\"});\n        }\n    }\n    exportArchive() {\n        window.open(Comms.get_export_archive_url(this.state.organisation_id, this.state.kb_id, this.state.source_id), '_blank');\n    }\n    restore(data) {\n        if (data && data.data && data.data.length > 0) {\n            // sid will be set by wpUploadArchive\n            this.props.wpUploadArchive({\"organisationId\": this.state.organisation_id,\n                \"kbId\": this.state.kb_id, \"sid\": \"\", \"sourceId\": this.state.source_id, \"data\": data.data});\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-wordpress.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n                The WordPress crawler is an external entity controlled by the SimSage WordPress plugin.<br/>\n                As such there are no properties to configure here, nor is there a schedule for SimSage to work to.<br/><br/>\n\n                {this.state.source_id > 0 &&\n                    <div style={styles.exportWP}>\n                        <div>export the contents of this source as a WordPress GZip Archive</div>\n                        <Button color=\"secondary\" variant=\"outlined\" style={styles.exportButton}\n                                onClick={() => this.exportArchive()}>Export WordPress Archive</Button>\n                    </div>\n                }\n\n                {this.state.source_id > 0 &&\n                    <div style={styles.importWP}>\n                        <div style={styles.importText}>import the contents of  WordPress GZip Archive into this source</div>\n                        <RestoreWPArchive doUpload={(data) => this.restore(data)}\n                                          organisationId={this.state.organisation_id}\n                                          kbId={this.state.kb_id}\n                                          sourceId={this.state.source_id}\n                                          onError={(err) => this.props.setError(\"Error\", err)} />\n                    </div>\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerWordpress;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport Api from '../common/api';\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        marginLeft: '20px',\n    },\n    textField: {\n        width: '100%',\n    },\n    dlText: {\n        marginTop: '-2px',\n        width: '250px',\n        float: 'left',\n    },\n    manualBox: {\n        width: '100%',\n    },\n    manualImage: {\n        float: 'left',\n        width: '40px',\n    },\n    roleBlock: {\n        padding: '5px',\n        border: '1px solid #888',\n        borderRadius: '4px',\n    },\n    roleLabel: {\n        fontSize: '0.8em',\n        color: '#aaa',\n    },\n    roleArea: {\n        padding: '20px',\n    },\n    roleChip: {\n        margin: '2px',\n    },\n};\n\n\nexport class CrawlerGDrive extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // Google-drive properties\n            gdrive_projectId: props.gdrive_projectId ? props.gdrive_projectId : '',\n            gdrive_clientId: props.gdrive_clientId ? props.gdrive_clientId : '',\n            gdrive_clientSecret: props.gdrive_clientSecret ? props.gdrive_clientSecret : '',\n            gdrive_clientName: props.gdrive_clientName ? props.gdrive_clientName : '',\n            gdrive_clientPort: props.gdrive_clientPort ? props.gdrive_clientPort : '',\n            gdrive_userList: Api.defined(props.gdrive_userList) ? props.gdrive_userList : '',\n        };\n\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({tenantId: nextProps.tenantId,\n                gdrive_projectId: Api.defined(nextProps.gdrive_projectId) ? nextProps.gdrive_projectId : '',\n                gdrive_clientId: Api.defined(nextProps.gdrive_clientId) ? nextProps.gdrive_clientId : '',\n                gdrive_clientSecret: Api.defined(nextProps.gdrive_clientSecret) ? nextProps.gdrive_clientSecret : '',\n                gdrive_clientName: Api.defined(nextProps.gdrive_clientName) ? nextProps.gdrive_clientName : '',\n                gdrive_clientPort: Api.defined(nextProps.gdrive_clientPort) ? nextProps.gdrive_clientPort : '',\n                gdrive_userList: Api.defined(nextProps.gdrive_userList) ? nextProps.gdrive_userList : '',\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            gdrive_projectId: Api.defined(data.gdrive_projectId) ? data.gdrive_projectId : this.state.gdrive_projectId,\n            gdrive_clientId: Api.defined(data.gdrive_clientId) ? data.gdrive_clientId : this.state.gdrive_clientId,\n            gdrive_clientSecret: Api.defined(data.gdrive_clientSecret) ? data.gdrive_clientSecret : this.state.gdrive_clientSecret,\n            gdrive_clientName: Api.defined(data.gdrive_clientName) ? data.gdrive_clientName : this.state.gdrive_clientName,\n            gdrive_clientPort: Api.defined(data.gdrive_clientPort) ? data.gdrive_clientPort : this.state.gdrive_clientPort,\n            gdrive_userList: Api.defined(data.gdrive_userList) ? data.gdrive_userList : this.state.gdrive_userList,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            const c_data = this.construct_data(data);\n            this.state.onSave(c_data);\n        }\n    }\n    getSelectedUsers() {\n        const selectedUsers = {};\n        for (const user_id of this.state.gdrive_userList.split(\",\")) {\n            if (user_id) {\n                selectedUsers[user_id] = true;\n            }\n        }\n        const user_list = [];\n        for (const user of this.props.availableUserList) {\n            if (user.id && selectedUsers[user.id]) {\n                user_list.push(user);\n            }\n        }\n        return user_list;\n    }\n    getAvailableUsers() {\n        const selectedUsers = {};\n        for (const user_id of this.state.gdrive_userList.split(\",\")) {\n            if (user_id) {\n                selectedUsers[user_id] = true;\n            }\n        }\n        const user_list = [];\n        for (const user of this.props.availableUserList) {\n            if (user.id && !selectedUsers[user.id]) {\n                user_list.push(user);\n            }\n        }\n        return user_list;\n    }\n    removeUser(removeUser) {\n        const new_list = [];\n        for (const user_id of this.state.gdrive_userList.split(\",\")) {\n            if (user_id && user_id !== removeUser.id) {\n                new_list.push(user_id);\n            }\n        }\n        this.change_callback({gdrive_userList: new_list.join()});\n    }\n    addUser(user) {\n        let new_list = this.state.gdrive_userList;\n        if (new_list.length > 0) {\n            new_list = new_list + ',' + user.id\n        } else {\n            new_list = user.id\n        }\n        this.change_callback({gdrive_userList: new_list});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-gdrive.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n\n                <Grid container spacing={2}>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={7}>\n                        <TextField\n                            placeholder=\"client Id\"\n                            label=\"client Id\"\n                            variant=\"outlined\"\n                            value={this.state.gdrive_clientId}\n                            onChange={(event) => {this.change_callback({gdrive_clientId: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <div style={styles.manualBox}>\n                            <a href=\"../resources/simsage-google-drive-setup.pdf\" id=\"dlGDrive\" target=\"_blank\" title=\"download the SimSage Google-drive setup guide\">\n                                <div style={styles.dlText}>download Google-drive configuration instructions</div>\n                                <img src=\"../images/pdf-icon.png\" alt=\"google-drive setup guide\" style={styles.manualImage}/>\n                            </a>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"client Secret\"\n                            label=\"client Secret\"\n                            variant=\"outlined\"\n                            value={this.state.gdrive_clientSecret}\n                            onChange={(event) => {this.change_callback({gdrive_clientSecret: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"project Id\"\n                            label=\"project Id\"\n                            variant=\"outlined\"\n                            value={this.state.gdrive_projectId}\n                            onChange={(event) => {this.change_callback({gdrive_projectId: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"client Name\"\n                            label=\"client Name\"\n                            variant=\"outlined\"\n                            value={this.state.gdrive_clientName}\n                            onChange={(event) => {this.change_callback({gdrive_clientName: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"local web port\"\n                            label=\"local web port\"\n                            variant=\"outlined\"\n                            value={this.state.gdrive_clientPort}\n                            onChange={(event) => {this.change_callback({gdrive_clientPort: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <div style={styles.roleBlock}>\n                            <div style={styles.roleLabel}>users with access</div>\n                            <div style={styles.roleArea}>\n                                {\n                                    this.getSelectedUsers().map((user) => {\n                                        return (<Chip key={user.id} color=\"secondary\"\n                                                      style={styles.roleChip}\n                                                      onClick={() => this.removeUser(user)}\n                                                      label={user.firstName + ' ' + user.surname} variant=\"outlined\" />)\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <div style={styles.roleBlock}>\n                            <div style={styles.roleLabel}>available users</div>\n                            <div style={styles.roleArea}>\n                                {\n                                    this.getAvailableUsers().map((user) => {\n                                        return (<Chip key={user.id} color=\"primary\"\n                                                      style={styles.roleChip}\n                                                      onClick={() => this.addUser(user)}\n                                                      label={user.firstName + ' ' + user.surname} variant=\"outlined\" />)\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} />\n\n                </Grid>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerGDrive;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport Api from '../common/api';\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        marginLeft: '20px',\n    },\n    textField: {\n        width: '100%',\n    },\n    dlText: {\n        marginTop: '-2px',\n        width: '250px',\n        float: 'left',\n    },\n    manualBox: {\n        width: '100%',\n    },\n    manualImage: {\n        float: 'left',\n        width: '40px',\n    },\n    roleBlock: {\n        padding: '5px',\n        border: '1px solid #888',\n        borderRadius: '4px',\n    },\n    roleLabel: {\n        fontSize: '0.8em',\n        color: '#aaa',\n    },\n    roleArea: {\n        padding: '20px',\n    },\n    roleChip: {\n        margin: '2px',\n    },\n};\n\n\nexport class CrawlerNFS extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // Google-drive properties\n            nfs_local_folder: props.nfs_local_folder ? props.nfs_local_folder : '',\n            nfs_userList: Api.defined(props.nfs_userList) ? props.nfs_userList : '',\n        };\n\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({tenantId: nextProps.tenantId,\n                nfs_local_folder: Api.defined(nextProps.nfs_local_folder) ? nextProps.nfs_local_folder : '',\n                nfs_userList: Api.defined(nextProps.nfs_userList) ? nextProps.nfs_userList : '',\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {\n            nfs_local_folder: Api.defined(data.nfs_local_folder) ? data.nfs_local_folder : this.state.nfs_local_folder,\n            nfs_userList: Api.defined(data.nfs_userList) ? data.nfs_userList : this.state.nfs_userList,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            const c_data = this.construct_data(data);\n            this.state.onSave(c_data);\n        }\n    }\n    getSelectedUsers() {\n        const selectedUsers = {};\n        for (const user_id of this.state.nfs_userList.split(\",\")) {\n            if (user_id) {\n                selectedUsers[user_id] = true;\n            }\n        }\n        const user_list = [];\n        for (const user of this.props.availableUserList) {\n            if (user.id && selectedUsers[user.id]) {\n                user_list.push(user);\n            }\n        }\n        return user_list;\n    }\n    getAvailableUsers() {\n        const selectedUsers = {};\n        for (const user_id of this.state.nfs_userList.split(\",\")) {\n            if (user_id) {\n                selectedUsers[user_id] = true;\n            }\n        }\n        const user_list = [];\n        for (const user of this.props.availableUserList) {\n            if (user.id && !selectedUsers[user.id]) {\n                user_list.push(user);\n            }\n        }\n        return user_list;\n    }\n    removeUser(removeUser) {\n        const new_list = [];\n        for (const user_id of this.state.nfs_userList.split(\",\")) {\n            if (user_id && user_id !== removeUser.id) {\n                new_list.push(user_id);\n            }\n        }\n        this.change_callback({nfs_userList: new_list.join()});\n    }\n    addUser(user) {\n        let new_list = this.state.nfs_userList;\n        if (new_list.length > 0) {\n            new_list = new_list + ',' + user.id\n        } else {\n            new_list = user.id\n        }\n        this.change_callback({nfs_userList: new_list});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-nfs.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n\n                <Grid container spacing={2}>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"local folder\"\n                            label=\"Local Folder\"\n                            variant=\"outlined\"\n                            value={this.state.nfs_local_folder}\n                            onChange={(event) => {this.change_callback({nfs_local_folder: event.target.value})}}\n                            style={styles.textField}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <div style={styles.roleBlock}>\n                            <div style={styles.roleLabel}>users with access</div>\n                            <div style={styles.roleArea}>\n                                {\n                                    this.getSelectedUsers().map((user) => {\n                                        return (<Chip key={user.id} color=\"secondary\"\n                                                      style={styles.roleChip}\n                                                      onClick={() => this.removeUser(user)}\n                                                      label={user.firstName + ' ' + user.surname} variant=\"outlined\" />)\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={5}>\n                        <div style={styles.roleBlock}>\n                            <div style={styles.roleLabel}>available users</div>\n                            <div style={styles.roleArea}>\n                                {\n                                    this.getAvailableUsers().map((user) => {\n                                        return (<Chip key={user.id} color=\"primary\"\n                                                      style={styles.roleChip}\n                                                      onClick={() => this.addUser(user)}\n                                                      label={user.firstName + ' ' + user.surname} variant=\"outlined\" />)\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={1} />\n\n                </Grid>\n\n            </div>\n        );\n    }\n}\n\nexport default CrawlerNFS;\n","import React, {Component} from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Grid from \"@material-ui/core/Grid\";\nimport {Api} from \"../common/api\";\n\n\nconst styles = {\n    formContent: {\n        marginTop: '20px',\n        width: '98%',\n    },\n    fieldWidth: {\n        width: '100%',\n    },\n    dbType: {\n        float: 'right',\n        marginTop: '6px',\n        marginRight: '10px',\n    }\n};\n\n\nexport class CrawlerRestFull extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n\n            onSave: props.onSave,\n            onError: props.onError,\n\n            // database specific\n            rest_pk: props.rest_pk ? props.rest_pk : '',\n            rest_url: props.rest_url ? props.rest_url : '',\n            rest_template: props.rest_template ? props.rest_template : '',\n            rest_text: props.rest_text ? props.rest_text : '',\n            metadata_list: props.metadata_list ? props.metadata_list : [],\n        };\n\n    }\n    componentDidMount() {\n    }\n    componentWillUnmount() {\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps !== null) {\n            this.setState(this.construct_data({\n                rest_pk: nextProps.rest_pk,\n                rest_url: nextProps.rest_url,\n                rest_template: nextProps.rest_template,\n                rest_text: nextProps.rest_text,\n                metadata_list: nextProps.metadata_list,\n\n                onSave: nextProps.onSave,\n                onError: nextProps.onError,\n            }));\n        }\n    }\n    construct_data(data) {\n        return {rest_url: Api.defined(data.rest_url) ? data.rest_url : this.state.rest_url,\n            rest_template: Api.defined(data.rest_template) ? data.rest_template : this.state.rest_template,\n            rest_text: Api.defined(data.rest_text) ? data.rest_text : this.state.rest_text,\n            rest_pk: Api.defined(data.rest_pk) ? data.rest_pk : this.state.rest_pk,\n            metadata_list: Api.defined(data.metadata_list) ? data.metadata_list : this.state.metadata_list,\n        };\n    }\n    change_callback(data) {\n        this.setState(data);\n        if (this.state.onSave) {\n            this.state.onSave(this.construct_data(data));\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-restfull.js: Something went wrong.</h1>;\n        }\n        return (\n            <div style={styles.formContent}>\n\n                <Grid container spacing={1}>\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"url\"\n                            label=\"url\"\n                            variant=\"outlined\"\n                            value={this.state.rest_url}\n                            onChange={(event) => {this.change_callback({rest_url: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={5}>\n                        <TextField\n                            placeholder=\"the name of the primary key in the record\"\n                            label=\"primary key name\"\n                            variant=\"outlined\"\n                            value={this.state.rest_pk}\n                            onChange={(event) => {this.change_callback({rest_pk: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={6} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"REST text index template, an text template referencing REST fields in square brackets [FIELD-NAME]\"\n                            label=\"REST text index template\"\n                            variant=\"outlined\"\n                            multiline={true}\n                            rows={7}\n                            value={this.state.rest_text}\n                            onChange={(event) => {this.change_callback({rest_text: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                    <Grid item xs={1} />\n                    <Grid item xs={10}>\n                        <TextField\n                            placeholder=\"REST html render template, an html template referencing REST fields in square brackets [FIELD-NAME]\"\n                            label=\"REST html render template\"\n                            variant=\"outlined\"\n                            multiline={true}\n                            rows={7}\n                            value={this.state.rest_template}\n                            onChange={(event) => {this.change_callback({rest_template: event.target.value})}}\n                            style={styles.fieldWidth}\n                        />\n                    </Grid>\n                    <Grid item xs={1} />\n\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerRestFull;\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Button from '@material-ui/core/Button';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport TimeSelect from '../common/time-select'\nimport Api from '../common/api'\n\nimport CrawlerGeneral from './crawler-general'\nimport CrawlerFile from './crawler-file'\nimport CrawlerWeb from \"./crawler-web\";\nimport CrawlerDatabase from \"./crawler-database\";\nimport CrawlerMetadataMapper from \"./crawler-metadata-mapper\";\nimport CrawlerOffice365 from \"./crawler-office365\";\nimport CrawlerDropbox from \"./crawler-dropbox\";\nimport CrawlerWordpress from \"./crawler-wordpress\";\nimport CrawlerGDrive from \"./crawler-gdrive\";\nimport CrawlerNFS from \"./crawler-nfs\";\nimport CrawlerRestFull from \"./crawler-restfull\";\n\n\nconst styles = {\n    formContent: {\n        overflowY: 'scroll',\n        height: '550px',\n    },\n    tab: {\n        backgroundColor: '#f8f8f8',\n        color: '#000',\n    },\n    timeTabContent: {\n        marginLeft: '20px',\n    }\n};\n\nexport class CrawlerDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: props.open,\n\n            onSave: props.onSave,  // save callback\n            onUpdate: props.onUpdate, // update callback\n\n            onError: props.onError,\n            error_title: props.error_title,\n            error_msg: props.error_msg,\n\n            selectedTab: 'general',\n\n            // cache\n            schedule: '',\n\n            // organisational details\n            organisation_id: props.organisation_id,\n            kb_id: props.kb_id,\n\n            has_error: false,\n\n            ...this.setupFromCrawler(props.crawler)\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({has_error: true});\n        console.log(error, info);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps !== null) {\n            if (nextProps.crawler && nextProps.crawler) {\n                this.setState({\n                    open: nextProps.open,\n                    title: nextProps.title,\n\n                    onSave: nextProps.onSave,\n                    onUpdate: nextProps.onUpdate,\n\n                    onError: nextProps.onError,\n                    error_title: nextProps.error_title,\n                    error_msg: nextProps.error_msg,\n\n                    organisation_id: nextProps.organisation_id,\n                    kb_id: nextProps.kb_id,\n\n                    ...this.setupFromCrawler(nextProps.crawler)\n                });\n\n            } else {\n                this.setState({\n                    open: nextProps.open,\n                    title: nextProps.title,\n\n                    onSave: nextProps.onSave,\n                    onError: nextProps.onError,\n                });\n            }\n        }\n    }\n    setupFromCrawler(crawler) {\n\n        let file_username = '';\n        let file_password = '';\n        let file_domain = '';\n        let file_server = '';\n        let file_share_name = '';\n        let file_share_path = '';\n\n        if (crawler.crawlerType === \"file\") {\n            if (crawler.specificJson && crawler.specificJson.length > 0) {\n                const obj = JSON.parse(crawler.specificJson);\n                file_username = obj['username'];\n                file_password = obj['password'];\n                file_domain = obj['domain'];\n                file_server = obj['server'];\n                file_share_name = obj['shareName'];\n                file_share_path = obj['sharePath'];\n            }\n        }\n\n        let web_base_url = '';\n        let web_extension_filter = '';\n        let web_extension_filter_ignore = '';\n        let web_css = '';\n        let web_css_ignore = '';\n        let web_article_filter_incl_csv = '';\n        let web_article_filter_excl_csv = '';\n\n        if (crawler.crawlerType === \"web\") {\n            if (crawler.specificJson && crawler.specificJson.length > 0) {\n                const obj = JSON.parse(crawler.specificJson);\n                web_base_url = obj['baseUrlList'];\n                web_extension_filter = Api.defined(obj['validExtensions']) ? obj['validExtensions'] : '';\n                web_extension_filter_ignore = Api.defined(obj['validExtensionsIgnore']) ? obj['validExtensionsIgnore'] : '';\n                web_css = Api.defined(obj['webCss']) ? obj['webCss'] : '';\n                web_css_ignore = Api.defined(obj['webCssIgnore']) ? obj['webCssIgnore']: '';\n                web_article_filter_incl_csv = Api.defined(obj['articleIncludeWordsCsv']) ? obj['articleIncludeWordsCsv']: '';\n                web_article_filter_excl_csv = Api.defined(obj['articleExcludeWordsCsv']) ? obj['articleExcludeWordsCsv']: '';\n            }\n        }\n\n        let db_username = '';\n        let db_password = '';\n        let db_jdbc = '';\n        let db_type = 'none';\n        let db_query = '';\n        let db_pk = '';\n        let db_template = '';\n        let db_text = '';\n        let metadata_list = [];\n\n        if (crawler.crawlerType === \"database\") {\n            if (crawler.specificJson && crawler.specificJson.length > 0) {\n                const obj = JSON.parse(crawler.specificJson);\n                db_username = obj['username'];\n                db_password = obj['password'];\n                db_jdbc = obj['jdbc'];\n                db_type = obj['type'];\n                db_query = obj['query'];\n                db_pk = obj['pk'];\n                db_template = obj['template'];\n                db_text = obj['text'];\n                metadata_list = obj['metadata_list'];\n            }\n        }\n\n        let rest_pk = '';\n        let rest_url = '';\n        let rest_template = '';\n        let rest_text = '';\n        if (crawler.crawlerType === \"restfull\") {\n            if (crawler.specificJson && crawler.specificJson.length > 0) {\n                const obj = JSON.parse(crawler.specificJson);\n                rest_pk = obj['pk'];\n                rest_url = obj['url'];\n                rest_template = obj['template'];\n                rest_text = obj['text'];\n                metadata_list = obj['metadata_list'];\n            }\n        }\n\n        let tenantId = '';\n        let clientId = '';\n        let clientSecret = '';\n        let redirectUrl = '';\n        let crawlOneDrive = false;\n        let crawlAllOfOneDrive = false;\n        let oneDriveUsersToCrawl = '';\n        let crawlSharePoint = false;\n        let crawlRootSite = false;\n        let sharePointSitesToCrawl = '';\n        let crawlExchange = false;\n        let crawlAllOfExchange = false;\n        let exchangeUsersToCrawl = '';\n        if (crawler.crawlerType === \"office365\") {\n            if (crawler.specificJson && crawler.specificJson.length > 0) {\n                const obj = JSON.parse(crawler.specificJson);\n                tenantId = obj['tenantId'];\n                clientId = obj['clientId'];\n                clientSecret = obj['clientSecret'];\n                redirectUrl = obj['redirectUrl'];\n                crawlOneDrive = obj['crawlOneDrive'];\n                crawlAllOfOneDrive = obj['crawlAllOfOneDrive'];\n                oneDriveUsersToCrawl = obj['oneDriveUsersToCrawl'];\n                crawlSharePoint = obj['crawlSharePoint'];\n                crawlRootSite = obj['crawlRootSite'];\n                sharePointSitesToCrawl = obj['sharePointSitesToCrawl'];\n                crawlExchange = obj['crawlExchange'];\n                crawlAllOfExchange = obj['crawlAllOfExchange'];\n                exchangeUsersToCrawl = obj['exchangeUsersToCrawl'];\n            }\n        }\n\n        let clientToken = '';\n        let folderList = '';\n        let userList = '';\n        if (crawler.crawlerType === \"dropbox\") {\n            if (crawler.specificJson && crawler.specificJson.length > 0) {\n                const obj = JSON.parse(crawler.specificJson);\n                clientToken = obj['clientToken'];\n                folderList = obj['folderList'];\n                userList = Api.defined(obj['userList']) ? obj['userList']: '';\n            }\n        }\n\n        let gdrive_projectId = '';\n        let gdrive_clientId = '';\n        let gdrive_clientSecret = '';\n        let gdrive_clientName = '';\n        let gdrive_clientPort = '';\n        let gdrive_userList = '';\n        if (crawler.crawlerType === \"gdrive\") {\n            if (crawler.specificJson && crawler.specificJson.length > 0) {\n                const obj = JSON.parse(crawler.specificJson);\n                gdrive_projectId = Api.defined(obj['gdrive_projectId']) ? obj['gdrive_projectId']: '';\n                gdrive_clientId = Api.defined(obj['gdrive_clientId']) ? obj['gdrive_clientId']: '';\n                gdrive_clientSecret = Api.defined(obj['gdrive_clientSecret']) ? obj['gdrive_clientSecret']: '';\n                gdrive_clientName = Api.defined(obj['gdrive_clientName']) ? obj['gdrive_clientName']: '';\n                gdrive_clientPort = Api.defined(obj['gdrive_clientPort']) ? obj['gdrive_clientPort']: '';\n                gdrive_userList = Api.defined(obj['gdrive_userList']) ? obj['gdrive_userList']: '';\n            }\n        }\n\n        let nfs_local_folder = '';\n        let nfs_userList = '';\n        if (crawler.crawlerType === \"nfs\") {\n            if (crawler.specificJson && crawler.specificJson.length > 0) {\n                const obj = JSON.parse(crawler.specificJson);\n                nfs_local_folder = Api.defined(obj['nfs_local_folder']) ? obj['nfs_local_folder']: '';\n                nfs_userList = Api.defined(obj['nfs_userList']) ? obj['nfs_userList']: '';\n            }\n        }\n\n        // wordpress has no additional properties\n\n        return {\n            sourceId: crawler.sourceId,\n            nodeId: crawler.nodeId,\n            name: crawler.name,\n            crawlerType: Api.defined(crawler.crawlerType) && crawler.crawlerType.length > 0 ? crawler.crawlerType : 'none',\n            filesPerSecond: crawler.filesPerSecond,\n            schedule: (Api.defined(crawler.schedule) ? crawler.schedule : ''),\n            deleteFiles: crawler.deleteFiles,\n            allowAnonymous: crawler.allowAnonymous,\n            enablePreview: crawler.enablePreview,\n            processingLevel: (Api.defined(crawler.processingLevel)) ? crawler.processingLevel : 'SEARCH',\n            maxItems: crawler.maxItems,\n            maxBotItems: crawler.maxBotItems,\n\n            file_username: file_username,\n            file_password: file_password,\n            file_domain: file_domain,\n            file_server: file_server,\n            file_share_name: file_share_name,\n            file_share_path: file_share_path,\n\n            web_base_url: web_base_url,\n            web_extension_filter: web_extension_filter,\n            web_extension_filter_ignore: web_extension_filter_ignore,\n            web_css: web_css,\n            web_css_ignore: web_css_ignore,\n            web_article_filter_incl_csv: web_article_filter_incl_csv,\n            web_article_filter_excl_csv: web_article_filter_excl_csv,\n\n            db_username: db_username,\n            db_password: db_password,\n            db_jdbc: db_jdbc,\n            db_type: db_type,\n            db_query: db_query,\n            db_pk: db_pk,\n            db_template: db_template,\n            db_text: db_text,\n            metadata_list: metadata_list,\n\n            rest_pk: rest_pk,\n            rest_url: rest_url,\n            rest_template: rest_template,\n            rest_text: rest_text,\n\n            tenantId: tenantId,\n            clientId: clientId,\n            clientSecret: clientSecret,\n            redirectUrl: redirectUrl,\n            crawlOneDrive: crawlOneDrive,\n            crawlAllOfOneDrive: crawlAllOfOneDrive,\n            oneDriveUsersToCrawl: oneDriveUsersToCrawl,\n            crawlSharePoint: crawlSharePoint,\n            crawlRootSite: crawlRootSite,\n            sharePointSitesToCrawl: sharePointSitesToCrawl,\n            crawlExchange: crawlExchange,\n            crawlAllOfExchange: crawlAllOfExchange,\n            exchangeUsersToCrawl: exchangeUsersToCrawl,\n\n            gdrive_projectId: gdrive_projectId,\n            gdrive_clientId: gdrive_clientId,\n            gdrive_clientSecret: gdrive_clientSecret,\n            gdrive_clientName: gdrive_clientName,\n            gdrive_clientPort: gdrive_clientPort,\n            gdrive_userList: gdrive_userList,\n\n            nfs_local_folder: nfs_local_folder,\n            nfs_userList: nfs_userList,\n\n            // for now shared between gdrive and dropbox\n            clientToken: clientToken,\n            folderList: folderList,\n            userList: userList,\n        }\n    }\n    setError(title, error_msg) {\n        if (this.props.onError) {\n            this.props.onError(title, error_msg);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n        this.setState({open: false});\n    }\n    // validate metadata\n    isValidDBMetadata(list) {\n        //  \"key\": \"none\", \"display\": null, \"field1\": \"\", \"field2\": \"\", \"db1\": \"\", \"db2\":\"\", \"sort\": \"\"\n        const metadata_name_map = {};\n        let sort_counter = 0;\n        let empty_sort_field_counter = 0;\n        let default_sort_counter = 0;\n        for (const item of list) {\n            const name = item.field1;\n            if (!name || name.length ===0) {\n                this.setError(\"db invalid metadata field\", \"metadata field missing metadata-field-name\");\n                return false;\n            }\n            const db_name = item.db1;\n            if (!db_name || db_name.length ===0) {\n                this.setError(\"db invalid database field\", \"database field missing for database-field-name \\\"\" + name + \"\\\"\");\n                return false;\n            }\n            if (item.key === \"two level category\") {\n                const db_name2 = item.db2;\n                if (!db_name2 || db_name2.length ===0) {\n                    this.setError(\"db invalid database field\", \"database field missing for database-field-name \\\"\" + name + \"\\\"\");\n                    return false;\n                }\n            }\n            const display = item.display;\n            if (display !== null && display.length ===0) {\n                this.setError(\"db invalid display-name\", \"database field missing display-name \\\"\" + name + \"\\\"\");\n                return false;\n            }\n            if (!metadata_name_map[name]) {\n                metadata_name_map[name] = 1;\n            } else {\n                metadata_name_map[name] += 1;\n            }\n            // sorting checks\n            if (item.sort === \"true\") {\n                sort_counter += 1;\n                if (item.sort_asc.trim().length === 0) empty_sort_field_counter += 1;\n                if (item.sort_desc.trim().length === 0) empty_sort_field_counter += 1;\n                if (item.sort_default.trim() !== \"\") default_sort_counter += 1;\n            }\n        }\n        for (const key in metadata_name_map) {\n            if (metadata_name_map.hasOwnProperty(key)) {\n                const counter = metadata_name_map[key];\n                if (counter > 1) {\n                    this.setError(\"db invalid metadata\", \"metadata name \\\"\" + key + \"\\\" is used more than once.\");\n                    return false;\n                }\n            }\n        }\n        if (sort_counter > 0) { // has sort\n            if (empty_sort_field_counter > 0) {\n                this.setError(\"db invalid metadata\", \"sort-by fields cannot be empty\");\n                return false;\n            }\n            if (default_sort_counter !== 1) {\n                this.setError(\"db invalid metadata\", \"you must specify the default UI sort field\");\n                return false;\n            }\n        }\n        return true;\n    }\n    handleSave() {\n        if (this.state.name.length === 0) {\n\n            this.setError('invalid parameters', 'you must supply a crawler name.');\n\n        } else if (this.state.crawlerType === 'none') {\n\n            this.setError('invalid parameters', 'you must select a crawler-type.');\n\n        } else if (this.state.crawlerType === 'file' && (\n            this.state.file_username.length === 0 ||\n            this.state.file_server.length === 0 ||\n            this.state.file_share_name.length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply crawler-type, name, username, server and share path as a minimum.');\n\n        } else if (this.state.crawlerType === 'web' && (\n                this.state.web_base_url.length === 0 ||\n                (!this.state.web_base_url.startsWith(\"http://\") && !this.state.web_base_url.startsWith(\"https://\")) )) {\n\n            this.setError('invalid parameters', 'you must supply a base url of type http:// or https://');\n\n        } else if (this.state.crawlerType === 'database' && (\n                this.state.db_jdbc.length === 0 ||\n                this.state.db_type.length === 0 || this.state.db_type === 'none' ||\n                this.state.db_query.length === 0 || this.state.db_pk.length === 0 ||\n                this.state.db_template.length === 0 || !this.state.db_text || this.state.db_text.length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply a jdbc connection string, database-type, a query, a primary-key, a text-template, and a SQL-template as a minimum.');\n\n        } else if (this.state.crawlerType === 'restfull' && (\n            this.state.rest_url.length === 0 ||\n            this.state.rest_pk.length === 0 ||\n            this.state.rest_template.length === 0 || !this.state.rest_text || this.state.rest_text.length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply a primary-key, a url, a text-template, and an HTML-template as a minimum.');\n\n        } else if (this.state.crawlerType === 'database' && this.state.metadata_list && this.state.metadata_list.length > 0 &&\n                    !this.isValidDBMetadata(this.state.metadata_list)) {\n\n            // isValidDBMetadata will set the error\n\n        } else if (this.state.crawlerType === 'office365' && (\n                this.state.tenantId.length === 0 ||\n                this.state.clientId.length === 0 ||\n                this.state.redirectUrl.length === 0 ||\n                this.state.clientSecret.length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply tenant-id, client-id, client-secret, and redirect-url as a minimum.');\n\n        } else if (this.state.crawlerType === 'dropbox' && (this.state.clientToken.length === 0 ||\n                   this.state.userList.length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply a client-token, and select a user as a minimum.');\n\n        } else if (this.state.crawlerType === 'gdrive' && (this.state.gdrive_clientId.length === 0 || this.state.gdrive_projectId.length === 0 ||\n                   this.state.gdrive_clientSecret.length === 0 || this.state.gdrive_clientName.length === 0 || this.state.gdrive_clientPort.length ===0 ||\n                   this.state.gdrive_userList.length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply values for all fields, and select one user as a minimum.');\n\n        } else if (this.state.crawlerType === 'nfs' && (this.state.nfs_local_folder.length === 0 || this.state.nfs_userList.length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply values for all fields, and select one user as a minimum.');\n\n        } else if (this.state.crawlerType !== 'web' && this.state.crawlerType !== 'file' && this.state.crawlerType !== 'database' &&\n                   this.state.crawlerType !== 'office365' && this.state.crawlerType !== 'dropbox' && this.state.crawlerType !== 'nfs' &&\n                   this.state.crawlerType !== 'wordpress' && this.state.crawlerType !== 'gdrive' && this.state.crawlerType !== 'restfull') {\n\n            this.setError('invalid parameters', 'you must select a crawler-type first.');\n\n        } else if (isNaN(this.state.filesPerSecond)) {\n\n            this.setError(\"invalid parameters\", \"files-per-second must be a number\");\n\n        } else {\n            // save setup?\n            if (this.state.onSave) {\n                this.state.onSave(this.getCrawlerData(this.state));\n                // and reset the tabs to the first tab\n                this.setState({selectedTab: 'general'});\n            }\n        }\n    };\n    getCrawlerData(data) {\n        let specificJson = this.convertSpecificJson(this.state);\n        return {\n            sourceId: data.sourceId,\n            nodeId: data.nodeId,\n            name: data.name,\n            crawlerType: data.crawlerType,\n            deleteFiles: data.deleteFiles,\n            allowAnonymous: data.allowAnonymous,\n            enablePreview: data.enablePreview,\n            processingLevel: data.processingLevel,\n            maxItems: data.maxItems,\n            maxBotItems: data.maxBotItems,\n            filesPerSecond: data.filesPerSecond,\n            schedule: data.schedule,\n            specificJson: specificJson,\n        }\n    };\n    convertSpecificJson(data) {\n        let specificJson = {};\n        if (data) {\n            if (this.state.crawlerType === 'file') {\n                specificJson = JSON.stringify({\n                    username: data.file_username ? data.file_username : '',\n                    password: data.file_password ? data.file_password : '',\n                    domain: data.file_domain ? data.file_domain : '',\n                    server: data.file_server ? data.file_server : '',\n                    shareName: data.file_share_name ? data.file_share_name : '',\n                    sharePath: data.file_share_path ? data.file_share_path : '',\n                });\n            } else if (this.state.crawlerType === 'database') {\n                specificJson = JSON.stringify({\n                    username: data.db_username ? data.db_username : '',\n                    password: data.db_password ? data.db_password : '',\n                    jdbc: data.db_jdbc ? data.db_jdbc : '',\n                    type: data.db_type ? data.db_type : 'none',\n                    query: data.db_query ? data.db_query : '',\n                    pk: data.db_pk ? data.db_pk : '',\n                    template: data.db_template ? data.db_template : '',\n                    text: data.db_text ? data.db_text : '',\n                    metadata_list: data.metadata_list ? data.metadata_list : [],\n                });\n            } else if (this.state.crawlerType === 'restfull') {\n                specificJson = JSON.stringify({\n                    pk: data.rest_pk ? data.rest_pk : '',\n                    url: data.rest_url ? data.rest_url : '',\n                    template: data.rest_template ? data.rest_template : '',\n                    text: data.rest_text ? data.rest_text : '',\n                    metadata_list: data.metadata_list ? data.metadata_list : [],\n                });\n            } else if (this.state.crawlerType === 'office365') {\n                specificJson = JSON.stringify({\n                    tenantId: data.tenantId ? data.tenantId : '',\n                    clientId: data.clientId ? data.clientId : '',\n                    clientSecret: data.clientSecret ? data.clientSecret : '',\n                    redirectUrl: data.redirectUrl ? data.redirectUrl : '',\n                    crawlOneDrive: Api.defined(data.crawlOneDrive) ? data.crawlOneDrive : false,\n                    crawlAllOfOneDrive: Api.defined(data.crawlAllOfOneDrive) ? data.crawlAllOfOneDrive : false,\n                    oneDriveUsersToCrawl: data.oneDriveUsersToCrawl ? data.oneDriveUsersToCrawl : '',\n                    crawlSharePoint: Api.defined(data.crawlSharePoint) ? data.crawlSharePoint : false,\n                    crawlRootSite: Api.defined(data.crawlRootSite) ? data.crawlRootSite : false,\n                    sharePointSitesToCrawl: data.sharePointSitesToCrawl ? data.sharePointSitesToCrawl : '',\n                    crawlExchange: Api.defined(data.crawlExchange) ? data.crawlExchange : false,\n                    crawlAllOfExchange: Api.defined(data.crawlAllOfExchange) ? data.crawlAllOfExchange : false,\n                    exchangeUsersToCrawl: data.exchangeUsersToCrawl ? data.exchangeUsersToCrawl : '',\n                });\n            } else if (this.state.crawlerType === 'dropbox') {\n                specificJson = JSON.stringify({\n                    clientToken: data.clientToken ? data.clientToken : '',\n                    folderList: data.folderList ? data.folderList : '',\n                    userList: data.userList ? data.userList : '',\n                });\n            } else if (this.state.crawlerType === 'gdrive') {\n                specificJson = JSON.stringify({\n                    gdrive_projectId: data.gdrive_projectId ? data.gdrive_projectId : '',\n                    gdrive_clientId: data.gdrive_clientId ? data.gdrive_clientId : '',\n                    gdrive_clientSecret: data.gdrive_clientSecret ? data.gdrive_clientSecret : '',\n                    gdrive_clientName: data.gdrive_clientName ? data.gdrive_clientName : '',\n                    gdrive_clientPort: data.gdrive_clientPort ? data.gdrive_clientPort : '',\n                    gdrive_userList: data.gdrive_userList ? data.gdrive_userList : '',\n                });\n            } else if (this.state.crawlerType === 'nfs') {\n                specificJson = JSON.stringify({\n                    nfs_local_folder: data.nfs_local_folder ? data.nfs_local_folder : '',\n                    nfs_userList: data.nfs_userList ? data.nfs_userList : '',\n                });\n            } else if (this.state.crawlerType === 'wordpress') {\n                // dummy value in order to save\n                specificJson = JSON.stringify({\n                    crawlerType: 'wordpress',\n                });\n            } else if (this.state.crawlerType === 'web') {\n                specificJson = JSON.stringify({\n                    baseUrlList: data.web_base_url ? data.web_base_url : '',\n                    validExtensions: data.web_extension_filter ? data.web_extension_filter : '',\n                    validExtensionsIgnore: data.web_extension_filter_ignore ? data.web_extension_filter_ignore : '',\n                    webCss: data.web_css ? data.web_css : '',\n                    webCssIgnore: data.web_css_ignore ? data.web_css_ignore : '',\n                    articleIncludeWordsCsv: data.web_article_filter_incl_csv ? data.web_article_filter_incl_csv : '',\n                    articleExcludeWordsCsv: data.web_article_filter_excl_csv ? data.web_article_filter_excl_csv : '',\n                });\n            }\n        }\n        return specificJson;\n    };\n    updateSchedule(time) {\n        if (time !== null) {\n            this.setState({schedule: time});\n            if (this.state.onUpdate) {\n                this.state.onUpdate({...this.getCrawlerData(this.state), \"schedule\": time});\n            }\n        }\n    }\n    update_general_data(data) {\n        this.setState({...this.state, data});\n        if (this.state.onUpdate) {\n            this.state.onUpdate({...this.getCrawlerData(data), \"schedule\": this.state.schedule});\n        }\n    }\n    update_control_data(data) {\n        this.setState({...this.state, data});\n        if (this.state.onUpdate) {\n            this.state.onUpdate({...this.getCrawlerData(this.state), \"specificJson\": this.convertSpecificJson(data)});\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>crawler-dialog.js: Something went wrong.</h1>;\n        }\n        const t_value = this.state.selectedTab;\n\n        const db_data = {db_username: this.state.db_username, db_password: this.state.db_password, db_jdbc: this.state.db_jdbc, db_type: this.state.db_type, db_query: this.state.db_query, db_pk: this.state.db_pk,\n                    metadata_list: this.state.metadata_list, db_template: this.state.db_template, db_text: this.state.db_text};\n\n        const rest_data = {rest_pk: this.state.rest_pk, rest_url: this.state.rest_url, metadata_list: this.state.metadata_list, rest_template: this.state.rest_template, rest_text: this.state.rest_text};\n\n        return (\n            <div>\n                <Dialog aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                        open={this.state.open}\n                        disableBackdropClick={true}\n                        disableEscapeKeyDown={true}\n                        fullWidth={true}\n                        maxWidth=\"lg\"\n                        onClose={this.handleCancel.bind(this)} >\n                    <DialogTitle id=\"alert-dialog-title\">{this.state.title}</DialogTitle>\n                    <div>\n                        <div>\n                            <Tabs value={this.state.selectedTab} onChange={(event, value)=> this.setState({selectedTab: value})}>\n                                <Tab label=\"general\" value=\"general\" style={styles.tab} />\n                                {this.state.crawlerType === \"file\" && <Tab label=\"file-crawler\" value=\"file crawler\" style={styles.tab} />}\n                                {this.state.crawlerType === \"web\" && <Tab label=\"web-crawler\" value=\"web crawler\" style={styles.tab} />}\n                                {this.state.crawlerType === \"database\" && <Tab label=\"database-crawler\" value=\"database crawler\" style={styles.tab} />}\n                                {this.state.crawlerType === \"restfull\" && <Tab label=\"restful-crawler\" value=\"RESTful crawler\" style={styles.tab} />}\n                                {(this.state.crawlerType === \"database\" || this.state.crawlerType === \"restfull\") && <Tab label=\"metadata\" value=\"metadata\" style={styles.tab} />}\n                                {this.state.crawlerType === \"office365\" && <Tab label=\"office 365-crawler\" value=\"office365 crawler\" style={styles.tab} />}\n                                {this.state.crawlerType === \"dropbox\" && <Tab label=\"dropbox-crawler\" value=\"dropbox crawler\" style={styles.tab} />}\n                                {this.state.crawlerType === \"wordpress\" && <Tab label=\"wordpress-crawler\" value=\"wordpress crawler\" style={styles.tab} />}\n                                {this.state.crawlerType === \"gdrive\" && <Tab label=\"gdrive-crawler\" value=\"google drive crawler\" style={styles.tab} />}\n                                {this.state.crawlerType === \"nfs\" && <Tab label=\"nfs-crawler\" value=\"nfs crawler\" style={styles.tab} />}\n                                {this.state.crawlerType !== \"wordpress\" && <Tab label=\"schedule\" value=\"schedule\" style={styles.tab} />}\n                            </Tabs>\n\n                            <div style={styles.formContent}>\n                                {t_value === 'general' &&\n                                                            <CrawlerGeneral\n                                                                sourceId={this.state.sourceId}\n                                                                nodeId={this.state.nodeId}\n                                                                organisation_id={this.state.organisation_id}\n                                                                kb_id={this.state.kb_id}\n                                                                name={this.state.name}\n                                                                filesPerSecond={this.state.filesPerSecond}\n                                                                crawlerType={this.state.crawlerType}\n                                                                deleteFiles={this.state.deleteFiles}\n                                                                allowAnonymous={this.state.allowAnonymous}\n                                                                enablePreview={this.state.enablePreview}\n                                                                processingLevel={this.state.processingLevel}\n                                                                maxItems={this.state.maxItems}\n                                                                maxBotItems={this.state.maxBotItems}\n                                                                error_title={this.state.crawler_error_title}\n                                                                schedule={this.state.schedule}\n                                                                error_msg={this.state.crawler_error_msg}\n                                                                onError={(title, errStr) => this.setError(title, errStr)}\n                                                                onSave={(crawler) => this.update_general_data(crawler)}/>\n                                }\n                                {t_value === 'file crawler' &&\n                                                            <CrawlerFile\n                                                                file_username={this.state.file_username}\n                                                                file_password={this.state.file_password}\n                                                                file_server={this.state.file_server}\n                                                                file_domain={this.state.file_domain}\n                                                                file_share_name={this.state.file_share_name}\n                                                                file_share_path={this.state.file_share_path}\n                                                                onError={(title, errStr) => this.setError(title, errStr)}\n                                                                onSave={(crawler) => this.update_control_data(crawler)}/>\n                                                            }\n                                {t_value === 'web crawler' &&\n                                                            <CrawlerWeb\n                                                                web_base_url={this.state.web_base_url}\n                                                                web_css={this.state.web_css}\n                                                                web_css_ignore={this.state.web_css_ignore}\n                                                                web_extension_filter={this.state.web_extension_filter}\n                                                                web_extension_filter_ignore={this.state.web_extension_filter_ignore}\n                                                                web_article_filter_incl_csv={this.state.web_article_filter_incl_csv}\n                                                                web_article_filter_excl_csv={this.state.web_article_filter_excl_csv}\n                                                                onError={(title, errStr) => this.setError(title, errStr)}\n                                                                onSave={(crawler) => this.update_control_data(crawler)}/>\n                                }\n                                {t_value === 'database crawler' &&\n                                                            <CrawlerDatabase\n                                                                db_username={this.state.db_username}\n                                                                db_password={this.state.db_password}\n                                                                db_jdbc={this.state.db_jdbc}\n                                                                db_type={this.state.db_type}\n                                                                db_query={this.state.db_query}\n                                                                db_pk={this.state.db_pk}\n                                                                metadata_list={this.state.metadata_list}\n                                                                db_template={this.state.db_template}\n                                                                db_text={this.state.db_text}\n                                                                onError={(title, errStr) => this.setError(title, errStr)}\n                                                                onSave={(crawler) => this.update_control_data(crawler)}/>\n                                }\n                                {t_value === 'RESTful crawler' &&\n                                    <CrawlerRestFull\n                                        rest_pk={this.state.rest_pk}\n                                        rest_url={this.state.rest_url}\n                                        metadata_list={this.state.metadata_list}\n                                        rest_template={this.state.rest_template}\n                                        rest_text={this.state.rest_text}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(crawler) => this.update_control_data(crawler)}/>\n                                }\n                                {t_value === 'metadata' && this.state.crawlerType === \"database\" &&\n                                    <CrawlerMetadataMapper\n                                        owner_data={db_data}\n                                        metadata_list={this.state.metadata_list}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(crawler) => this.update_control_data(crawler)}/>\n                                }\n                                {t_value === 'metadata' && this.state.crawlerType === \"restfull\" &&\n                                    <CrawlerMetadataMapper\n                                        owner_data={rest_data}\n                                        metadata_list={this.state.metadata_list}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(crawler) => this.update_control_data(crawler)}/>\n                                }\n                                {t_value === 'office365 crawler' &&\n                                                            <CrawlerOffice365\n                                                                tenantId={this.state.tenantId}\n                                                                clientId={this.state.clientId}\n                                                                clientSecret={this.state.clientSecret}\n                                                                redirectUrl={this.state.redirectUrl}\n                                                                crawlOneDrive={this.state.crawlOneDrive}\n                                                                crawlAllOfOneDrive={this.state.crawlAllOfOneDrive}\n                                                                oneDriveUsersToCrawl={this.state.oneDriveUsersToCrawl}\n                                                                crawlSharePoint={this.state.crawlSharePoint}\n                                                                crawlRootSite={this.state.crawlRootSite}\n                                                                sharePointSitesToCrawl={this.state.sharePointSitesToCrawl}\n                                                                crawlExchange={this.state.crawlExchange}\n                                                                crawlAllOfExchange={this.state.crawlAllOfExchange}\n                                                                exchangeUsersToCrawl={this.state.exchangeUsersToCrawl}\n                                                                onError={(title, errStr) => this.setError(title, errStr)}\n                                                                onSave={(crawler) => this.update_control_data(crawler)}/>\n                                }\n                                {t_value === 'dropbox crawler' &&\n                                    <CrawlerDropbox\n                                        clientToken={this.state.clientToken}\n                                        folderList={this.state.folderList}\n                                        userList={this.state.userList}\n                                        availableUserList={this.props.user_list}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(crawler) => this.update_control_data(crawler)}/>\n                                }\n                                {t_value === 'google drive crawler' &&\n                                    <CrawlerGDrive\n                                        gdrive_projectId={this.state.gdrive_projectId}\n                                        gdrive_clientId={this.state.gdrive_clientId}\n                                        gdrive_clientSecret={this.state.gdrive_clientSecret}\n                                        gdrive_clientName={this.state.gdrive_clientName}\n                                        gdrive_clientPort={this.state.gdrive_clientPort}\n                                        gdrive_userList={this.state.gdrive_userList}\n                                        availableUserList={this.props.user_list}\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(crawler) => this.update_control_data(crawler)}/>\n                                }\n                                {t_value === 'nfs crawler' &&\n                                <CrawlerNFS\n                                    nfs_local_folder={this.state.nfs_local_folder}\n                                    nfs_userList={this.state.nfs_userList}\n                                    availableUserList={this.props.user_list}\n                                    onError={(title, errStr) => this.setError(title, errStr)}\n                                    onSave={(crawler) => this.update_control_data(crawler)}/>\n                                }\n                                {t_value === 'wordpress crawler' &&\n                                    <CrawlerWordpress\n                                        source_id={this.state.sourceId}\n                                        organisation_id={this.props.organisation_id}\n                                        kb_id={this.props.kb_id}\n                                        wpUploadArchive={(data) => this.props.wpUploadArchive(data) }\n                                        onError={(title, errStr) => this.setError(title, errStr)}\n                                        onSave={(crawler) => this.update_control_data(crawler)}/>\n                                }\n                                {t_value === 'schedule' && this.state.crawlerType !== \"wordpress\" &&\n                                                            <div style={styles.timeTabContent}>\n                                                                <TimeSelect time={this.state.schedule}\n                                                                            onSave={(time) => this.updateSchedule(time)}/>\n                                                            </div>\n                                }\n                            </div>\n\n\n                            </div>\n                    </div>\n                    <DialogActions>\n                        <Button onClick={() => this.handleCancel()}>cancel</Button>\n                        <Button onClick={() => this.handleSave()}>save</Button>\n                    </DialogActions>\n\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default CrawlerDialog;\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nexport class CrawlerImportExport extends Component {\n    constructor(props) {\n        super(props);\n        var data = (props.crawler) ? JSON.stringify(props.crawler) : \"\";\n        if (data === \"{}\") {\n            data = \"\";\n        }\n        this.state = {\n            has_error: false,\n            open: props.open,\n            data: data,\n            onSave: props.onSave,\n            onError: props.onError,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            this.state.onSave(this.state.data);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        var data = (props.crawler) ? JSON.stringify(props.crawler) : \"\";\n        if (data === \"{}\") {\n            data = \"\";\n        }\n        this.setState({\n            open: props.open,\n            data: data,\n            onSave: props.onSave,\n            onError: props.onError,\n        })\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>mind-edit.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    open={this.state.open}\n                    fullWidth={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\">{this.props.export_upload ? \"Import Crawler\" : \"Export Crawler\"}</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>data</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                autoFocus={true}\n                                onChange={(event) => this.setState({data: event.target.value})}\n                                placeholder=\"crawler data\"\n                                variant=\"filled\"\n                                spellCheck={false}\n                                fullWidth={true}\n                                multiline={true}\n                                rows={10}\n                                value={this.state.data}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    {this.props.export_upload &&\n                    <div>\n                        <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                        <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.handleSave()}>Import</Button>\n                    </div>\n                    }\n                    {!this.props.export_upload &&\n                    <div>\n                        <Button color=\"primary\" onClick={() => this.handleCancel()}>Close</Button>\n                    </div>\n                    }\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default CrawlerImportExport;\n","import React, {Component} from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {CrawlerDialog} from '../crawlers/crawler-dialog'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport {Api} from \"../common/api\";\nimport MessageDialog from \"../common/message-dialog\";\nimport CrawlerImportExport from \"./crawler-import-export\";\n\nconst empty_crawler= {id: '', crawlerType: '', name: '', deleteFiles: true, allowAnonymous: true,\n                      enablePreview: true, enableIndexing: true, description: '', schedule: '',\n                      filesPerSecond: '0', specificJson: ''};\n\nconst styles = {\n    pageWidth: {\n        width: '900px',\n    },\n    tab: {\n        backgroundColor: '#f8f8f8',\n        color: '#000',\n    },\n    addImage: {\n        width: '25px',\n        cursor: 'pointer',\n        color: \"green\",\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n    },\n    label: {\n        marginTop: '20px',\n        color: '#555',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    linkButtonDisabled: {\n        float: 'left',\n        padding: '10px',\n        color: '#aaa',\n        cursor: 'not-allowed',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    download: {\n        cursor: 'pointer',\n        fontSize: '0.9em',\n        fontWeight: '600',\n        height: '24px',\n    },\n    downloadType: {\n        fontSize: '0.9em',\n        height: '24px',\n    },\n    downloadImage: {\n        width: '24px',\n    },\n    labelHeader: {\n        marginTop: '20px',\n        marginBottom: '5px',\n        fontSize: '0.8em',\n    },\n};\n\nexport class DocumentSources extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // pagination\n            page_size: 5,\n            page: 0,\n            // dialog\n            open: false,\n            export_open: false,\n            export_upload: false,\n            title: '',\n            selected_crawler: {},\n            crawler_ask: null,\n\n            // messages\n            message_callback: null,\n            message: '',\n            message_title: '',\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    getCrawlers() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        for (const i in this.props.crawler_list) {\n            if (i >= first && i < last) {\n                paginated_list.push(this.props.crawler_list[i]);\n            }\n        }\n        return paginated_list;\n    }\n    addNewCrawler() {\n        this.setState({open: true, selected_crawler: empty_crawler, title: 'Create New Crawler'});\n    }\n    onUpdate(crawler) {\n        this.setState({selected_crawler: crawler});\n    }\n    editCrawler(crawler) {\n        if (crawler) {\n            this.setState({open: true, selected_crawler: { ...empty_crawler, ...crawler}, title: 'Edit Crawler'});\n        }\n    }\n    deleteCrawlerAsk(crawler) {\n        this.setState({crawler_ask: crawler});\n        this.props.openDialog(\"are you sure you want to remove the crawler named <b>\" + crawler.name + \"</b>?\",\n            \"Remove Crawler\", (action) => { this.deleteCrawler(action) });\n    }\n    deleteCrawler(action) {\n        if (action && this.state.crawler_ask && this.state.crawler_ask.sourceId) {\n            this.props.deleteCrawler(this.state.crawler_ask.sourceId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    saveCrawler(crawler) {\n        if (crawler) {\n            crawler.organisationId = this.props.selected_organisation_id;\n            crawler.kbId = this.props.selected_knowledgebase_id;\n            this.props.updateCrawler(crawler);\n        }\n        this.setState({open: false});\n    }\n    deleteDocuments(crawler) {\n        this.setState({\n            message_callback: (action) => this.confirmDocumentsDelete(action, crawler),\n            message_title: 'remove all documents for \"' + crawler.name + '\"?',\n            message: 'Are you sure you want to remove ALL DOCUMENTS for <b>' + crawler.name + '</b>?'\n        });\n    }\n    confirmDocumentsDelete(action, crawler) {\n        const self = this;\n        this.setState({message: '', message_title: ''});\n        if (action && crawler) {\n            Api.deleteCrawlerDocuments(crawler.organisationId, crawler.kbId, crawler.sourceId,\n                (response) => {},\n                (err) => {\n                    self.props.setError(\"Error removing all documents\", err);\n                });\n        }\n    }\n    canDeleteDocuments(crawler) {\n        return crawler.crawlerType !== 'wordpress';\n    }\n    exportCrawler(crawler) {\n        this.setState({selected_crawler: crawler, export_upload: false, export_open: true})\n    }\n    importCrawler() {\n        this.setState({selected_crawler: {}, export_upload: true, export_open: true})\n    }\n    saveExport(crawler_str) {\n        if (crawler_str && this.state.export_upload) {\n            const crawler = JSON.parse(crawler_str);\n            delete crawler.sourceId;\n            this.saveCrawler(crawler);\n        }\n        this.setState({export_open: false, selected_crawler: {}});\n    }\n    render() {\n        return (\n            <div>\n                <CrawlerDialog\n                    open={this.state.open}\n                    title={this.state.title}\n                    organisation_id={this.props.selected_organisation_id}\n                    kb_id={this.props.selected_knowledgebase_id}\n                    user_list={this.props.user_list}\n                    onSave={(crawler) => this.saveCrawler(crawler)}\n                    onUpdate={(crawler) => this.onUpdate(crawler)}\n                    onError={(title, errStr) => this.props.setError(title, errStr)}\n                    error_title={this.props.error_title}\n                    error_msg={this.props.error}\n                    wpUploadArchive={(data) => this.props.wpUploadArchive(data) }\n                    crawler={this.state.selected_crawler}\n                />\n\n                <CrawlerImportExport\n                    open={this.state.export_open}\n                    upload={this.state.export_upload}\n                    crawler={this.state.selected_crawler}\n                    export_upload={this.state.export_upload}\n                    onSave={(crawler) => this.saveExport(crawler) }\n                    onError={(title, errStr) => this.props.setError(title, errStr)}\n                />\n\n                <MessageDialog callback={(action) => this.state.message_callback(action)}\n                               open={this.state.message.length > 0}\n                               message={this.state.message}\n                               title={this.state.message_title} />\n\n                {\n                    this.props.selected_knowledgebase_id.length > 0 &&\n                    <Paper style={styles.pageWidth}>\n                        <Table>\n                            <TableHead>\n                                <TableRow style={styles.tableHeaderStyle}>\n                                    <TableCell style={styles.tableHeaderStyle}>name</TableCell>\n                                    <TableCell style={styles.tableHeaderStyle}>type</TableCell>\n                                    <TableCell style={styles.tableHeaderStyle}>actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    this.getCrawlers().map((crawler) => {\n                                        return (\n                                            <TableRow key={crawler.sourceId}>\n                                                <TableCell>\n                                                    <div style={styles.label}>{crawler.name}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.label}>{crawler.crawlerType}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.linkButton} onClick={() => this.editCrawler(crawler)}>\n                                                        <img src=\"../images/edit.svg\" style={styles.downloadImage} title=\"edit crawler\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton}\n                                                         onClick={() => this.deleteDocuments(crawler)}>\n                                                        <img src=\"../images/delete-files.svg\"\n                                                             style={styles.downloadImage}\n                                                             title=\"remove a crawler's documents\"\n                                                             alt=\"remove documents\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton} onClick={() => this.deleteCrawlerAsk(crawler)}>\n                                                        <img src=\"../images/delete.svg\" style={styles.downloadImage} title=\"remove crawler\" alt=\"remove\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton} onClick={() => this.exportCrawler(crawler)}>\n                                                        <img src=\"../images/download.svg\" style={styles.downloadImage} title=\"get crawler JSON for export\" alt=\"export\"/>\n                                                    </div>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                }\n                                <TableRow>\n                                    <TableCell/>\n                                    <TableCell/>\n                                    <TableCell>\n                                        {this.props.selected_organisation_id.length > 0 &&\n                                            <div style={styles.imageButton} onClick={() => this.addNewCrawler()}><img\n                                                style={styles.addImage} src=\"../images/add.svg\" title=\"add new crawler\"\n                                                alt=\"add new crawler\"/></div>\n                                        }\n                                        {this.props.selected_organisation_id.length > 0 &&\n                                            <div style={styles.imageButton} onClick={() => this.importCrawler()}><img\n                                                style={styles.addImage} src=\"../images/upload.svg\" title=\"upload crawler JSON\"\n                                                alt=\"import\"/></div>\n                                        }\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.crawler_list.length}\n                            rowsPerPage={this.state.page_size}\n                            page={this.state.page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(event, page) => this.changePage(page)}\n                            onChangeRowsPerPage={(event) => this.changePageSize(event.target.value)}\n                        />\n\n                    </Paper>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        user_list: state.appReducer.user_list,\n        user_filter: state.appReducer.user_filter,\n        crawler_list: state.appReducer.crawler_list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(DocumentSources);\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {Api} from '../common/api'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Grid from \"@material-ui/core/Grid\";\n\n// display length of a url\nconst maxUrlDisplayLength = 50;\n\nconst styles = {\n    tableStyle: {\n        width: '900px',\n    },\n    gridWidth: {\n        width: '900px',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        width: '900px',\n        color: '#fff',\n        minWidth: '100px',\n    },\n    tableColumnStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '100px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    urlLabel: {\n        padding: '10px',\n        color: '#555',\n        maxWidth: '200px',\n    },\n    label: {\n        padding: '10px',\n        color: '#555',\n    },\n    statusImage: {\n        width: '16px',\n    },\n    hr: {\n        border: '0.1px solid #f0f0f0',\n        width: '100%',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        cursor: 'pointer',\n    },\n    linkButtonDisabled: {\n        float: 'left',\n        padding: '10px',\n        cursor: 'not-allowed',\n    },\n    dlImageSize: {\n        width: '24px',\n        marginRight: '10px',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    manualUploadSection: {\n        marginTop: '50px',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n    text: {\n        padding: '4px',\n        width: '280px',\n    },\n};\n\n\nexport class Documents extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            document: null,\n            crawler_map: {},\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n        let crawler_map = {};\n        for (const crawler of this.props.crawler_list) {\n            crawler_map[crawler.sourceId] = crawler.crawlerType;\n        }\n        this.setState({crawler_map: crawler_map});\n    }\n    deleteDocumentAsk(document) {\n        if (document) {\n            this.props.openDialog(\"are you sure you want to remove \\\"\" + document.url + \"\\\" ?\", \"Remove Document\", (action) => { this.deleteDocument(action) });\n            this.setState({document: document});\n        }\n    }\n    deleteDocument(action) {\n        if (action && Api.defined(this.state.document)) {\n            this.props.deleteDocument(this.state.document.url, this.state.document.sourceId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getDocuments();\n        }\n    }\n    documentUploaded() {\n        this.setState({message_title: \"done\", message: \"document uploaded\",\n            message_callback: () => { this.setState({message: \"\"})}});\n    }\n    getDocuments() {\n        return this.props.document_list;\n    }\n    static isWeb(url) {\n        return (url.toLowerCase().startsWith(\"http://\") || url.toLowerCase().startsWith(\"https://\"));\n    }\n    static adjustUrl(url) {\n        if (url && url.length > maxUrlDisplayLength) {\n            const half = Math.floor(maxUrlDisplayLength / 2);\n            return url.substring(0, half) + \" ... \" + url.substring(url.length - half);\n        }\n        return url;\n    }\n    // return: 0 => to do, 1 => done, 2 => disabled\n    getActive(document, stage) {\n        if (stage === \"crawled\") {\n            if (document.crawled > 0)\n                return 1;\n        } else if (stage === \"converted\") {\n            if (document.converted > 0)\n                return 1;\n            else if (document.converted < 0)\n                return 2;\n        } else if (stage === \"parsed\") {\n            if (document.converted > 0 && document.converted <= document.parsed)\n                return 1;\n            else if (document.parsed < 0)\n                return 2;\n        } else if (stage === \"indexed\") {\n            if (document.converted > 0 && document.parsed > 0 && document.parsed <= document.indexed)\n                return 1;\n            else if (document.indexed < 0)\n                return 2;\n        } else if (stage === \"previewed\") {\n            if (document.previewed > 0)\n                return 1;\n            else if (document.previewed < 0)\n                return 2;\n        }\n        return 0;\n    }\n    getStatus(document, stage) {\n        const status = this.getActive(document, stage);\n        if (status === 1)\n            return \"../images/dot-green.svg\";\n        else if (status === 0)\n            return \"../images/dot-orange.svg\";\n        else\n            return \"../images/dot-grey.svg\";\n    }\n    getStatusText(document, stage, staging) {\n        const status = this.getActive(document, stage);\n        if (status === 1)\n            return \"document \" + stage;\n        else if (status === 0)\n            return \"document not yet \" + stage;\n        else\n            return staging + \" disabled for this document-source\";\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    canDeleteDocument(document) {\n        return this.state.crawler_map[document.sourceId] !== 'wordpress';\n    }\n    render() {\n        return (\n            <Grid container spacing={1} style={styles.gridWidth}>\n\n                {\n                    this.isVisible() &&\n                    <Grid item xs={12}>\n                        <div style={styles.findBox}>\n                            <div style={styles.floatLeftLabel}>filter</div>\n                            <div style={styles.searchFloatLeft}>\n                                <input type=\"text\" value={this.props.document_filter} autoFocus={true} style={styles.text}\n                                       onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                       onChange={(event) => {\n                                           this.props.setDocumentFilter(event.target.value)\n                                       }}/>\n                            </div>\n                            <div style={styles.floatLeft}>\n                                <img style={styles.search}\n                                     onClick={() => this.props.getDocuments()}\n                                     src=\"../images/dark-magnifying-glass.svg\" title=\"filter\" alt=\"filter\"/>\n                            </div>\n                        </div>\n                    </Grid>\n                }\n\n\n                {\n                    this.isVisible() &&\n                    <Paper style={styles.tableStyle}>\n                        <Table>\n\n                            <TableHead>\n                                <TableRow style={styles.tableHeaderStyle}>\n                                    <TableCell style={styles.tableColumnStyle}>url</TableCell>\n                                    <TableCell style={styles.tableColumnStyle}>source</TableCell>\n                                    <TableCell style={styles.tableColumnStyle}>last modified</TableCell>\n                                    <TableCell style={styles.tableColumnStyle}>status</TableCell>\n                                    <TableCell style={styles.tableColumnStyle}>actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n\n                            <TableBody>\n                                {\n                                    this.getDocuments().map((document) => {\n                                        return (\n                                                <TableRow key={document.url}>\n                                                    <TableCell>\n                                                        {\n                                                            Documents.isWeb(document.url) &&\n                                                            <div style={styles.urlLabel}>\n                                                                <a href={document.url} title={document.url} rel=\"noopener noreferrer\" target=\"_blank\">{Documents.adjustUrl(document.url)}</a>\n                                                            </div>\n                                                        }\n                                                        {\n                                                            !Documents.isWeb(document.url) &&\n                                                            <div style={styles.label}>{Documents.adjustUrl(document.url)}</div>\n                                                        }\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{document.origin}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{Api.unixTimeConvert(document.lastModified)}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.label}>\n                                                            <img src={this.getStatus(document, \"crawled\")} style={styles.statusImage} alt=\"crawler\" title={this.getStatusText(document, \"crawled\", \"crawling\")} />\n                                                            <img src={this.getStatus(document, \"converted\")} style={styles.statusImage} alt=\"converted\" title={this.getStatusText(document, \"converted\", \"converting\")} />\n                                                            <img src={this.getStatus(document, \"parsed\")} style={styles.statusImage} alt=\"parsed\" title={this.getStatusText(document, \"parsed\", \"parsing\")} />\n                                                            <img src={this.getStatus(document, \"indexed\")} style={styles.statusImage} alt=\"indexed\" title={this.getStatusText(document, \"indexed\", \"indexing\")} />\n                                                            <img src={this.getStatus(document, \"previewed\")} style={styles.statusImage} alt=\"previewed\" title={this.getStatusText(document, \"previewed\", \"preview generation\")} />\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.linkButton}\n                                                             onClick={() => this.deleteDocumentAsk(document)}>\n                                                            <img src=\"../images/delete.svg\"\n                                                                 style={styles.dlImageSize} title=\"remove document\"\n                                                                 alt=\"remove\"/>\n                                                        </div>\n                                                        {/*<div style={styles.linkButton} onClick={() => this.props.reprocessDocument(document)}>*/}\n                                                        {/*    <img src=\"../images/refresh.svg\" style={styles.dlImageSize} title=\"reprocess document (remove it, re-parse and re-index the document.\" alt=\"reprocess\"/>*/}\n                                                        {/*</div>*/}\n                                                    </TableCell>\n                                                </TableRow>\n                                        )\n                                    })\n                                }\n                            </TableBody>\n                        </Table>\n\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.num_documents}\n                            rowsPerPage={this.props.document_page_size}\n                            page={this.props.document_page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(event, page) => this.props.setDocumentPage(page)}\n                            onChangeRowsPerPage={(event) => this.props.setDocumentPageSize(event.target.value)}\n                        />\n\n                    </Paper>\n                }\n\n                <br />\n                <br />\n                <br />\n                <br />\n\n                {/*{this.props.selected_knowledgebase_id &&*/}\n                {/*    <div style={styles.manualUploadSection}>*/}\n                {/*        <div>manually upload a document</div>*/}\n                {/*        <div>*/}\n                {/*            <DocumentUpload kbId={this.props.selected_knowledgebase_id}*/}\n                {/*                            organisationId={this.props.selected_organisation_id}*/}\n                {/*                            onUploadDone={() => this.documentUploaded()}*/}\n                {/*                            onError={(errStr) => this.props.setError(\"Error\", errStr)}/>*/}\n                {/*        </div>*/}\n                {/*    </div>*/}\n                {/*}*/}\n\n            </Grid>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        document_list: state.appReducer.document_list,\n        document_filter: state.appReducer.document_filter,\n        document_page: state.appReducer.document_page,\n        document_page_size: state.appReducer.document_page_size,\n        document_nav_list: state.appReducer.document_nav_list,\n        num_documents: state.appReducer.num_documents,\n\n        crawler_list: state.appReducer.crawler_list,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Documents);\n\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst image_types = [\".jpg\", \".jpeg\", \".png\", \".gif\", \".svg\"];\n\nexport class MindEdit extends Component {\n    constructor(props) {\n        super(props);\n        const expression = props.mindItem && props.mindItem.expression ? props.mindItem.expression : \"\";\n        let question1 = \"\";\n        let question2 = \"\";\n        if (expression.indexOf(\"||\") >= 0) {\n            question1 = expression.split(\"||\")[0];\n            question2 = expression.split(\"||\")[1];\n        } else {\n            question1 = expression;\n        }\n        this.state = {\n            has_error: false,\n            open: props.open,\n            mindItem: props.mindItem,\n            onSave: props.onSave,\n            onError: props.onError,\n            question1: question1,\n            question2: question2,\n            answer: MindEdit.getAnswerText(props.mindItem),\n            links: MindEdit.getLinks(props.mindItem),\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            const mi = this.state.mindItem;\n            mi.expression = this.state.question1;\n            if (this.state.question2.trim().length > 0) {\n                mi.expression = mi.expression + \" || \" + this.state.question2;\n            }\n            mi.actionList = MindEdit.createActions(this.state.answer, this.state.links);\n            this.state.onSave(mi);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        const expression = props.mindItem && props.mindItem.expression ? props.mindItem.expression : \"\";\n        let question1 = \"\";\n        let question2 = \"\";\n        if (expression.indexOf(\"||\") >= 0) {\n            question1 = expression.split(\"||\")[0];\n            question2 = expression.split(\"||\")[1];\n        } else {\n            question1 = expression;\n        }\n        this.setState({\n            open: props.open,\n            mindItem: props.mindItem,\n            onSave: props.onSave,\n            onError: props.onError,\n            question1: question1,\n            question2: question2,\n            answer: MindEdit.getAnswerText(props.mindItem),\n            links: MindEdit.getLinks(props.mindItem),\n        })\n    }\n    static createActions(answer, links_text) {\n        const actions = [];\n        if (answer.length > 0) {\n            // special user/custom commands?\n            if (answer.trim().indexOf(\"exec \") === 0) {\n                const commands = answer.split(\"\\n\");\n                for (let cmd of commands) {\n                    const parts = cmd.trim().split(\" \");\n                    if (parts.length > 1 && parts[0] === \"exec\") {\n                        const parameters = [];\n                        for (let i = 2; i < parts.length; i += 1) {\n                            if (parts[i].trim().length > 0) {\n                                parameters.push(parts[i].trim());\n                            }\n                        }\n                        actions.push({\"action\": parts[1], parameters: parameters});\n                    }\n                }\n            } else {\n                actions.push({\"action\": \"browser.write\", parameters: [answer.replace(/\\n/g, \"<br />\")]});\n            }\n        }\n        const links = links_text.split(\",\");\n        for (const link of links) {\n            const l = link.trim();\n            if (l.length > 0) {\n                const l_lwr = link.toLowerCase();\n                let is_image = false;\n                for (const extn of image_types) {\n                    if (l_lwr.indexOf(extn) > 0) {\n                        is_image = true;\n                    }\n                }\n                if (is_image) {\n                    actions.push({\"action\": \"browser.image\", parameters: [l]});\n                } else {\n                    actions.push({\"action\": \"browser.url\", parameters: [l]});\n                }\n            }\n        }\n        return actions;\n    }\n    static getAnswerText(mindItem) {\n        let str = \"\";\n        if (mindItem && mindItem.actionList) {\n            // val BROWSER_WRITE = \"browser.write\"\n            // val BROWSER_URL = \"browser.url\"\n            // val BROWSER_IMAGE = \"browser.image\"\n            // val BROWSER_SAY = \"browser.say\"\n            for (const action of mindItem.actionList) {\n                if (action) {\n                    if (action.action === \"browser.write\" && action.parameters) {\n                        for (const param of action.parameters) {\n                            str = str + param.replace(/<br \\/>/g, \"\\n\");\n                        }\n\n                        // user custom command?\n                    } else if (action.action !== \"browser.image\" && action.action !== \"browser.url\" && action.action !== \"browser.say\") {\n                        str = str + \"exec \" + action.action;\n                        for (const param of action.parameters) {\n                            str += \" \";\n                            str += param;\n                        }\n                        str += \"\\n\";\n                    }\n                }\n            }\n        }\n        return str;\n    }\n    static getLinks(mindItem) {\n        let str = \"\";\n        if (mindItem && mindItem.actionList) {\n            for (const action of mindItem.actionList) {\n                if (action && action.action === \"browser.image\" && action.parameters) {\n                    if (str.length > 0) {\n                        str += \",\\n\";\n                    }\n                    for (const param of action.parameters) {\n                        str = str + param.replace(/<br \\/>/g, \"\\n\");\n                    }\n                }\n                if (action && action.action === \"browser.url\" && action.parameters) {\n                    if (str.length > 0) {\n                        str += \",\\n\";\n                    }\n                    for (const param of action.parameters) {\n                        str = str + param.replace(/<br \\/>/g, \"\\n\");\n                    }\n                }\n            }\n        }\n        return str;\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>mind-edit.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    open={this.state.open}\n                    fullWidth={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\">Edit Mind Item</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>question</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                autoFocus={true}\n                                onChange={(event) => this.setState({question1: event.target.value})}\n                                placeholder=\"question\"\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.question1}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>alternative</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                onChange={(event) => this.setState({question2: event.target.value})}\n                                placeholder=\"alternative question (optional)\"\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.question2}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>answer text</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                onChange={(event) => this.setState({answer: event.target.value})}\n                                placeholder=\"answer, or function (e.g. 'exec show_help person1 person2 date1')\"\n                                multiline={true}\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.answer}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>links (csv)</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                onChange={(event) => this.setState({links: event.target.value})}\n                                placeholder=\"links\"\n                                multiline={true}\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.links}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.handleSave()}>Save</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default MindEdit;\n","import React, {Component} from 'react';\nimport Button from \"@material-ui/core/Button\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nconst styles = {\n    uploadContainer: {\n        margin: '10px',\n        width: '450px',\n        minWidth: '450px',\n        height: '20px',\n        // border: '1px solid lightgray',\n        borderRadius: '15px',\n        padding: '12px',\n        marginLeft: '10px',\n        background: 'white',\n        fontWeight: 700,\n        fontSize: '10pt',\n        cursor: 'pointer',\n    },\n    formWidth: {\n    },\n    uploadControl: {\n        marginTop: '5px',\n        float: 'left',\n    },\n    uploadButton: {\n        float: 'left',\n        height: '30px',\n    },\n    busyImage: {\n        width: '28px',\n        height: '28px',\n        marginTop: '-10px',\n        float: 'left',\n    },\n    uploadInput: {\n        float: 'left',\n    },\n    uploadWheel: {\n        marginLeft: '5px',\n        marginTop: '14px',\n        height: '28px',\n        float: 'left',\n    },\n};\n\nexport class ProgramUpload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filename: '',\n            file_type: '',\n            filter: '',\n            binary_data: null,\n        };\n    }\n\n    _handleImageChange(e) {\n        e.preventDefault();\n\n        const self = this;\n        const reader = new FileReader();\n        const file = e.target.files[0];\n        const filename = file['name'];\n        const file_type = file['type'];\n\n        reader.onloadend = () => {\n            self.setState({\n                filename: filename,\n                file_type: file_type,\n                binary_data: reader.result\n            });\n        };\n        reader.readAsDataURL(file)\n    }\n\n    upload() {\n        if (this.state.binary_data) {\n            const payload = {\n                base64Text: this.state.binary_data,\n                fileType: this.state.file_type,\n                kbId: this.props.selected_knowledgebase_id,\n                organisationId: this.props.selected_organisation_id,\n            };\n            this.props.uploadProgram(payload);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(e) => this._handleSubmit(e)} style={styles.uploadContainer}>\n                    <div style={styles.formWidth}>\n                        <input style={styles.uploadControl}\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                        <div style={styles.uploadButton}>\n                            <div style={styles.uploadInput}>\n                                <Button variant='contained'\n                                        color='primary'\n                                        style={styles.uploadButton}\n                                        disabled={this.state.binary_data === null || this.props.uploading}\n                                        onClick={this.upload.bind(this)}>upload</Button>\n                                {this.props.uploading &&\n                                <div style={styles.uploadWheel}><img src=\"../images/busy2.gif\" alt=\"busy\" style={styles.busyImage}/></div>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        uploading: state.appReducer.uploading,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(ProgramUpload);\n\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {Api} from '../common/api'\nimport {MindEdit} from \"./mind-edit\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport ProgramUpload from \"../common/program-upload\";\nimport Button from \"@material-ui/core/Button\";\nimport Comms from \"../common/comms\";\n\n\nconst styles = {\n    tableStyle: {\n        minWidth: '900px',\n        width: '900px',\n    },\n    smallTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '20px',\n    },\n    actionTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '100px',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '400px',\n        width: '600px',\n    },\n    searchTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '200px',\n        width: '340px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    label: {\n        padding: '10px',\n        color: '#555',\n    },\n    queryMindLabel: {\n        marginTop: '12px',\n        padding: '10px',\n        color: '#555',\n        float: 'right',\n    },\n    gridWidth: {\n        width: '900px',\n    },\n    hr: {\n        border: '0.1px solid #f0f0f0',\n        width: '100%',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    text: {\n        padding: '4px',\n        width: '280px',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    manualUploadSection: {\n        marginTop: '50px',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n    spacer: {\n        marginTop: '20px',\n    },\n    uploader: {\n        marginTop: '-20px',\n        float: 'left',\n    },\n    export: {\n        float: 'left',\n    }\n};\n\n\nexport class Mind extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mind_item: null,\n            mind_edit: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n    }\n    deleteMindItemAsk(mindItem) {\n        if (mindItem) {\n            this.props.openDialog(\"are you sure you want to remove id \" + mindItem.id + \"?<br/><br/>(\" + mindItem.expression + \")\",\n                                    \"Remove Mind Entry\", (action) => { this.deleteMindItem(action) });\n            this.setState({mind_item: mindItem});\n        }\n    }\n    deleteMindItem(action) {\n        if (action && Api.defined(this.state.mind_item)) {\n            this.props.deleteMindItem(this.state.mind_item.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    deleteAllMindItemsAsk() {\n        this.props.openDialog(\"are you sure you want to remove all mind-items of this knowledge-base?\",\n            \"Remove All Mind Items\", (action) => { this.deleteAllMindItems(action) });\n    }\n    deleteAllMindItems(action) {\n        if (action) {\n            this.props.deleteAllMindItems();\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getMindItems();\n        }\n    }\n    static toAnswer(mindItem) {\n        let str = \"\";\n        if (mindItem && mindItem.actionList) {\n            for (const action of mindItem.actionList) {\n                if (action && action.action === \"browser.write\" && action.parameters) {\n                    for (const param of action.parameters) {\n                        str = str + param.replace(/<br \\/>/g, \"\\n\");\n                    }\n                }\n            }\n        }\n        return str;\n    }\n    editMindItem(mindItem) {\n        this.setState({mind_edit: true, mind_item: mindItem});\n    }\n    newMindItem() {\n        this.setState({mind_edit: true, mind_item: {\n                id: '',\n                preContext: \"\",\n                postContext: \"\",\n                expression: \"\",\n                actionList: [],\n                metadata: \"\"\n            }\n            });\n    }\n    mindDump() {\n        window.open(Comms.get_mind_dump_url(this.props.selected_organisation_id, this.props.selected_knowledgebase_id), '_blank');\n    }\n    save(mindItem) {\n        if (mindItem) {\n            if (mindItem.expression.length > 0 && mindItem.actionList.length > 0) {\n                this.props.saveMindItem(mindItem);\n                this.setState({mind_edit: false});\n            } else {\n                this.props.setError(\"Error Saving Mind Entry\", \"mind-item must have an expression and actions\");\n            }\n        } else {\n            this.setState({mind_edit: false});\n        }\n    }\n    getMindItemList() {\n        if (this.props.mind_item_list) {\n            return this.props.mind_item_list;\n        }\n        return [];\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        return (\n            <div>\n               <MindEdit open={this.state.mind_edit}\n                         mindItem={this.state.mind_item}\n                         onSave={(item) => this.save(item)}\n                         onError={(err) => this.props.setError(\"Error\", err)} />\n\n                {\n                    this.isVisible() &&\n\n                    <div style={styles.findBox}>\n                        <div style={styles.floatLeftLabel}>find items in the mind</div>\n                        <div style={styles.searchFloatLeft}>\n                            <input type=\"text\" value={this.props.mind_item_filter} autoFocus={true} style={styles.text}\n                                   onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setMindItemFilter(event.target.value)\n                                   }}/>\n                        </div>\n                        <div style={styles.floatLeft}>\n                            <img style={styles.search}\n                                 onClick={() => this.props.getMindItems()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"search\" alt=\"search\"/>\n                        </div>\n                    </div>\n                }\n                <br clear=\"both\" />\n\n                {\n                    this.isVisible() &&\n\n                    <Paper>\n                        <Table style={styles.tableStyle}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell style={styles.smallTableHeaderStyle}>id</TableCell>\n                                    <TableCell style={styles.tableHeaderStyle}>expression</TableCell>\n                                    <TableCell style={styles.actionTableHeaderStyle}>actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    this.getMindItemList().map((mindItem) => {\n                                        return (\n                                            <TableRow key={mindItem.id}>\n                                                <TableCell>\n                                                    <div style={styles.label}>{mindItem.id}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.label} title={Mind.toAnswer(mindItem)}>{mindItem.expression}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.linkButton} onClick={() => this.editMindItem(mindItem)}>\n                                                        <img src=\"../images/edit.svg\" style={styles.dlImageSize} title=\"edit mind-item\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton} onClick={() => this.deleteMindItemAsk(mindItem)}>\n                                                        <img src=\"../images/delete.svg\" style={styles.dlImageSize} title=\"remove mind-item\" alt=\"remove\"/>\n                                                    </div>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                }\n                                <TableRow>\n                                    <TableCell colSpan={3}>\n                                        {this.props.selected_knowledgebase_id.length > 0 &&\n                                            <div style={styles.uploader}>\n                                                <ProgramUpload kbId={this.props.selected_knowledgebase_id}\n                                                               organisationId={this.props.selected_organisation_id}\n                                                               onUploadDone={() => this.programUploaded()}\n                                                               onError={(errStr) => this.props.setError(\"Error\", errStr)}/>\n                                            </div>\n                                        }\n                                        {this.props.selected_knowledgebase_id.length > 0 &&\n                                            <div style={styles.export}>\n                                                <Button color=\"primary\" variant=\"outlined\" style={styles.exportButton}\n                                                        onClick={() => this.mindDump()}>Export</Button>\n\n                                            </div>\n                                        }\n                                        {this.props.selected_knowledgebase_id.length > 0 &&\n                                        <div style={styles.imageButton} onClick={() => this.newMindItem()}><img\n                                            style={styles.addImage} src=\"../images/add.svg\" title=\"new mind item\"\n                                            alt=\"new mind item\"/></div>\n                                        }\n                                        {this.props.selected_knowledgebase_id.length > 0 &&\n                                            <div style={styles.imageButton} onClick={() => this.deleteAllMindItemsAsk()}><img\n                                                style={styles.addImage} src=\"../images/delete.svg\" title=\"remove all mind items of this knowledgebase\"\n                                                alt=\"remove all mind items\"/></div>\n                                        }\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.num_mind_items}\n                            rowsPerPage={this.props.mind_item_page_size}\n                            page={this.props.mind_item_page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(event, page) => this.props.setMindItemPage(page)}\n                            onChangeRowsPerPage={(event) => this.props.setMindItemPageSize(event.target.value)}\n                        />\n\n                    </Paper>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        mind_item_list: state.appReducer.mind_item_list,\n        mind_item_filter: state.appReducer.mind_item_filter,\n        mind_item_page: state.appReducer.mind_item_page,\n        mind_item_page_size: state.appReducer.mind_item_page_size,\n        num_mind_items: state.appReducer.num_mind_items,\n\n        bot_query: state.appReducer.bot_query,\n        bot_query_result_list: state.appReducer.bot_query_result_list,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Mind);\n\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport {Api} from './api'\n\nconst styles = {\n    searchResult: {\n        marginLeft: '80px',\n    },\n    searchMessage: {\n    },\n    searchFooter: {\n        float: 'left',\n    },\n    searchInsideNav: {\n        marginTop: '5px',\n        marginLeft: '2px',\n        marginRight: '10px',\n        float: 'left',\n    },\n    insideNavButtonStyle: {\n        width: '16px',\n        float: 'left',\n        backgroundColor: '#d0d0d0',\n        marginRight: '3px',\n        padding: '2px',\n        color: '#808080',\n        borderRadius: '2px',\n        cursor: 'pointer',\n        webkitUserSelect: 'none',\n        mozUserSelect: 'none',\n        msUserSelect: 'none',\n        userSelect: 'none',\n    },\n    insideNavButtonStyleDisabled: {\n        width: '16px',\n        float: 'left',\n        backgroundColor: '#d0d0d030',\n        marginRight: '3px',\n        padding: '2px',\n        color: '#80808030',\n        borderRadius: '2px',\n        cursor: 'arrow',\n        webkitUserSelect: 'none',\n        mozUserSelect: 'none',\n        msUserSelect: 'none',\n        userSelect: 'none',\n    },\n    tinmanContainer: {\n        float: 'left',\n        width: '80%',\n    },\n    tinmanLeft: {\n        float: 'left',\n    },\n    tinmanScore: {\n        fontSize: '0.8em',\n    },\n    tinmanText: {\n        fontSize: '0.9em',\n    },\n    tinmanImageSize: {\n        width: '50px',\n        height: '50px',\n    },\n    imageBox: {\n        float: 'left',\n        marginTop: '20px',\n    },\n    imageHolder: {\n        float: 'left',\n        marginRight: '5px',\n    },\n    imageSize: {\n        maxWidth: '150px',\n        maxHeight: '150px',\n        borderRadius: '5px',\n    },\n    urlBox: {\n        marginTop: '5px',\n        float: 'left',\n    },\n    urlStyle: {\n        float: 'left',\n        fontSize: '0.8em',\n        color: '#009',\n        marginRight: '10px',\n        marginLeft: '70px',\n        cursor: 'pointer',\n    },\n    graph_size: {\n        width: '600px',\n    },\n    spacer: {\n        height: '10px',\n    }\n};\n\n\nexport class BotSingleSearchResult extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            has_error: false,\n            item: props.item,\n            openDocument: props.openDocument,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // see if we have data to start this dialog\n        if (nextProps) {\n            this.setState({\n                item: nextProps.item,\n                openDocument: nextProps.openDocument,\n            })\n        }\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    static highlight(str) {\n        if (str && str.replace) {\n            str = str.replace(/{hl1:}/g, \"<span class='hl1'>\");\n            str = str.replace(/{hl2:}/g, \"<span class='hl2'>\");\n            str = str.replace(/{hl3:}/g, \"<span class='hl3'>\");\n            str = str.replace(/{:hl1}/g, \"</span>\");\n            str = str.replace(/{:hl2}/g, \"</span>\");\n            str = str.replace(/{:hl3}/g, \"</span>\");\n            str = str.replace(/\\n/g, \"<br />\");\n        }\n        return str;\n    }\n\n    static setupGraph(list, x_name, y_name) {\n        if (list && list.length) {\n            let labels = [];\n            let values = [];\n            for (let i = 0; i < list.length; i++) {\n                const item = list[i];\n                if (item[x_name] && item[y_name]) {\n                    labels.push(item[x_name].toFixed(2));\n                    values.push(item[y_name]);\n                }\n            }\n            return {\n                labels: labels,\n                datasets: [\n                    {\n                        label: \"data\",\n                        fill: false,\n                        lineTension: 0.1,\n                        backgroundColor: 'rgba(192,75,75,0.4)',\n                        borderColor: 'rgba(192,75,75,1)',\n                        pointBackgroundColor: '#fff',\n                        pointBorderColor: 'rgba(192,75,75,1)',\n                        pointHoverBackgroundColor: 'rgba(192,75,75,1)',\n                        pointHoverBorderColor: 'rgba(220,220,220,1)',\n                        borderCapStyle: 'butt',\n                        borderDash: [],\n                        borderDashOffset: 0.0,\n                        borderJoinStyle: 'miter',\n                        pointBorderWidth: 1,\n                        pointHoverRadius: 5,\n                        pointHoverBorderWidth: 2,\n                        pointRadius: 1,\n                        pointHitRadius: 10,\n                        data: values\n                    }\n                ]\n            };\n        }\n        return {labels: []};\n    }\n\n    static updateResults(queryResultList) {\n        if (queryResultList) {\n            queryResultList.map((item, i) => {\n                if (item) {\n                    item.imageList = [];\n                    item.urlList = [];\n                    item.sayList = [];\n                    item.graphList = [];\n                    const text_list = [];\n                    if (item.actionList && item.actionList.length > 0) {\n\n                        const actions = item.actionList;\n                        for (let i = 0; i < actions.length; i++) {\n                            const action = actions[i];\n                            if (action['action'] === 'browser.write') {\n                                for (let j = 0; j < action['parameters'].length; j++) {\n                                    const param = action['parameters'][j];\n                                    text_list.push(param);\n                                }\n                            }\n                            else if (action['action'] === 'browser.say') {\n                                for (let j = 0; j < action['parameters'].length; j++) {\n                                    const param = action['parameters'][j];\n                                    item.sayList.push(param);\n                                }\n                            }\n                            else if (action['action'] === 'browser.image') {\n                                for (let j = 0; j < action['parameters'].length; j++) {\n                                    const param = action['parameters'][j];\n                                    item.imageList.push(param);\n                                }\n                            }\n                            else if (action['action'] === 'browser.url') {\n                                for (let j = 0; j < action['parameters'].length; j++) {\n                                    const param = action['parameters'][j];\n                                    item.urlList.push(param);\n                                }\n                            }\n                            else { // custom user command\n                                text_list.push(action['action']);\n                                text_list.push(\"(\");\n                                for (let j = 0; j < action['parameters'].length; j++) {\n                                    if (j > 0) {\n                                        text_list.push(\",\");\n                                    }\n                                    const param = action['parameters'][j];\n                                    if (item.context && item.context[param] !== undefined) {\n                                        text_list.push(item.context[param]);\n                                    } else {\n                                        text_list.push(param);\n                                    }\n                                }\n                                text_list.push(\")\\n\");\n                            }\n                        }\n                        item.display = text_list.join(' ');\n\n                        // context?\n                        if (item.context) {\n                            const list = [];\n                            Object.keys(item.context).forEach(function(key) {\n                                const value = item.context[key];\n                                list.push(key + ' = ' + value);\n                            });\n                            if (list.length > 0) {\n                                item.display += \"context: {\" + list.join(', ') + \"}\"\n                            }\n                        }\n\n                    } else { // nothing?\n                        item.display = '';\n                    }\n                    item.key = Api.createGuid(); // uid\n                    item.index = 0; // index of the text used for multi-text search results\n                }\n                return item;\n            })\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>bot-single-search-result: Something went wrong.</h1>;\n        }\n        const item = this.state.item;\n        return (\n            <Grid container spacing={0} style={styles.gridWidth}>\n                <Grid item xs={1}>\n                    <div style={styles.tinmanScore}>{item.score.toFixed(2)}</div>\n                </Grid>\n                <Grid item xs={11}>\n                    <div style={styles.tinmanText} dangerouslySetInnerHTML={{__html: BotSingleSearchResult.highlight(item.display)}}/>\n                </Grid>\n                <Grid item xs={12}>\n                    {\n                        item.imageList.map((image) => {\n                            return (<div key={image} style={styles.imageHolder}><img alt=\"search result\" src={image} style={styles.imageSize} /></div>);\n                        })\n                    }\n                </Grid>\n                <Grid item xs={12}>\n                    {\n                        item.urlList.map((url) => {\n                            return (<div style={styles.urlStyle} key={url}><a href={url} rel=\"noopener noreferrer\" target={\"_blank\"}>{url}</a></div>);\n                        })\n                    }\n                </Grid>\n                <Grid item xs={12}>\n                    <div style={styles.spacer}>&nbsp;</div>\n                </Grid>\n            </Grid>\n        )\n    }\n\n}\n\nexport default BotSingleSearchResult;\n\n","import React, {Component} from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport Comms from '../common/comms'\nimport BotSingleSearchResult from '../common/bot-single-search-result'\n\n// styles of form\nconst styles = {\n    busyBox: {\n        float: 'left',\n        marginLeft: '10px',\n        marginRight: '5px',\n        marginTop: '15px',\n        width: '32px',\n    },\n    searchTextBox: {\n        marginBottom: 16,\n        width: '400px',\n        float: 'left',\n    },\n    searchButtonBox: {\n        marginTop: '20px',\n        marginLeft: '20px',\n        float: 'left',\n    },\n    searchResultsBox: {\n        padding: '10px',\n        borderRadius: '4px',\n        border: '0.5px solid #ccc'\n    }\n};\n\n\nexport class MindSearchComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            onError: props.onError,\n\n            botQuery: props.botQuery, // callback functions\n            setBotQueryString: props.setBotQueryString,\n\n            // search system\n            botQueryString: props.botQueryString,\n            // results\n            queryResultList: props.queryResultList,\n            // a result list if applicable after asking\n            hasSearched: false,\n        };\n\n    }\n    componentDidCatch(error, info) {\n        this.props.onError(error, info);\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            botQueryString: nextProps.botQueryString,\n            queryResultList: nextProps.queryResultList,\n            setBotQueryString: nextProps.setBotQueryString,\n            botQuery: nextProps.botQuery,\n            onError: nextProps.onError,\n        })\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.doClickSearch();\n        }\n    }\n    doClickSearch() {\n        if (this.props.botQuery) {\n            this.setState({hasSearched: true});\n            this.props.botQuery();\n        }\n    }\n    getResultList() {\n        const copy = JSON.parse(JSON.stringify(this.props.queryResultList));\n        BotSingleSearchResult.updateResults(copy);\n        return copy;\n    }\n    openDocument(url) {\n        const session_id = Comms.getSession();\n        const window_url = Comms.toUrl('/document/' + encodeURIComponent(session_id) + '/' + encodeURIComponent(url));\n        window.open(window_url, \"_blank\");\n    }\n    render() {\n        return (\n            <div>\n                <div style={styles.busyBox}>\n                    <img alt=\"busy\" src=\"../images/busy2.gif\"\n                         style={{'display': this.state.busy ? '' : 'none', width: '32px'}}/>\n                </div>\n                <div style={styles.searchTextBox}>\n                    <TextField\n                        onChange={(event) => this.props.setBotQueryString(event.target.value)}\n                        onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                        label=\"test the mind by asking it something\"\n                        fullWidth={true}\n                        value={this.props.botQueryString}\n                    />\n                </div>\n                <div style={styles.searchButtonBox}>\n                    <Button variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={() => this.doClickSearch()}>\n                        Ask\n                    </Button>\n                </div>\n\n                <div style={{clear: 'both'}}/>\n                <br/>\n\n                {this.state.queryResultList && this.state.queryResultList.length > 0 &&\n                <div>\n                    <div style={styles.searchResultsBox}>\n                        {\n                            this.getResultList().map((item) => {\n                                return (<BotSingleSearchResult key={item.key} item={item} openDocument={(url) => this.openDocument(url)} />)\n                            })\n                        }\n                    </div>\n\n                </div>\n                }\n\n                {\n                    this.state.queryResultList && this.state.queryResultList.length === 0 && this.state.hasSearched &&\n                    <div>no results</div>\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default MindSearchComponent;\n","import React from 'react';\n\nimport {Api} from '../common/api'\nimport Grid from \"@material-ui/core/Grid\";\nimport {MindSearchComponent} from \"./mind-search-component\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Comms from \"../common/comms\";\n\n\nconst styles = {\n    gridWidth: {\n        width: '900px',\n    },\n    queryMindLabel: {\n        marginTop: '12px',\n        padding: '10px',\n        color: '#555',\n        float: 'right',\n    },\n};\n\n\nexport class MindTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mind_item: null,\n            mind_edit: false,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n    }\n    deleteMindItemAsk(mindItem) {\n        if (mindItem) {\n            this.props.openDialog(\"are you sure you want to remove id \" + mindItem.id + \"?<br/><br/>(\" + mindItem.expression + \")\",\n                                    \"Remove Mind Entry\", (action) => { this.deleteMindItem(action) });\n            this.setState({mind_item: mindItem});\n        }\n    }\n    deleteMindItem(action) {\n        if (action && Api.defined(this.state.mind_item)) {\n            this.props.deleteMindItem(this.state.mind_item.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    deleteAllMindItemsAsk() {\n        this.props.openDialog(\"are you sure you want to remove all mind-items of this knowledge-base?\",\n            \"Remove All Mind Items\", (action) => { this.deleteAllMindItems(action) });\n    }\n    deleteAllMindItems(action) {\n        if (action) {\n            this.props.deleteAllMindItems();\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getMindItems();\n        }\n    }\n    static toAnswer(mindItem) {\n        let str = \"\";\n        if (mindItem && mindItem.actionList) {\n            for (const action of mindItem.actionList) {\n                if (action && action.action === \"browser.write\" && action.parameters) {\n                    for (const param of action.parameters) {\n                        str = str + param.replace(/<br \\/>/g, \"\\n\");\n                    }\n                }\n            }\n        }\n        return str;\n    }\n    editMindItem(mindItem) {\n        this.setState({mind_edit: true, mind_item: mindItem});\n    }\n    newMindItem() {\n        this.setState({mind_edit: true, mind_item: {\n                id: Api.createGuid(),\n                preContext: \"\",\n                postContext: \"\",\n                expression: \"\",\n                actionList: [],\n                metadata: \"\"\n            }\n            });\n    }\n    mindDump() {\n        window.open(Comms.get_mind_dump_url(this.props.selected_organisation_id, this.props.selected_knowledgebase_id), '_blank');\n    }\n    save(mindItem) {\n        if (mindItem) {\n            if (mindItem.expression.length > 0 && mindItem.actionList.length > 0) {\n                this.props.saveMindItem(mindItem);\n                this.setState({mind_edit: false});\n            } else {\n                this.props.setError(\"Error Saving Mind Entry\", \"mind-item must have an expression and actions\");\n            }\n        } else {\n            this.setState({mind_edit: false});\n        }\n    }\n    getMindItemList() {\n        if (this.props.mind_item_list) {\n            return this.props.mind_item_list;\n        }\n        return [];\n    }\n    render() {\n        return (\n            <div>\n\n                <Grid container spacing={1} style={styles.gridWidth}>\n\n                    {this.props.selected_knowledgebase_id &&\n                    <Grid item xs={12}>\n                        <MindSearchComponent onError={(title, err) => this.props.setError(title, err)}\n                                             botQuery={this.props.botQuery}\n                                             botQueryString={this.props.bot_query}\n                                             setBotQueryString={this.props.setBotQueryString}\n                                             queryResultList={this.props.bot_query_result_list} />\n                    </Grid>\n                    }\n\n                </Grid>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        bot_query: state.appReducer.bot_query,\n        bot_query_result_list: state.appReducer.bot_query_result_list,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(MindTest);\n\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nexport class SynonymEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            synonym: props.synonym,\n            onSave: props.onSave,\n            onError: props.onError,\n            words: props.synonym && props.synonym.words ? props.synonym.words : \"\",\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            const syn = this.state.synonym;\n            syn.words = this.state.words;\n            this.state.onSave(syn);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            synonym: props.synonym,\n            onSave: props.onSave,\n            onError: props.onError,\n            words: props.synonym && props.synonym.words ? props.synonym.words : \"\",\n        })\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>synonym-edit.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    open={this.state.open}\n                    fullWidth={true}\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\">Edit Synonym</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>synonyms</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                autoFocus={true}\n                                onChange={(event) => this.setState({words: event.target.value})}\n                                placeholder=\"words\"\n                                multiline={true}\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.words}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.handleSave()}>Save</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default SynonymEdit;\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {Api} from '../common/api'\nimport {SynonymEdit} from \"./synonym-edit\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\n\nconst styles = {\n    tableStyle: {\n        minWidth: '800px',\n        width: '900px',\n    },\n    smallTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '20px',\n    },\n    actionTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '100px',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '400px',\n        width: '600px',\n    },\n    searchTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '200px',\n        width: '340px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    label: {\n        padding: '10px',\n        color: '#555',\n    },\n    gridWidth: {\n        width: '900px',\n    },\n    hr: {\n        border: '0.1px solid #f0f0f0',\n        width: '100%',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    text: {\n        padding: '4px',\n        width: '280px',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    manualUploadSection: {\n        marginTop: '50px',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n};\n\n\nexport class Synonyms extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            synonym: {},\n            synonym_edit: false,\n\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    getSynonymList() {\n        return this.props.synonym_list;\n    }\n    deleteSynonymAsk(synonym) {\n        if (synonym) {\n            this.props.openDialog(\"are you sure you want to remove id \" + synonym.id + \"?<br/><br/>(\" + synonym.words + \")\",\n                                    \"Remove Synonym\", (action) => { this.deleteSynonym(action) });\n            this.setState({synonym: synonym});\n        }\n    }\n    deleteSynonym(action) {\n        if (action && this.state.synonym) {\n            this.props.deleteSynonym(this.state.synonym.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n        this.setState({synonym_edit: false, synonym: {}});\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getSynonyms();\n        }\n    }\n    editSynonym(synonym) {\n        this.setState({synonym_edit: true, synonym: synonym});\n    }\n    newSynonym() {\n        this.setState({synonym_edit: true, synonym: {\n                id: Api.createGuid(),\n                words: \"\",\n            }});\n    }\n    save(synonym) {\n        if (synonym) {\n            if (synonym.words.length > 0 && synonym.words.indexOf(\",\") > 0) {\n                this.props.saveSynonym(synonym);\n                this.setState({synonym_edit: false, synonym: {}});\n            } else {\n                this.props.setError(\"Error Saving Synonym\", \"synonym cannot be empty and need more than one item\");\n            }\n        } else {\n            this.setState({synonym_edit: false, synonym: {}});\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        return (\n            <div>\n                <SynonymEdit open={this.state.synonym_edit}\n                             synonym={this.state.synonym}\n                             onSave={(item) => this.save(item)}\n                             onError={(err) => this.props.setError(\"Error\", err)} />\n\n                {\n                    this.isVisible() &&\n\n                    <div style={styles.findBox}>\n                        <div style={styles.floatLeftLabel}>find synonyms</div>\n                        <div style={styles.searchFloatLeft}>\n                            <input type=\"text\" value={this.props.synonym_filter} autoFocus={true} style={styles.text}\n                                   onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setSynonymFilter(event.target.value)\n                                   }}/>\n                        </div>\n                        <div style={styles.floatLeft}>\n                            <img style={styles.search}\n                                 onClick={() => this.props.getSynonyms()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"search\" alt=\"search\"/>\n                        </div>\n                    </div>\n                }\n\n                <br clear=\"both\" />\n\n                {\n                    this.isVisible() &&\n                    <Paper>\n                        <Table style={styles.tableStyle}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell style={styles.smallTableHeaderStyle}>id</TableCell>\n                                    <TableCell style={styles.tableHeaderStyle}>synonyms</TableCell>\n                                    <TableCell style={styles.actionTableHeaderStyle}>actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    this.getSynonymList().map((synonym) => {\n                                        return (\n                                            <TableRow key={synonym.id}>\n                                                <TableCell>\n                                                    <div style={styles.label}>{synonym.id}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.label}>{synonym.words}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.linkButton} onClick={() => this.editSynonym(synonym)}>\n                                                        <img src=\"../images/edit.svg\" style={styles.dlImageSize} title=\"edit synonym\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton} onClick={() => this.deleteSynonymAsk(synonym)}>\n                                                        <img src=\"../images/delete.svg\" style={styles.dlImageSize} title=\"remove synonym\" alt=\"remove\"/>\n                                                    </div>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                }\n                                <TableRow>\n                                    <TableCell/>\n                                    <TableCell/>\n                                    <TableCell>\n                                        {this.isVisible() &&\n                                        <div style={styles.imageButton} onClick={() => this.newSynonym()}><img\n                                            style={styles.addImage} src=\"../images/add.svg\" title=\"new synonym\"\n                                            alt=\"new synonym\"/></div>\n                                        }\n                                    </TableCell>\n                                </TableRow>\n\n                            </TableBody>\n\n                        </Table>\n\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.num_synonyms}\n                            rowsPerPage={this.props.synonym_page_size}\n                            page={this.props.synonym_page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(event, page) => this.props.setSynonymPage(page)}\n                            onChangeRowsPerPage={(event) => this.props.setSynonymPageSize(event.target.value)}\n                        />\n\n                    </Paper>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        synonym_list: state.appReducer.synonym_list,\n        synonym_filter: state.appReducer.synonym_filter,\n        synonym_page: state.appReducer.synonym_page,\n        synonym_page_size: state.appReducer.synonym_page_size,\n        num_synonyms: state.appReducer.num_synonyms,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Synonyms);\n\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = {\n    labelAdjustment: {\n        marginTop: '17px',\n    }\n};\n\nexport class SemanticEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            semantic: props.semantic,\n            onSave: props.onSave,\n            onError: props.onError,\n            word: props.semantic && props.semantic.word ? props.semantic.word: \"\",\n            semantic_str: props.semantic && props.semantic.semantic ? props.semantic.semantic: \"\",\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            this.state.onSave({\"word\": this.state.word, \"prevWord\": \"\", \"semantic\": this.state.semantic_str});\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            semantic: props.semantic,\n            onSave: props.onSave,\n            onError: props.onError,\n            word: props.semantic && props.semantic.word ? props.semantic.word: \"\",\n            semantic_str: props.semantic && props.semantic.semantic ? props.semantic.semantic: \"\",\n        })\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>semantic-edit.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    open={this.state.open}\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    fullWidth={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\">Edit Semantic</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div style={styles.labelAdjustment}>word</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                autoFocus={true}\n                                onChange={(event) => this.setState({word: event.target.value})}\n                                placeholder=\"word\"\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.word}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div style={styles.labelAdjustment}>semantic</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                onChange={(event) => this.setState({semantic_str: event.target.value})}\n                                placeholder=\"semantic\"\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.semantic_str}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.handleSave()}>Save</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default SemanticEdit;\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {SemanticEdit} from \"./semantic-edit\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\n\nconst styles = {\n    tableStyle: {\n        minWidth: '900px',\n        width: '900px',\n    },\n    smallTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '20px',\n    },\n    actionTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '100px',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '400px',\n        width: '600px',\n    },\n    searchTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '200px',\n        width: '340px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    label: {\n        padding: '10px',\n        color: '#555',\n    },\n    gridWidth: {\n        width: '900px',\n    },\n    hr: {\n        border: '0.1px solid #f0f0f0',\n        width: '100%',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    text: {\n        padding: '4px',\n        width: '280px',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    manualUploadSection: {\n        marginTop: '50px',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n};\n\n\nexport class Semantics extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            semantic: {},\n            prev_semantic: {word: \"\", semantic: \"\"},\n            semantic_edit: false,\n\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n\n            // pagination\n            page_size: 5,\n            page: 0,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    getSemanticList() {\n        return this.props.semantic_list;\n    }\n    deleteSemanticAsk(semantic) {\n        if (semantic) {\n            this.props.openDialog(\"are you sure you want to remove \" + semantic.word + \" is a \" + semantic.semantic + \"?\",\n                \"Remove Semantic\", (action) => { this.deleteSemantic(action) });\n            this.setState({semantic: semantic});\n        }\n    }\n    deleteSemantic(action) {\n        if (action && this.state.semantic) {\n            this.props.deleteSemantic(this.state.semantic.word);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n        this.setState({semantic_edit: false, semantic: {}});\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getSemantics();\n        }\n    }\n    editSemantic(semantic) {\n        this.setState({semantic_edit: true,\n            prev_semantic: {\n                word: semantic.word,\n                semantic: semantic.semantic,\n            },\n            semantic: {\n                word: semantic.word,\n                semantic: semantic.semantic,\n            }});\n    }\n    newSemantic() {\n        this.setState({semantic_edit: true,\n            prev_semantic: {\n                word: \"\",\n                semantic: \"\",\n            },\n            semantic: {\n                word: \"\",\n                semantic: \"\",\n            }});\n    }\n    save(semantic) {\n        if (semantic) {\n            if (semantic.word.length > 0 && semantic.semantic.length > 0) {\n                // delete the previous semantic?\n                if (this.state.prev_semantic.word !== \"\" && this.state.prev_semantic.word !== semantic.word) {\n                    semantic.prevWord = this.state.prev_semantic.word;\n                } else {\n                    semantic.prevWord = '';\n                }\n                this.props.saveSemantic(semantic);\n                this.setState({semantic_edit: false, semantic: {}});\n                if (this.state.closeDialog) {\n                    this.state.closeDialog();\n                }\n            } else {\n                this.props.setError(\"Error Saving Semantic\", \"word and semantic must have a value\");\n            }\n        } else {\n            this.setState({semantic_edit: false, semantic: {}});\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        return (\n            <div>\n                <SemanticEdit open={this.state.semantic_edit}\n                             semantic={this.state.semantic}\n                             onSave={(item) => this.save(item)}\n                             onError={(err) => this.props.setError(\"Error\", err)} />\n\n                {\n                    this.isVisible() &&\n\n                    <div style={styles.findBox}>\n                        <div style={styles.floatLeftLabel}>find semantics</div>\n                        <div style={styles.searchFloatLeft}>\n                            <input type=\"text\" value={this.props.semantic_filter} autoFocus={true} style={styles.text}\n                                   onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setSemanticFilter(event.target.value);\n                                   }}/>\n                        </div>\n                        <div style={styles.floatLeft}>\n                            <img style={styles.search}\n                                 onClick={() => this.props.getSemantics()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"search\" alt=\"search\"/>\n                        </div>\n                    </div>\n                }\n\n                <br clear=\"both\" />\n\n                {\n                    this.isVisible() &&\n                    <Paper>\n                        <Table style={styles.tableStyle}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell style={styles.smallTableHeaderStyle}>word</TableCell>\n                                    <TableCell style={styles.tableHeaderStyle}>semantic</TableCell>\n                                    <TableCell style={styles.actionTableHeaderStyle}>actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    this.getSemanticList().map((semantic) => {\n                                        return (\n                                            <TableRow key={semantic.word + \":\" + semantic.semantic}>\n                                                <TableCell>\n                                                    <div style={styles.label}>{semantic.word}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.label}>{semantic.semantic}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.linkButton} onClick={() => this.editSemantic(semantic)}>\n                                                        <img src=\"../images/edit.svg\" style={styles.dlImageSize} title=\"edit semantic\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton} onClick={() => this.deleteSemanticAsk(semantic)}>\n                                                        <img src=\"../images/delete.svg\" style={styles.dlImageSize} title=\"remove semantic\" alt=\"remove\"/>\n                                                    </div>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                }\n                                <TableRow>\n                                    <TableCell/>\n                                    <TableCell/>\n                                    <TableCell>\n                                        {this.isVisible() &&\n                                        <div style={styles.imageButton} onClick={() => this.newSemantic()}><img\n                                            style={styles.addImage} src=\"../images/add.svg\" title=\"new semantic\"\n                                            alt=\"new semantic\"/></div>\n                                        }\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.num_semantics}\n                            rowsPerPage={this.props.semantic_page_size}\n                            page={this.props.semantic_page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(event, page) => this.props.setSemanticPage(page)}\n                            onChangeRowsPerPage={(event) => this.props.setSemanticPageSize(event.target.value)}\n                        />\n\n                    </Paper>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        semantic_list: state.appReducer.semantic_list,\n        semantic_filter: state.appReducer.semantic_filter,\n        semantic_page: state.appReducer.semantic_page,\n        semantic_page_size: state.appReducer.semantic_page_size,\n        num_semantics: state.appReducer.num_semantics,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Semantics);\n\n","import React, {Component} from 'react';\n\nimport {Api} from '../common/api'\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = {\n    container: {\n        float: \"left\",\n        marginBottom: \"10px\",\n    },\n    textFieldStyle: {\n        float: \"left\",\n        width: \"700px\",\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n    },\n    deleteButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    deleteImageSize: {\n        width: '24px',\n    },\n};\n\nexport class SynSetEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            synSet: props.synSet,\n            onSave: props.onSave,\n            onError: props.onError,\n            word: Api.defined(props.synSet) && Api.defined(props.synSet.word) ? props.synSet.word : \"\",\n            cloud_list: SynSetEdit.getWordCloudList(props.synSet),\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    static getWordCloudList(synSet) {\n        let list = [];\n        if (Api.defined(synSet) && Api.defined(synSet.wordCloudCsvList)) {\n            list = synSet.wordCloudCsvList;\n        }\n        while (list.length < 2) {\n            list.push(\"\");\n        }\n        return list;\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            const syn = this.state.synSet;\n            syn.word = this.state.word.trim();\n            syn.wordCloudCsvList = this.state.cloud_list;\n\n            const index = syn.word.indexOf(' ');\n            if (index >= 0) {\n                this.state.onError(\"syn-sets must be a single words without spaces.\")\n            } else {\n                this.state.onSave(syn);\n            }\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            synSet: props.synSet,\n            onSave: props.onSave,\n            onError: props.onError,\n            word: Api.defined(props.synSet) && Api.defined(props.synSet.word) ? props.synSet.word : \"\",\n            cloud_list: SynSetEdit.getWordCloudList(props.synSet),\n        })\n    }\n    updateWC(index, str) {\n        const cl = this.state.cloud_list;\n        cl[index] = str;\n        this.setState({cloud_list: cl});\n    }\n    newSyn() {\n        const cl = this.state.cloud_list;\n        cl.push(\"\");\n        this.setState({cloud_list: cl});\n    }\n    deleteSyn(index) {\n        const newList = [];\n        const cl = this.state.cloud_list;\n        for (let i = 0; i < cl.length; i++) {\n            if (i !== index) {\n                newList.push(cl[i]);\n            }\n        }\n        this.setState({cloud_list: newList});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>synset-edit.js: Something went wrong.</h1>;\n        }\n        console.log(this.state.cloud_list);\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    open={this.state.open}\n                    fullWidth={true}\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\">Edit syn-set \"{this.state.word}\"</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={2}>\n                            <div>syn-set</div>\n                        </Grid>\n                        <Grid item xs={8}>\n                            <TextField\n                                style={styles.textFieldStyle}\n                                onChange={(event) => this.setState({word: event.target.value})}\n                                placeholder={\"syn-set\"}\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.word}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={2}>\n                            <div>word-clouds</div>\n                        </Grid>\n                        <Grid item xs={8}>\n                            { this.state.cloud_list.map((item, index) => {\n                            return (<div id={index}>\n                                    <div style={styles.container}>\n                                        <TextField\n                                            style={styles.textFieldStyle}\n                                            onChange={(event) => this.updateWC(index, event.target.value)}\n                                            placeholder={\"word-cloud for syn-set \" + (index + 1)}\n                                            multiline={true}\n                                            rows={2}\n                                            variant=\"outlined\"\n                                            fullWidth={true}\n                                            value={item}\n                                        />\n                                        {\n                                            index > 1 &&\n                                            <div style={styles.deleteButton}\n                                                 onClick={() => this.deleteSyn(index)}>\n                                                <img src=\"../images/delete.svg\" style={styles.deleteImageSize}\n                                                     title=\"remove syn\" alt=\"remove syn\"/>\n                                            </div>\n                                        }\n                                    </div>\n                                    <div style={{clear:'both'}}/>\n                                    </div>)})}\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={9} />\n                        <Grid item xs={1}>\n                            <div style={styles.imageButton} onClick={() => this.newSyn()}><img\n                                style={styles.addImage} src=\"../images/add.svg\" title=\"add a new syn item\"\n                                alt=\"add a new syn\"/></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                    </Grid>\n\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.handleSave()}>Save</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default SynSetEdit;\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {SynSetEdit} from \"./synset-edit\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\n\nconst styles = {\n    tableStyle: {\n        minWidth: '800px',\n        width: '900px',\n    },\n    smallTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '20px',\n    },\n    actionTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '100px',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '400px',\n        width: '600px',\n    },\n    searchTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '200px',\n        width: '340px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    label: {\n        padding: '10px',\n        color: '#555',\n    },\n    gridWidth: {\n        width: '900px',\n    },\n    hr: {\n        border: '0.1px solid #f0f0f0',\n        width: '100%',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    text: {\n        padding: '4px',\n        width: '280px',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    manualUploadSection: {\n        marginTop: '50px',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n};\n\n\nexport class SynSets extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            synSet: {},\n            synSet_edit: false,\n\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    deleteSynSetAsk(synSet) {\n        if (synSet) {\n            this.props.openDialog(\"are you sure you want to remove id \" + synSet.word + \"?\",\n                                    \"Remove SynSet\", (action) => { this.deleteSynSet(action) });\n            this.setState({synSet: synSet});\n        }\n    }\n    deleteSynSet(action) {\n        if (action && this.state.synSet) {\n            this.props.deleteSynSet(this.state.synSet.lemma);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n        this.setState({synSet_edit: false, synSet: {}});\n    }\n    handleSynSetFilterKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.findSynSets();\n        }\n    }\n    editSynSet(synSet) {\n        this.setState({synSet_edit: true, synSet: synSet});\n    }\n    newSynSet() {\n        this.setState({synSet_edit: true, synSet: {\n                word: \"\",\n                lemma: \"\",\n                wordCloudCsvList: [],\n            }});\n    }\n    save(synSet) {\n        if (synSet) {\n            if (synSet.word.trim().length > 0 && synSet.wordCloudCsvList.length > 1) {\n                const list = synSet.wordCloudCsvList;\n                let validList = true;\n                for (const item of list) {\n                    if (item.trim().length === 0) {\n                        validList = false;\n                    }\n                }\n                if (validList) {\n                    this.props.saveSynSet(synSet);\n                    this.setState({synSet_edit: false, synSet: {}});\n                } else {\n                    this.props.setError(\"Error Saving SynSet\", \"syn-set word-cloud items must not be empty.\");\n                }\n            } else {\n                this.props.setError(\"Error Saving SynSet\", \"syn-set cannot be empty and need more than one item\");\n            }\n        } else {\n            this.setState({synSet_edit: false, synSet: {}});\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        return (\n            <div>\n                <SynSetEdit open={this.state.synSet_edit}\n                            synSet={this.state.synSet}\n                            onSave={(item) => this.save(item)}\n                            onError={(err) => this.props.setError(\"Error\", err)} />\n\n                {\n                    this.isVisible() &&\n\n                    <div style={styles.findBox}>\n                        <div style={styles.floatLeftLabel}>filter syn-sets</div>\n                        <div style={styles.searchFloatLeft}>\n                            <input type=\"text\" value={this.props.synset_filter} autoFocus={true} style={styles.text}\n                                   onKeyPress={(event) => this.handleSynSetFilterKeydown(event)}\n                                   onChange={(event) => {\n                                       this.props.setSynSetFilter(event.target.value)\n                                   }}/>\n                        </div>\n                        <div style={styles.floatLeft}>\n                            <img style={styles.search}\n                                 onClick={() => this.props.findSynSets()}\n                                 src=\"../images/dark-magnifying-glass.svg\" title=\"search\" alt=\"search\"/>\n                        </div>\n                    </div>\n                }\n\n                <br clear=\"both\" />\n\n                {\n                    this.isVisible() &&\n                    <Paper>\n                        <Table style={styles.tableStyle}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell style={styles.smallTableHeaderStyle}>syn-set</TableCell>\n                                    <TableCell style={styles.actionTableHeaderStyle}>actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    this.props.synset_list.map((synSet) => {\n                                        return (\n                                            <TableRow key={synSet.word}>\n                                                <TableCell>\n                                                    <div style={styles.label}>{synSet.word}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.linkButton} onClick={() => this.editSynSet(synSet)}>\n                                                        <img src=\"../images/edit.svg\" style={styles.dlImageSize} title=\"edit syn-set\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton} onClick={() => this.deleteSynSetAsk(synSet)}>\n                                                        <img src=\"../images/delete.svg\" style={styles.dlImageSize} title=\"remove syn-set\" alt=\"remove\"/>\n                                                    </div>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                }\n                                <TableRow>\n                                    <TableCell/>\n                                    <TableCell>\n                                        {this.isVisible() &&\n                                        <div style={styles.imageButton} onClick={() => this.newSynSet()}><img\n                                            style={styles.addImage} src=\"../images/add.svg\" title=\"new syn-set\"\n                                            alt=\"new syn-set\"/></div>\n                                        }\n                                    </TableCell>\n                                </TableRow>\n\n                                <TableRow>\n                                    <TableCell colSpan={2}>\n                                        <TablePagination\n                                            rowsPerPageOptions={[5, 10, 25]}\n                                            component=\"div\"\n                                            count={this.props.synset_total_size}\n                                            rowsPerPage={this.props.synset_page_size}\n                                            page={this.props.synset_page}\n                                            backIconButtonProps={{\n                                                'aria-label': 'Previous Page',\n                                            }}\n                                            nextIconButtonProps={{\n                                                'aria-label': 'Next Page',\n                                            }}\n                                            onChangePage={(event, page) => this.props.setSynSetPage(page)}\n                                            onChangeRowsPerPage={(event) => this.props.setSynSetPageSize(event.target.value)}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n\n                            </TableBody>\n\n                        </Table>\n\n\n                    </Paper>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        synset_list: state.appReducer.synset_list,\n        synset_filter: state.appReducer.synset_filter,\n        synset_page: state.appReducer.synset_page,\n        synset_page_size: state.appReducer.synset_page_size,\n        synset_total_size: state.appReducer.synset_total_size,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(SynSets);\n\n","import React from 'react';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport {Home} from \"../home\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nconst styles = {\n    page: {\n        float: 'left'\n    },\n    pageWidth: {\n        width: '900px',\n    },\n    logFiles: {\n        marginTop: '10px',\n        maxHeight: '60vh',\n        minWidth: '900px',\n        width: '900px',\n        overflowX: 'auto',\n        overflowY: 'auto',\n        display: 'inline-block',\n        whiteSpace: 'nowrap',\n        resize: 'both',\n    },\n    logLine: {\n        fontFamily: 'Courier',\n        fontSize: '0.65em',\n        color: '#666',\n        marginBottom: '4px',\n    },\n    item: {\n    },\n    selectedItem: {\n        color: '#000',\n    }\n};\n\n\nexport class Logs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            onError : props.onError,\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n        };\n        this.messagesEndRef = React.createRef();\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidMount() {\n    }\n    componentDidUpdate(prevPops, prevState, snapshot) {\n        this.scrollToBottom()\n    }\n    showLogs(log) {\n        this.setState({selectedItem: log});\n        this.props.getLogList(log);\n    }\n    restart(log) {\n        this.props.restartService(log);\n    }\n    selected(log) {\n        if (log === this.props.selected_log) {\n            return \"selected-chip\";\n        }\n        return \"chip\";\n    }\n    get_active(subItem) {\n        if (this.props.active_components && this.props.active_components[subItem] === true) {\n            return \"chip-image-area\";\n        }\n        return \"chip-image-area-not-active\";\n    }\n    scrollToBottom() {\n        this.messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }\n    render() {\n        return (\n            <div style={styles.page}>\n                <div style={styles.pageWidth}>\n\n                    <div>\n\n                        <div className={this.selected('auth')} onClick={() => this.showLogs('auth')} title=\"show authentication system logs\">\n                            <div className={this.get_active('auth')}>\n                                <img className=\"chip-image-area-img\" src=\"../images/login-icon.png\" alt=\"auth\" width=\"96\" height=\"96\" />\n                            </div>\n                            Authentication\n                            {Home.hasRole(this.props.user, ['admin']) &&\n                            <img className=\"restart-image\" src=\"../images/refresh.svg\" alt=\"restart\" width=\"24\"\n                                 height=\"24\"\n                                 title=\"restart authentication service\" onClick={() => this.restart('auth')}/>\n                            }\n                        </div>\n\n                        <div className={this.selected('conversion')} onClick={() => this.showLogs('conversion')} title=\"show conversion system logs\">\n                            <div className={this.get_active('conversion')}>\n                                <img className=\"chip-image-area-img\" src=\"../images/conversion.svg\" alt=\"auth\" width=\"96\" height=\"96\" />\n                            </div>\n                            Conversion\n                            {Home.hasRole(this.props.user, ['admin']) &&\n                            <img className=\"restart-image\" src=\"../images/refresh.svg\" alt=\"restart\" width=\"24\"\n                                 height=\"24\"\n                                 title=\"restart conversion service\" onClick={() => this.restart('conversion')}/>\n                            }\n                        </div>\n\n                        <div className={this.selected('crawler')} onClick={() => this.showLogs('crawler')} title=\"show crawler system logs\">\n                            <div className={this.get_active('crawler')}>\n                                <img className=\"chip-image-area-img\" src=\"../images/web-crawler.svg\" alt=\"auth\" width=\"96\" height=\"96\" />\n                            </div>\n                            Crawler\n                            {Home.hasRole(this.props.user, ['admin']) &&\n                            <img className=\"restart-image\" src=\"../images/refresh.svg\" alt=\"restart\" width=\"24\"\n                                 height=\"24\"\n                                 title=\"restart crawler service\" onClick={() => this.restart('crawler')}/>\n                            }\n                        </div>\n\n                        <div className={this.selected('document')} onClick={() => this.showLogs('document')} title=\"show document system logs\">\n                            <div className={this.get_active('document')}>\n                                <img className=\"chip-image-area-img\" src=\"../images/edit.svg\" alt=\"auth\" width=\"96\" height=\"96\" />\n                            </div>\n                            Document\n                            {Home.hasRole(this.props.user, ['admin']) &&\n                            <img className=\"restart-image\" src=\"../images/refresh.svg\" alt=\"restart\" width=\"24\"\n                                 height=\"24\"\n                                 title=\"restart document service\" onClick={() => this.restart('document')}/>\n                            }\n                        </div>\n\n                        <div className={this.selected('knowledgebase')} onClick={() => this.showLogs('knowledgebase')} title=\"show knowledge-base system logs\">\n                            <div className={this.get_active('knowledgebase')}>\n                                <img className=\"chip-image-area-img\" src=\"../images/kb.svg\" alt=\"auth\" width=\"96\" height=\"96\" />\n                            </div>\n                            Knowledgebase\n                            {Home.hasRole(this.props.user, ['admin']) &&\n                            <img className=\"restart-image\" src=\"../images/refresh.svg\" alt=\"restart\" width=\"24\"\n                                 height=\"24\"\n                                 title=\"restart knowledge-base service\" onClick={() => this.restart('knowledgebase')}/>\n                            }\n                        </div>\n\n                        <div className={this.selected('language')} onClick={() => this.showLogs('language')} title=\"show language system logs\">\n                            <div className={this.get_active('language')}>\n                                <img className=\"chip-image-area-img\" src=\"../images/language.svg\" alt=\"auth\" width=\"96\" height=\"96\" />\n                            </div>\n                            Language\n                            {Home.hasRole(this.props.user, ['admin']) &&\n                            <img className=\"restart-image\" src=\"../images/refresh.svg\" alt=\"restart\" width=\"24\"\n                                 height=\"24\"\n                                 title=\"restart language service\" onClick={() => this.restart('language')}/>\n                            }\n                        </div>\n\n                        <div className={this.selected('mind')} onClick={() => this.showLogs('mind')} title=\"show mind system logs\">\n                            <div className={this.get_active('mind')}>\n                                <img className=\"chip-image-area-img\" src=\"../images/mind.svg\" alt=\"auth\" width=\"96\" height=\"96\" />\n                            </div>\n                            SimSage Mind\n                            {Home.hasRole(this.props.user, ['admin']) &&\n                            <img className=\"restart-image\" src=\"../images/refresh.svg\" alt=\"restart\" width=\"24\"\n                                 height=\"24\"\n                                 title=\"restart mind service\" onClick={() => this.restart('mind')}/>\n                            }\n                        </div>\n\n                        <div className={this.selected('operator')} onClick={() => this.showLogs('operator')} title=\"show operator system logs\">\n                            <div className={this.get_active('operator')}>\n                                <img className=\"chip-image-area-img\" src=\"../images/operator.svg\" alt=\"auth\" width=\"96\" height=\"96\" />\n                            </div>\n                            Operator\n                            {Home.hasRole(this.props.user, ['admin']) &&\n                            <img className=\"restart-image\" src=\"../images/refresh.svg\" alt=\"restart\" width=\"24\"\n                                 height=\"24\"\n                                 title=\"restart operator service\" onClick={() => this.restart('operator')}/>\n                            }\n                        </div>\n\n                        <div className={this.selected('search')} onClick={() => this.showLogs('search')} title=\"show search system logs\">\n                            <div className={this.get_active('search')}>\n                                <img className=\"chip-image-area-img\" src=\"../images/search.svg\" alt=\"auth\" width=\"96\" height=\"96\" />\n                            </div>\n                            Search\n                            {Home.hasRole(this.props.user, ['admin']) &&\n                            <img className=\"restart-image\" src=\"../images/refresh.svg\" alt=\"restart\" width=\"24\"\n                                 height=\"24\"\n                                 title=\"restart search service\" onClick={() => this.restart('search')}/>\n                            }\n                        </div>\n\n                        <div className={this.selected('stats')} onClick={() => this.showLogs('stats')} title=\"show statistics system logs\">\n                            <div className={this.get_active('stats')}>\n                                <img className=\"chip-image-area-img\" src=\"../images/stats.svg\" alt=\"auth\" width=\"96\" height=\"96\" />\n                            </div>\n                            Statistics\n                            {Home.hasRole(this.props.user, ['admin']) &&\n                            <img className=\"restart-image\" src=\"../images/refresh.svg\" alt=\"restart\" width=\"24\"\n                                 height=\"24\"\n                                 title=\"restart statistics service\" onClick={() => this.restart('stats')}/>\n                            }\n                        </div>\n\n                        <div className={this.selected('web')} onClick={() => this.showLogs('web')} title=\"show web-server system logs\">\n                            <div className={this.get_active('web')}>\n                                <img className=\"chip-image-area-img\" src=\"../images/web.svg\" alt=\"auth\" width=\"96\" height=\"96\" />\n                            </div>\n                            Web server\n                            {Home.hasRole(this.props.user, ['admin']) &&\n                            <img className=\"restart-image\" src=\"../images/refresh.svg\" alt=\"restart\" width=\"24\"\n                                 height=\"24\"\n                                 title=\"restart web service\" onClick={() => this.restart('web')}/>\n                            }\n                        </div>\n\n                    </div>\n                </div>\n\n                <div style={styles.logFiles}>\n                    {\n                        this.props.log_list &&\n                        this.props.log_list.map((line) => {\n                            return (<div style={styles.logLine} id={line}>{line}</div>)\n                        })\n                    }\n                    <div ref={this.messagesEndRef} />\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n\n        log_list: state.appReducer.log_list,\n        selected_log: state.appReducer.selected_log,\n        active_components: state.appReducer.active_components,\n\n        user: state.appReducer.user,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Logs);\n\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\n\nimport {Bar, Line} from 'react-chartjs-2'\n\nimport {GraphHelper} from \"../common/graph-helper\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Comms from \"../common/comms\";\n\nconst graphHeight = 350;\nconst graphWidth = 400;\n\nconst styles = {\n    pageWidth: {\n        width: '900px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '50px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    label: {\n        marginTop: '20px',\n        color: '#555',\n    },\n    barGraphs: {\n        float: 'left',\n        margin: '20px',\n        minWidth: '440px',\n        width: '900px',\n    },\n    barGraph: {\n        float: 'left',\n        width: '410px',\n        height: '450px',\n        margin: '10px',\n    },\n    downloadButton: {\n        float: 'right',\n    },\n    dateSelect: {\n        float: 'right',\n        marginTop: '3px',\n        marginRight: '5px',\n    },\n};\n\n\nexport class Reports extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            onError : props.onError,\n\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidMount() {\n    }\n    downloadReport() {\n        const date = new Date(this.props.report_date);\n        const year = date.getFullYear();\n        const month1 = date.getMonth() + 1;\n        const url = Comms.get_query_log_url(this.props.selected_organisation_id, this.props.selected_knowledgebase_id, year, month1);\n        window.open(url, '_blank');\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        const date = new Date(this.props.report_date);\n        return (\n            <div style={styles.pageWidth}>\n                { this.isVisible() &&\n                <div>\n                <br clear=\"both\" />\n                <div style={styles.downloadButton}>\n                    <Button variant=\"outlined\" onClick={() => this.downloadReport()}>download report</Button>\n                </div>\n                <div style={styles.dateSelect}>\n                    <DatePicker\n                        className=\"date-picker-input\"\n                        selected={date}\n                        dateFormat=\"yyyy/MM\"\n                        todayButton=\"today\"\n                        showMonthYearPicker\n                        onChange={date => {\n                            this.props.setReportDate(date);\n                            this.props.getReports();\n                        }} />\n                </div>\n                <br clear=\"both\" />\n                </div>\n                }\n\n                <div style={styles.barGraphs}>\n                    {\n                        this.isVisible() && this.props.general_statistics.map( (stats) => {\n                            return (<div key={stats.id} style={styles.barGraph}>\n                                <Bar data={stats} options={GraphHelper.getGraphOptions('')} width={graphWidth} height={graphHeight}/>\n                            </div>)\n                        })\n                    }\n\n                    {\n                        this.isVisible() && this.props.file_type_statistics.map( (stats) => {\n                            return (<div key={stats.id} style={styles.barGraph}>\n                                <Bar data={stats} options={GraphHelper.getGraphOptions('')} width={graphWidth} height={graphHeight}/>\n                            </div>)\n                        })\n                    }\n\n                    {\n                        this.isVisible() && this.props.query_word_frequency.map( (stats) => {\n                            return (<div key={stats.id} style={styles.barGraph}>\n                                <Bar data={stats} options={GraphHelper.getGraphOptions('queries')} width={graphWidth} height={graphHeight}/>\n                            </div>)\n                        })\n                    }\n\n                    {\n                        this.isVisible() && this.props.access_frequency.labels.length > 0 &&\n                        <div style={styles.barGraph}>\n                            <Line data={this.props.access_frequency}\n                                  options={GraphHelper.getGraphOptions('access count')} width={graphWidth}\n                                  height={graphHeight}/>\n                        </div>\n                    }\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n\n        report_date: state.appReducer.report_date,\n        access_frequency: state.appReducer.access_frequency,\n        general_statistics: state.appReducer.general_statistics,\n        query_word_frequency: state.appReducer.query_word_frequency,\n        file_type_statistics: state.appReducer.file_type_statistics,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Reports);\n\n","\nimport React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport class OperatorTeach extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            links: '',\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.props.onSave) {\n            let links = this.state.links.replace(/\\n/g, ' ');\n            links = links.replace(/\\r/g, ' ');\n            links = links.replace(/\\t/g, ' ');\n            this.props.onSave(true, links);\n        }\n    }\n    handleCancel() {\n        if (this.props.onSave) {\n            this.props.onSave(false, '');\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>operator-teach.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    open={this.props.open}\n                    fullWidth={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\">Teach SimSage?</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>question</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            {this.props.question}\n                        </Grid>\n                        <Grid item xs={1} />\n\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>answer</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            {this.props.answer}\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>links</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                onChange={(event) => this.setState({links: event.target.value})}\n                                placeholder=\"links (images and page-links, separated by commas or spaces)\"\n                                multiline={true}\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth={true}\n                                value={this.state.links}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.handleSave()}>Save</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default OperatorTeach;\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n    questionStyle: {\n        display: 'inline-block',\n        fontWeight: '600',\n    },\n    answerStyle: {\n        fontSize: '0.95em',\n    }\n};\n\nexport class OperatorPreviousAnswer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            onSave: props.onSave,\n            onError: props.onError,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            open: nextProps.open,\n        })\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            this.state.onSave(true);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(false);\n        }\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>operator-previous-answer.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    open={this.state.open}\n                    fullWidth={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\">Use Previous Answer?</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={10}>\n                            <div>SimSage has a previous answer to the question: <div style={styles.questionStyle}>{this.props.question}</div></div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n\n                        <Grid item xs={1} />\n                        <Grid item xs={2}>\n                            <div>SimSage's answer was:</div>\n                        </Grid>\n                        <Grid item xs={8}>\n                            <div style={styles.answerStyle}>{this.props.answer}</div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.handleSave()}>Use this Answer</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default OperatorPreviousAnswer;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport FreeBreakfastIcon from '@material-ui/icons/FreeBreakfast';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\n\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport SimSageIcon from '@material-ui/icons/Adb';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport TextField from \"@material-ui/core/TextField\";\nimport OperatorTeach from \"./operator-teach\";\nimport OperatorPreviousAnswer from './operator-previous-answer'\nimport Home from '../home'\nimport Api from '../common/api'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nconst styles = {\n    buttonsTop: {\n        marginTop: '10px',\n    },\n    topButton: {\n        marginLeft: '10px',\n    },\n    closeButton: {\n        marginTop: '-35px',\n        marginRight: '30px',\n        height: '20px',\n        float: 'right',\n        cursor: 'pointer',\n    },\n    conversations: {\n        marginTop: '10px',\n        backgroundColor: '#fafafa',\n        width: '900px',\n        height: '500px',\n        borderRadius: '10px',\n        overflowY: 'auto',\n    },\n    avatarBackground: {\n        backgroundColor: '#ccc',\n    },\n    simSageIcon: {\n        color: '#66aa66',\n    },\n    simSageIconSelected: {\n        color: '#dd6666',\n    },\n    personIcon: {\n        color: '#666cc6',\n    },\n    personIconSelected: {\n        color: '#dd6666',\n    },\n    kbName: {\n        float: 'right',\n        marginLeft: '5px',\n        marginTop: '4px',\n        marginRight: '100px',\n        fontSize: '0.9em'\n    },\n    typingDots: {\n        width: '60px',\n    }\n};\n\n\nexport class Operator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            operator_reply: '', // operator text\n            last_time: 0,\n        };\n    }\n    componentDidMount() {\n        window.setInterval(() => this.checkClientTyping(), 1000);\n    }\n    componentDidCatch(error, info) {\n        console.log(error, info);\n        this.props.setError(error, info);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.listRef) {\n            this.listRef.scrollTop = this.listRef.scrollHeight;\n        }\n    }\n    readyForChat() {\n        const data = {\n            sessionId: this.props.session.id,\n            operatorId: this.props.operator.id,\n            organisationId: this.props.selected_organisation_id,\n            userId: this.props.user.id,\n        };\n        this.props.sendOperatorMessage('/ops/ready', data);\n        this.props.operatorReady(this.props.operator.id, true);\n    }\n    isTyping() {\n        const last_time = this.state.last_time;\n        const curr_time = Api.getSystemTime();\n        if (last_time < curr_time) {\n            this.setState({last_time: curr_time + 2000});\n            if (this.props.operator.client_id && this.props.operator.id) {\n                const data = {\n                    fromId: this.props.operator.id,\n                    toId: this.props.operator.client_id,\n                    isTyping: true\n                };\n                this.props.sendOperatorMessage('/ops/typing', data);\n            }\n        }\n    }\n    checkClientTyping() {\n        // signal the client is no longer typing?  (on a timer, see mounted)\n        if (this.props.operator && this.props.operator.is_typing &&\n            this.props.operator.typing_time < Api.getSystemTime()) {\n            this.props.stopClientTyping(this.props.operator.id);\n        }\n    }\n    takeBreak() {\n        const data = {\n            sessionId: this.props.session.id,\n            operatorId: this.props.operator.id,\n            organisationId: this.props.selected_organisation_id,\n            clientId: this.props.operator.client_id,\n        };\n        this.props.sendOperatorMessage('/ops/take-break', data);\n        this.props.operatorReady(this.props.operator.id, false);\n    }\n    nextUser() {\n        const data = {\n            sessionId: this.props.session.id,\n            operatorId: this.props.operator.id,\n            organisationId: this.props.selected_organisation_id,\n            clientId: this.props.operator.client_id,\n        };\n        this.props.sendOperatorMessage('/ops/next-user', data);\n        this.props.clearUser(this.props.operator.id);\n    }\n    banUserConfirm() {\n        if (this.props.operator.client_id && this.props.operator.client_id.length > 0) {\n            this.props.openDialog(\"are you sure you want to ban this user?\",\n                \"Ban User\", (action) => {\n                    this.banUser(action)\n                });\n        }\n    }\n    banUser(act) {\n        if (act) {\n            const data = {\n                sessionId: this.props.session.id,\n                operatorId: this.props.operator.id,\n                organisationId: this.props.selected_organisation_id,\n                clientId: this.props.operator.client_id,\n            };\n            this.props.sendOperatorMessage('/ops/ban-user', data);\n            this.props.clearUser(this.props.operator.id);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    operatorReply(text) {\n        if (this.props.operator.client_id.length > 0 && text.length > 0) {\n            const data = {\n                sessionId: this.props.session.id,\n                operatorId: this.props.operator.id,\n                organisationId: this.props.selected_organisation_id,\n                clientId: this.props.operator.client_id,\n                kbId: this.props.operator.client_kb_id,\n                text: text,\n            };\n            this.props.sendOperatorMessage('/ops/chat', data);\n\n            // add a new conversation to the list\n            this.props.addConversation(this.props.operator.id, {id: this.props.operator.conversation_list.length + 1, primary: text,\n                                        secondary: \"You\", used: false, is_simsage: true});\n\n            this.setState({operator_reply: ''});\n        }\n    }\n    selectForLearn(item) {\n        if (item && item.is_simsage) {\n            if (item.id === this.props.operator.answer_id)\n                this.props.setOperatorAnswer(this.props.operator.id, '', '');\n            else\n                this.props.setOperatorAnswer(this.props.operator.id, item.id, item.primary);\n        } else if (item) {\n            if (item.id === this.props.operator.question_id)\n                this.props.setOperatorQuestion(this.props.operator.id, '', '');\n            else\n                this.props.setOperatorQuestion(this.props.operator.id, item.id, item.primary);\n        }\n    }\n    teachSimSage(teach, links) {\n        if (teach) {\n            if (this.props.operator.client_id.length > 0 && this.props.operator.question.length > 0 &&\n                this.props.operator.answer.length > 0) {\n                const data = {\n                    sessionId: this.props.session.id,\n                    operatorId: this.props.operator.id,\n                    organisationId: this.props.selected_organisation_id,\n                    clientId: this.props.operator.client_id,\n                    kbId: this.props.operator.client_kb_id,\n                    text: this.props.operator.question,\n                    answer: this.props.operator.answer,\n                    links: links,\n                };\n                this.props.sendOperatorMessage('/ops/teach', data);\n\n                // mark these two items as used\n                const conversation_list = this.props.operator.conversation_list;\n                for (const item of conversation_list) {\n                    if (item.id === this.props.operator.question_id || item.id === this.props.operator.answer_id) {\n                        this.props.markConversationItemUsed(this.props.operator.id, item.id);\n                    }\n                }\n            }\n        }\n        this.props.setOperatorAnswer(this.props.operator.id, '', '');\n        this.props.setOperatorQuestion(this.props.operator.id, '', '');\n    }\n    usePreviousQuestion(use) {\n        if (use && this.props.operator.prev_answer.length > 0) {\n            this.operatorReply(this.props.operator.prev_answer);\n        }\n        this.props.clearPreviousAnswer(this.state.operator.id);\n    }\n    getAvatarStyle(item) {\n        if (item.is_simsage) {\n            if (item.id === this.props.operator.answer_id || item.used) {\n                return styles.simSageIconSelected;\n            } else {\n                return styles.simSageIcon;\n            }\n        } else {\n            if (item.id === this.props.operator.question_id || item.used) {\n                return styles.personIconSelected;\n            } else {\n                return styles.personIcon;\n            }\n        }\n    }\n    render() {\n        const isOperator = Home.hasRole(this.props.user, ['operator']);\n        const active = this.props.operator.operator_ready && this.props.operator_connected && isOperator;\n        const isReady = this.props.operator.operator_ready || !this.props.operator_connected;\n        const has_user = this.props.operator.client_id && this.props.operator.client_id.length > 0;\n        return (\n            <div>\n                <OperatorTeach\n                    open={this.props.operator.question_id !== '' && this.props.operator.answer_id !== ''}\n                    question={this.props.operator.question}\n                    onSave={(teach, links) => this.teachSimSage(teach, links)}\n                    answer={this.props.operator.answer}\n                    />\n\n                <OperatorPreviousAnswer\n                    open={this.props.operator.current_question !== '' && this.props.operator.prev_answer !== ''}\n                    question={this.props.operator.current_question}\n                    onSave={(use) => this.usePreviousQuestion(use)}\n                    answer={this.props.operator.prev_answer}\n                />\n\n                <div style={styles.buttonsTop}>\n                    <Button variant=\"contained\" style={styles.topButton} disabled={isReady}\n                            color=\"secondary\" title=\"Signal that you are ready to go and converse with customers.\"\n                            onClick={() => this.readyForChat()}>\n                        <KeyboardVoiceIcon />\n                        Ready\n                    </Button>\n\n                    <Button variant=\"contained\" style={styles.topButton} disabled={!active}\n                            color=\"secondary\" title=\"take a break, stop participating in conversations while you have a break.\"\n                            onClick={() => this.takeBreak()}>\n                        <FreeBreakfastIcon />\n                        Break\n                    </Button>\n\n                    <Button variant=\"contained\" style={styles.topButton} disabled={!has_user}\n                            color=\"secondary\" title=\"We have finished the current conversation and are ready for a next one.\"\n                            onClick={() => this.nextUser()}>\n                        <SupervisedUserCircleIcon />\n                        Next User\n                    </Button>\n\n                    <Button variant=\"contained\" style={styles.topButton} disabled={!has_user}\n                            color=\"secondary\" title=\"The current conversation is abusive or bad spirited, ban this user from the system.\"\n                            onClick={() => this.banUserConfirm()}>\n                        <PersonAddDisabledIcon />\n                        Ban User\n                    </Button>\n\n                    <div style={styles.kbName}>clients connected: <b>{this.props.num_active_connections}</b></div>\n\n                    {\n                        this.props.operator.client_kb_name && this.props.operator.client_kb_name.length > 0 &&\n                        <div style={styles.kbName}>{this.props.operator.client_kb_name}</div>\n                    }\n\n\n                </div>\n\n                {\n                    !this.props.isFirst &&\n                    <div style={styles.closeButton}\n                         title=\"Remove this operator\"\n                         onClick={() => { this.takeBreak(); this.props.onCloseTab(); this.props.removeOperator(this.props.operator.id); }}>x</div>\n                }\n\n                <Grid container spacing={2}>\n                    <Grid item xs={12} md={6}>\n                        <div>\n                            <List style={styles.conversations} dense={true} ref={ (list) => { this.listRef = list }}>\n                                {this.props.operator.conversation_list.map((item) => {\n                                    return (\n                                        <ListItem key={item.id} onClick={() => {if (active) this.selectForLearn(item)}}>\n                                            <ListItemAvatar>\n                                                <Avatar style={styles.avatarBackground}>\n                                                    { item.is_simsage && <SimSageIcon style={this.getAvatarStyle(item)} /> }\n                                                    { !item.is_simsage && <PersonIcon style={this.getAvatarStyle(item)}/> }\n                                                </Avatar>\n                                            </ListItemAvatar>\n                                            <ListItemText\n                                                primary={item.primary}\n                                                secondary={item.secondary}\n                                            />\n                                        </ListItem>\n                                    )\n                                }\n                                )}\n                                {this.props.operator.is_typing &&\n                                    <ListItem>\n                                        <img src=\"../images/dots.gif\" style={styles.typingDots} alt=\"typing\" />\n                                    </ListItem>\n                                }\n                            </List>\n                        </div>\n                    </Grid>\n                </Grid>\n\n                <Grid container spacing={1}>\n                    <Grid item xs={1} />\n                    <Grid item xs={9}>\n                        <TextField\n                            onChange={(event) => this.setState({operator_reply: event.target.value})}\n                            disabled={!has_user}\n                            onKeyPress={(event) => {\n                                if (event.key === \"Enter\") {\n                                    this.operatorReply(this.state.operator_reply);\n                                }\n                                this.isTyping();\n                            }}\n                            label=\"your reply\"\n                            fullWidth={true}\n                            value={this.state.operator_reply}\n                        />\n                    </Grid>\n                    <Grid item xs={2} style={{marginTop: '12px'}}>\n                        <Button variant=\"outlined\"\n                                disabled={!has_user}\n                                color=\"secondary\"\n                                onClick={() => this.operatorReply(this.state.operator_reply)}>\n                            Reply\n                        </Button>\n                    </Grid>\n                </Grid>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        session: state.appReducer.session,\n        user: state.appReducer.user,\n\n        operator_connected: state.appReducer.operator_connected,\n        num_active_connections: state.appReducer.num_active_connections,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Operator);\n\n","import React from 'react';\n\nimport Operator from \"./operator\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Button from '@material-ui/core/Button';\n\nimport {MAX_OPERATORS} from '../actions/actions';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nconst styles = {\n    tab: {\n        backgroundColor: '#f8f8f8',\n        color: '#000',\n    },\n    add_button: {\n        float: 'right',\n        width: '20px',\n        marginTop: '-40px',\n    }\n};\n\n\nexport class OperatorTabs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTab: '1',\n        };\n    }\n    componentDidCatch(error, info) {\n        console.log(error, info);\n        this.props.setError(error, info);\n    }\n    render() {\n        return (\n            <div>\n\n                <Tabs value={this.state.selectedTab} onChange={(event, value)=> this.setState({selectedTab: value})}>\n                    {\n                        this.props.operators && this.props.operators.map((operator, index) => {\n                            return (<Tab label={'operator ' + (index + 1)} key={'tab' + (index + 1)} value={'' + (index + 1)} style={styles.tab} />);\n                        })\n                    }\n                </Tabs>\n                {\n                    this.props.operators && this.props.operators.length < MAX_OPERATORS &&\n                    <Button variant=\"contained\" onClick={() => this.props.addOperator()}\n                            title=\"add operator\"\n                            style={styles.add_button}>+</Button>\n                }\n\n                {\n                    this.props.operators && this.props.operators.map((operator, index) => {\n                        if ('' + (index + 1) === this.state.selectedTab) {\n                            return (<Operator\n                                    key={'display' + (index + 1)}\n                                    operator={operator}\n                                    isFirst={index === 0}\n                                    onCloseTab={() => this.setState({selectedTab: '1'})}\n                                    openDialog={(message, title, callback) => this.props.openDialog(message, title, callback)}\n                                    closeDialog={() => this.props.closeDialog()} />);\n                        } else {\n                            return (<div />);\n                        }\n                    })\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        session: state.appReducer.session,\n        user: state.appReducer.user,\n\n        operators: state.appReducer.operators,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(OperatorTabs);\n\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Button from '@material-ui/core/Button';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport TimeSelect from '../common/time-select'\nimport TextField from \"@material-ui/core/TextField\";\nimport Api from \"../common/api\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\n\nconst styles = {\n    formContent: {\n        overflowY: 'scroll',\n        height: '550px',\n    },\n    tab: {\n        backgroundColor: '#f8f8f8',\n        color: '#000',\n    },\n    domainPage: {\n        padding: '10px',\n    },\n    textField: {\n        marginLeft: '10px',\n        marginRight: '10px',\n        width: '500px',\n    },\n    timeTabContent: {\n        marginLeft: '20px',\n    },\n    testButton: {\n        marginLeft: '20px',\n        marginTop: '20px',\n        marginRight: '20px',\n    },\n};\n\nexport class DomainDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: props.open,\n\n            onSave: props.onSave,  // save callback\n            onTest: props.onTest,   // test button callback\n            onUpdate: props.onUpdate, // update callback\n\n            onError: props.onError,\n            error_title: props.error_title,\n            error_msg: props.error_msg,\n\n            selectedTab: 'general',\n\n            // organisational details\n            organisation_id: props.organisation_id,\n            kb_id: props.kb_id,\n\n            ...this.construct_data(props.domain),\n\n            has_error: false,\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({has_error: true});\n        console.log(error, info);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps !== null) {\n            if (nextProps.domain) {\n                this.setState({\n                    open: nextProps.open,\n                    title: nextProps.title,\n\n                    onSave: nextProps.onSave,\n                    onUpdate: nextProps.onUpdate,\n                    onTest: nextProps.onTest,\n\n                    onError: nextProps.onError,\n                    error_title: nextProps.error_title,\n                    error_msg: nextProps.error_msg,\n\n                    organisation_id: nextProps.organisation_id,\n                    kb_id: nextProps.kb_id,\n\n                    ...this.construct_data(nextProps.domain)\n                });\n\n            } else {\n                this.setState({\n                    open: nextProps.open,\n                    title: nextProps.title,\n\n                    onSave: nextProps.onSave,\n                    onError: nextProps.onError,\n                });\n            }\n        }\n    }\n\n    change_callback(data) {\n        this.setState(data);\n    }\n\n    construct_data(domain) {\n        if (domain) {\n            return {\n                organisationId: '', kbId: '',\n                domainId: Api.defined(domain.domainId) ? domain.domainId : '',\n                domainName: Api.defined(domain.domainName) ? domain.domainName : '',\n                userName: Api.defined(domain.userName) ? domain.userName : '',\n                password: Api.defined(domain.password) ? domain.password : '',\n                serverIp: Api.defined(domain.serverIp) ? domain.serverIp : '',\n                basePath: Api.defined(domain.basePath) ? domain.basePath : '',\n                portNumber: Api.defined(domain.portNumber) ? domain.portNumber : 389,\n                sslOn: Api.defined(domain.sslOn) ? domain.sslOn : false,\n                schedule: Api.defined(domain.schedule) ? domain.schedule : '',\n            }\n        } else {\n            return {\n                organisationId: '', kbId: '',\n                domainId: '', domainName: '',\n                userName: '', password: '',\n                serverIp: '', basePath: '',\n                portNumber: 389, sslOn: false,\n                schedule: '',\n            }\n        }\n    }\n\n    gather_data() {\n        return {\n            organisationId: '', kbId: '',\n            domainId: this.state.domainId,\n            domainName: this.state.domainName,\n            userName: this.state.userName,\n            password: this.state.password,\n            serverIp: this.state.serverIp,\n            basePath: this.state.basePath,\n            portNumber: this.state.portNumber,\n            sslOn: this.state.sslOn,\n            schedule: this.state.schedule,\n        }\n    }\n\n    setError(title, error_msg) {\n        if (this.props.onError) {\n            this.props.onError(title, error_msg);\n        }\n    }\n\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null);\n        }\n        this.setState({open: false});\n    };\n\n    handleSave() {\n        if (this.state.userName.trim().length === 0 && (\n            this.state.password.trim().length === 0 ||\n            this.state.domainName.trim().length === 0 ||\n            this.state.serverIp.trim().length === 0 ||\n            this.state.portNumber.trim().length === 0 ||\n            this.state.basePath.trim().length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply credentials, and domain details using all fields.');\n\n        } else {\n            if (this.state.onSave) {\n                this.state.onSave(this.gather_data());\n            }\n        }\n    }\n\n    testConnection() {\n        if (this.state.userName.trim().length === 0 && (\n            this.state.password.trim().length === 0 ||\n            this.state.domainName.trim().length === 0 ||\n            this.state.serverIp.trim().length === 0 ||\n            this.state.portNumber.trim().length === 0 ||\n            this.state.basePath.trim().length === 0)) {\n\n            this.setError('invalid parameters', 'you must supply credentials, and domain details using all fields.');\n\n        } else {\n            if (this.state.onTest) {\n                this.state.onTest(this.gather_data());\n            }\n        }\n    }\n\n    updateSchedule(time) {\n        if (time !== null) {\n            this.setState({schedule: time});\n            if (this.state.onUpdate) {\n                this.state.onUpdate({...this.gather_data(), \"schedule\": time});\n            }\n        }\n    }\n\n    render() {\n        if (this.state.has_error) {\n            return <h1>domain-dialog.js: Something went wrong.</h1>;\n        }\n        const t_value = this.state.selectedTab;\n        return (\n            <div>\n                <Dialog aria-labelledby=\"alert-dialog-title\"\n                        aria-describedby=\"alert-dialog-description\"\n                        open={this.state.open}\n                        disableBackdropClick={true}\n                        disableEscapeKeyDown={true}\n                        fullWidth={true}\n                        maxWidth=\"lg\"\n                        onClose={this.handleCancel.bind(this)} >\n                    <DialogTitle id=\"alert-dialog-title\">{this.state.title}</DialogTitle>\n                    <div>\n                        <div>\n                            <Tabs value={this.state.selectedTab} onChange={(event, value)=> this.setState({selectedTab: value})}>\n                                <Tab label=\"domain settings\" value=\"general\" style={styles.tab} />\n                                <Tab label=\"schedule\" value=\"schedule\" style={styles.tab} />\n                            </Tabs>\n\n                            <div style={styles.formContent}>\n                                {t_value === 'general' &&\n                                    <div style={styles.domainPage}>\n\n                                        <TextField\n                                            autoFocus={true}\n                                            placeholder=\"domain name\"\n                                            label=\"domain name\"\n                                            value={this.state.domainName}\n                                            onChange={(event) => {this.change_callback({domainName: event.target.value})}}\n                                            style={styles.textField}\n                                        />\n                                        <br />\n                                        <br />\n\n                                        <TextField\n                                            placeholder=\"user-name\"\n                                            label=\"user-name\"\n                                            value={this.state.userName}\n                                            onChange={(event) => {this.change_callback({userName: event.target.value})}}\n                                            style={styles.textField}\n                                        />\n                                        <br />\n                                        <br />\n\n                                        <TextField\n                                            placeholder=\"password (leave blank not to change)\"\n                                            label=\"password (leave blank not to change)\"\n                                            type=\"password\"\n                                            value={this.state.password}\n                                            onChange={(event) => {this.change_callback({password: event.target.value})}}\n                                            style={styles.textField}\n                                        />\n                                        <br />\n                                        <br />\n\n                                        <TextField\n                                            placeholder=\"domain ip-address\"\n                                            label=\"domain ip-address\"\n                                            value={this.state.serverIp}\n                                            onChange={(event) => {this.change_callback({serverIp: event.target.value})}}\n                                            style={styles.textField}\n                                        />\n                                        <br />\n                                        <br />\n\n                                        <TextField\n                                            placeholder=\"domain base-path (e.g. dc=my-domain,dc=co,dc=uk)\"\n                                            label=\"domain base-path (e.g. dc=my-domain,dc=co,dc=uk)\"\n                                            value={this.state.basePath}\n                                            onChange={(event) => {this.change_callback({basePath: event.target.value})}}\n                                            style={styles.textField}\n                                        />\n                                        <br />\n                                        <br />\n\n                                        <TextField\n                                            placeholder=\"Active Directory port-number\"\n                                            label=\"Active Directory port-number\"\n                                            value={this.state.portNumber}\n                                            onChange={(event) => {this.change_callback({portNumber: event.target.value})}}\n                                            style={styles.textField}\n                                        />\n                                        <br />\n                                        <br />\n\n                                        <div style={{float: 'left'}} title=\"Check this box if you want the enable SSL communications with the Active Directory server.\">\n                                            <Checkbox\n                                                checked={this.state.sslOn}\n                                                onChange={(event) => {\n                                                    if (!event.target.checked) {\n                                                        this.change_callback({sslOn: false});\n                                                    } else {\n                                                        this.change_callback({sslOn: event.target.checked});\n                                                    }\n                                                }}\n                                                value=\"enable Active Directory SSL?\"\n                                                inputProps={{\n                                                    'aria-label': 'primary checkbox',\n                                                }}\n                                            />\n                                            enable Active Directory SSL?\n                                        </div>\n                                        <br clear=\"both\" />\n\n                                        <Button color=\"primary\" variant=\"outlined\" style={styles.testButton}\n                                                onClick={() => this.testConnection()}>Test Connection</Button>\n\n\n                                    </div>\n                                }\n                                {t_value === 'schedule' &&\n                                <div style={styles.timeTabContent}>\n                                    <TimeSelect time={this.state.schedule}\n                                                onSave={(time) => this.updateSchedule(time)}/>\n                                </div>\n                                }\n                            </div>\n\n\n                        </div>\n                    </div>\n                    <DialogActions>\n                        <Button onClick={() => this.handleCancel()}>cancel</Button>\n                        <Button onClick={() => this.handleSave()}>save</Button>\n                    </DialogActions>\n\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default DomainDialog;\n","import React, {Component} from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport {DomainDialog} from './domain_dialog'\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\n\nconst empty_domain= {domainId: '', domainName: '', userName: '', password: '', serverIp: '', basePath: '', portNumber: 389, sslOn: false, schedule: '' };\n\nconst styles = {\n    pageWidth: {\n        width: '900px',\n    },\n    tab: {\n        backgroundColor: '#f8f8f8',\n        color: '#000',\n    },\n    addImage: {\n        width: '25px',\n        cursor: 'pointer',\n        color: \"green\",\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n    },\n    label: {\n        marginTop: '20px',\n        color: '#555',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    download: {\n        cursor: 'pointer',\n        fontSize: '0.9em',\n        fontWeight: '600',\n        height: '24px',\n    },\n    downloadType: {\n        fontSize: '0.9em',\n        height: '24px',\n    },\n    downloadImage: {\n        width: '24px',\n    },\n    labelHeader: {\n        marginTop: '20px',\n        marginBottom: '5px',\n        fontSize: '0.8em',\n    },\n};\n\nexport class Domains extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // pagination\n            page_size: 5,\n            page: 0,\n            // dialog\n            open: false,\n            title: '',\n            selected_domain: {},\n            domain_ask: null,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    getDomains() {\n        const paginated_list = [];\n        const first = this.state.page * this.state.page_size;\n        const last = first + this.state.page_size;\n        for (const i in this.props.domain_list) {\n            if (i >= first && i < last) {\n                paginated_list.push(this.props.domain_list[i]);\n            }\n        }\n        return paginated_list;\n    }\n    addNewDomain() {\n        this.setState({open: true, selected_domain: empty_domain, title: 'Create New Domain'});\n    }\n    onUpdate(domain) {\n        this.setState({selected_domain: domain});\n    }\n    editDomain(domain) {\n        if (domain) {\n            this.setState({open: true, selected_domain: { ...empty_domain, ...domain}, title: 'Edit Domain'});\n        }\n    }\n    deleteDomainAsk(domain) {\n        this.setState({domain_ask: domain});\n        this.props.openDialog(\"are you sure you want to remove the domain named <b>\" + domain.domainName + \"</b>?\",\n            \"Remove Domain\", (action) => { this.deleteDomain(action) });\n    }\n    deleteDomain(action) {\n        if (action && this.state.domain_ask && this.state.domain_ask.domainId) {\n            this.props.deleteDomain(this.state.domain_ask.domainId);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n    }\n    saveDomain(domain) {\n        if (domain) {\n            domain.organisationId = this.props.selected_organisation_id;\n            domain.kbId = this.props.selected_knowledgebase_id;\n            this.props.updateDomain(domain);\n        }\n        this.setState({open: false});\n    }\n    testDomain(domain) {\n        if (domain) {\n            domain.organisationId = this.props.selected_organisation_id;\n            domain.kbId = this.props.selected_knowledgebase_id;\n            this.setState({selected_domain: domain});\n            this.props.testDomain(domain);\n        }\n    }\n    isVisible() {\n        return this.props.selected_organisation_id && this.props.selected_organisation_id.length > 0 &&\n            this.props.selected_organisation && this.props.selected_organisation.length > 0 &&\n            this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0;\n    }\n    render() {\n        return (\n            <div>\n                <DomainDialog\n                    open={this.state.open}\n                    title={this.state.title}\n                    organisation_id={this.props.selected_organisation_id}\n                    kb_id={this.props.selected_knowledgebase_id}\n                    onSave={(domain) => this.saveDomain(domain)}\n                    onTest={(domain) => this.testDomain(domain)}\n                    onUpdate={(domain) => this.onUpdate(domain)}\n                    onError={(title, errStr) => this.props.setError(title, errStr)}\n                    error_title={this.props.error_title}\n                    error_msg={this.props.error}\n                    domain={this.state.selected_domain}\n                />\n\n                {\n                    this.isVisible() &&\n\n                    <Paper style={styles.pageWidth}>\n                        <Table>\n                            <TableHead>\n                                <TableRow style={styles.tableHeaderStyle}>\n                                    <TableCell style={styles.tableHeaderStyle}>name</TableCell>\n                                    <TableCell style={styles.tableHeaderStyle}>path</TableCell>\n                                    <TableCell style={styles.tableHeaderStyle}>objects</TableCell>\n                                    <TableCell style={styles.tableHeaderStyle}>actions</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    this.getDomains().map((domain) => {\n                                        return (\n                                            <TableRow key={domain.domainId}>\n                                                <TableCell>\n                                                    <div style={styles.label}>{domain.domainName}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.label}>{domain.basePath}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.label}>{domain.numObjects}</div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div style={styles.linkButton} onClick={() => this.editDomain(domain)}>\n                                                        <img src=\"../images/edit.svg\" style={styles.downloadImage} title=\"edit domain\" alt=\"edit\"/>\n                                                    </div>\n                                                    <div style={styles.linkButton} onClick={() => this.deleteDomainAsk(domain)}>\n                                                        <img src=\"../images/delete.svg\" style={styles.downloadImage} title=\"remove domain\" alt=\"remove\"/>\n                                                    </div>\n                                                </TableCell>\n                                            </TableRow>\n                                        )\n                                    })\n                                }\n                                <TableRow>\n                                    <TableCell/>\n                                    <TableCell/>\n                                    <TableCell/>\n                                    <TableCell>\n                                        {this.props.selected_organisation_id.length > 0 && this.props.selected_knowledgebase_id.length > 0 &&\n                                        <div style={styles.imageButton} onClick={() => this.addNewDomain()}><img\n                                            style={styles.addImage} src=\"../images/add.svg\" title=\"add new domain\"\n                                            alt=\"add new domain\"/></div>\n                                        }\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25]}\n                            component=\"div\"\n                            count={this.props.domain_list.length}\n                            rowsPerPage={this.state.page_size}\n                            page={this.state.page}\n                            backIconButtonProps={{\n                                'aria-label': 'Previous Page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'Next Page',\n                            }}\n                            onChangePage={(event, page) => this.changePage(page)}\n                            onChangeRowsPerPage={(event) => this.changePageSize(event.target.value)}\n                        />\n\n                    </Paper>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n        domain_list: state.appReducer.domain_list,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Domains);\n","import React, {Component} from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Chip from \"@material-ui/core/Chip\";\n\n\nconst styles = {\n    roleBlock: {\n        padding: '5px',\n        marginTop: '20px',\n        float: 'left',\n        width: '400px',\n        border: '1px solid #888',\n        borderRadius: '4px',\n        marginLeft: '10px',\n    },\n    roleLabel: {\n        fontSize: '0.8em',\n        color: '#aaa',\n    },\n    roleArea: {\n        padding: '20px',\n    },\n    roleChip: {\n        margin: '2px',\n    },\n}\n\n\nexport class SemanticCategoryEdit extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            has_error: false,\n            open: props.open,\n            displayName: props.synonym && props.synonym.displayName ? props.synonym.displayName : \"\",\n            semanticList: props.synonym && props.synonym.semanticList ? props.synonym.semanticList : [],\n            definedSemanticList: props.definedSemanticList,\n            onSave: props.onSave,\n            onError: props.onError,\n        };\n    }\n    componentDidCatch(error, info) {\n        this.setState({ has_error: true });\n        console.log(error, info);\n    }\n    handleSave() {\n        if (this.state.onSave) {\n            this.state.onSave(this.state.displayName, this.state.semanticList);\n        }\n    }\n    handleCancel() {\n        if (this.state.onSave) {\n            this.state.onSave(null, null);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(props) {\n        this.setState({\n            open: props.open,\n            displayName: props.synonym && props.synonym.displayName ? props.synonym.displayName : \"\",\n            semanticList: props.synonym && props.synonym.semanticList ? props.synonym.semanticList : [],\n            definedSemanticList: props.definedSemanticList,\n            onSave: props.onSave,\n            onError: props.onError,\n        })\n    }\n    getSemantics() {\n        return this.state.semanticList;\n    }\n    getAvailableSemantics() {\n        const list = [];\n        const semanticList = this.getSemantics();\n        for (const available_semantic of this.state.definedSemanticList) {\n            let found = false;\n            for (const semantic of semanticList) {\n                if (available_semantic === semantic) {\n                    found = true;\n                }\n            }\n            if (!found) {\n                list.push(available_semantic);\n            }\n        }\n        return list;\n    }\n    addSemantic(semantic) {\n        const semanticList = this.getSemantics();\n        semanticList.push(semantic);\n        this.setState({semanticList: semanticList});\n    }\n    removeSemantic(semantic) {\n        const semanticList = this.getSemantics();\n        const newSemanticList = [];\n        for (const s of semanticList) {\n            if (s !== semantic) {\n                newSemanticList.push(s);\n            }\n        }\n        this.setState({semanticList: newSemanticList});\n    }\n    render() {\n        if (this.state.has_error) {\n            return <h1>semantic-category-edit.js: Something went wrong.</h1>;\n        }\n        return (\n            <Dialog aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    open={this.state.open}\n                    fullWidth={true}\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}\n                    maxWidth=\"lg\"\n                    onClose={() => this.handleCancel()} >\n\n                <DialogTitle id=\"alert-dialog-title\">Edit Semantic Display Category</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={1}>\n\n                        <Grid item xs={1} />\n                        <Grid item xs={1}>\n                            <div>display name</div>\n                        </Grid>\n                        <Grid item xs={9}>\n                            <TextField\n                                autoFocus={true}\n                                onChange={(event) => this.setState({displayName: event.target.value})}\n                                placeholder=\"display name\"\n                                fullWidth={true}\n                                value={this.state.displayName}\n                            />\n                        </Grid>\n                        <Grid item xs={1} />\n\n                        <Grid item xs={1} />\n                        <Grid item xs={10}>\n                            <div>\n                                <div style={styles.roleBlock}>\n                                    <div style={styles.roleLabel}>category semantics</div>\n                                    <div style={styles.roleArea}>\n                                        {\n                                            this.getSemantics().map((semantic) => {\n                                                return (<Chip key={semantic} color=\"secondary\"\n                                                              style={styles.roleChip}\n                                                              onClick={() => this.removeSemantic(semantic)}\n                                                              label={semantic} variant=\"outlined\" />)\n                                            })\n                                        }\n                                    </div>\n                                </div>\n                                <div style={styles.roleBlock}>\n                                    <div style={styles.roleLabel}>available semantics</div>\n                                    <div style={styles.roleArea}>\n                                        {\n                                            this.getAvailableSemantics().map((semantic) => {\n                                                return (<Chip key={semantic} color=\"primary\"\n                                                              style={styles.roleChip}\n                                                              onClick={() => this.addSemantic(semantic)}\n                                                              label={semantic} variant=\"outlined\" />)\n                                            })\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </Grid>\n                        <Grid item xs={1} />\n\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" onClick={() => this.handleCancel()}>Cancel</Button>\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.handleSave()}>Save</Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nexport default SemanticCategoryEdit;\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport {SemanticCategoryEdit} from \"./semantic-category-edit\";\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"../actions/appActions\";\nimport Api from \"../common/api\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst styles = {\n    tableStyle: {\n        minWidth: '800px',\n        width: '900px',\n    },\n    smallTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '100px',\n    },\n    actionTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '100px',\n    },\n    tableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '300px',\n        width: '400px',\n    },\n    searchTableHeaderStyle: {\n        background: '#555',\n        fontSize: '0.95em',\n        color: '#fff',\n        minWidth: '200px',\n        width: '340px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    label: {\n        padding: '10px',\n        color: '#555',\n    },\n    gridWidth: {\n        width: '900px',\n    },\n    hr: {\n        border: '0.1px solid #f0f0f0',\n        width: '100%',\n    },\n    imageButton: {\n        float: 'right',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    addImage: {\n        width: '25px',\n    },\n    linkButton: {\n        float: 'left',\n        padding: '10px',\n        color: '#888',\n        cursor: 'pointer',\n    },\n    dlImageSize: {\n        width: '24px',\n    },\n    searchBox: {\n        boxShadow: 'none',\n    },\n    search: {\n        marginTop: '2px',\n        marginLeft: '15px',\n        width: '18px',\n        color: '#000',\n    },\n    floatLeftLabel: {\n        float: 'left',\n        marginRight: '6px',\n        marginTop: '4px',\n        fontSize: '0.9em',\n        fontWeight: '500',\n    },\n    searchFloatLeft: {\n        float: 'left',\n    },\n    text: {\n        padding: '4px',\n        width: '280px',\n    },\n    floatLeft: {\n        float: 'left',\n    },\n    manualUploadSection: {\n        marginTop: '50px',\n    },\n    findBox: {\n        padding: '10px',\n        marginBottom: '5px',\n        float: 'right',\n    },\n\n\n};\n\n\nexport class SemanticCategories extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            prevDisplayName: \"\",\n\n            synonym: {},\n            synonym_edit: false,\n\n            openDialog: props.openDialog,\n            closeDialog: props.closeDialog,\n\n            // pagination and filter\n            filter: \"\",\n            page_size: 5,\n            page: 0,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n            openDialog: nextProps.openDialog,\n            closeDialog: nextProps.closeDialog,\n        });\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    changePage(page) {\n        this.setState({page: page});\n    }\n    changePageSize(page_size) {\n        this.setState({page_size: page_size});\n    }\n    deleteDisplayCategoryAsk(synonym) {\n        if (synonym) {\n            this.props.openDialog(\"are you sure you want to remove display category \\\"\" + synonym.displayName + \"\\\"?<br/><br/>(\" + synonym.semanticList.join(\",\") + \")\",\n                                    \"Remove Display Category\", (action) => { this.deleteDisplayCategory(action) });\n            this.setState({synonym: synonym});\n        }\n    }\n    deleteDisplayCategory(action) {\n        if (action && this.state.synonym) {\n            this.props.deleteSemanticDisplayCategory(this.state.synonym.displayName);\n        }\n        if (this.props.closeDialog) {\n            this.props.closeDialog();\n        }\n        this.setState({synonym_edit: false, synonym: {}});\n    }\n    handleSearchTextKeydown(event) {\n        if (event.key === \"Enter\") {\n            this.props.getSemanticDisplayCategories();\n        }\n    }\n    editDisplayCategory(synonym) {\n        this.setState({synonym_edit: true, prevDisplayName: synonym.displayName, synonym: synonym});\n    }\n    newDisplayCategory() {\n        this.setState({synonym_edit: true, prevDisplayName: \"\", synonym: {displayName: \"\", synonymList: []}});\n    }\n    save(displayName, semanticList) {\n        if (Api.defined(displayName) && Api.defined(semanticList)) {\n            if (displayName.trim().length > 0 && semanticList.length > 0) {\n                this.props.saveSemanticDisplayCategory(this.state.prevDisplayName, displayName, semanticList);\n                this.setState({synonym_edit: false, synonym: {}});\n            } else {\n                this.props.setError(\"Error Saving Semantic Display Category\",\n                    \"display-name cannot be empty, and the semantic-list needs at least one item in it.\");\n            }\n        } else {\n            this.setState({synonym_edit: false, synonym: {}});\n        }\n    }\n    // get a list of semantics not yet used by any category\n    getLeftOverSemanticList() {\n        const existing = {};\n        for (const sdc of this.props.semantic_display_category_list) {\n            for (const semantic of sdc.semanticList) {\n                existing[semantic.trim()] = true;\n            }\n        }\n        const list = [];\n        for (const semantic of this.props.defined_semantic_list) {\n            if (!existing[semantic.trim()]) {\n                list.push(semantic.trim());\n            }\n        }\n        return list;\n    }\n    getSemanticDisplayList() {\n        const list = [];\n        const filter = this.state.filter.trim().toLowerCase();\n        let i = 0;\n        let start = this.state.page * this.state.page_size;\n        let end = start + this.state.page_size;\n        for (const item of this.props.semantic_display_category_list) {\n            if (filter.length <= 1 || (filter.length > 1 && item.displayName.toLowerCase().indexOf(filter) >= 0)) {\n                if (i >= start && i < end) {\n                    list.push(item);\n                }\n                i += 1;\n            }\n        }\n        return list;\n    }\n    render() {\n        return (\n            <div>\n                <SemanticCategoryEdit open={this.state.synonym_edit}\n                                      synonym={this.state.synonym}\n                                      definedSemanticList={this.getLeftOverSemanticList()}\n                                      onSave={(displayName, semanticList) => this.save(displayName, semanticList)}\n                                      onError={(err) => this.props.setError(\"Error\", err)} />\n\n                {\n                    this.props.selected_knowledgebase_id && this.props.selected_knowledgebase_id.length > 0 &&\n                    <div>\n                        <div style={styles.searchBox}>\n                            <Grid item xs={12}>\n                                <div style={styles.findBox}>\n                                    <div style={styles.floatLeftLabel}>filter</div>\n                                    <div style={styles.searchFloatLeft}>\n                                        <input type=\"text\" value={this.props.user_filter} autoFocus={true} style={styles.text}\n                                               onKeyPress={(event) => this.handleSearchTextKeydown(event)}\n                                               onChange={(event) => {\n                                                   this.setState({filter: event.target.value})\n                                               }}/>\n                                    </div>\n                                    <div style={styles.floatLeft}>\n                                        <img style={styles.search}\n                                             onClick={() => this.props.getSemanticDisplayCategories()}\n                                             src=\"../images/dark-magnifying-glass.svg\" title=\"filter\" alt=\"filter\"/>\n                                    </div>\n                                </div>\n                            </Grid>\n                        </div>\n\n                        <br clear=\"both\" />\n\n                        <Paper>\n                            <Table style={styles.tableStyle}>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell style={styles.smallTableHeaderStyle}>display name</TableCell>\n                                        <TableCell style={styles.tableHeaderStyle}>synonyms</TableCell>\n                                        <TableCell style={styles.actionTableHeaderStyle}>actions</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {\n                                        this.getSemanticDisplayList().map((synonym) => {\n                                            return (\n                                                <TableRow key={synonym.displayName}>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{synonym.displayName}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.label}>{synonym.semanticList.join(\",\")}</div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div style={styles.linkButton} onClick={() => this.editDisplayCategory(synonym)}>\n                                                            <img src=\"../images/edit.svg\" style={styles.dlImageSize} title=\"edit display category\" alt=\"edit\"/>\n                                                        </div>\n                                                        <div style={styles.linkButton} onClick={() => this.deleteDisplayCategoryAsk(synonym)}>\n                                                            <img src=\"../images/delete.svg\" style={styles.dlImageSize} title=\"remove display category\" alt=\"remove\"/>\n                                                        </div>\n                                                    </TableCell>\n                                                </TableRow>\n                                            )\n                                        })\n                                    }\n                                    <TableRow>\n                                        <TableCell/>\n                                        <TableCell/>\n                                        <TableCell>\n                                            {this.props.selected_knowledgebase_id.length > 0 &&\n                                            <div style={styles.imageButton} onClick={() => this.newDisplayCategory()}><img\n                                                style={styles.addImage} src=\"../images/add.svg\" title=\"new display category\"\n                                                alt=\"new display category\"/></div>\n                                            }\n                                        </TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell colSpan={3}>\n                                            <TablePagination\n                                                rowsPerPageOptions={[5, 10, 25]}\n                                                component=\"div\"\n                                                count={this.props.semantic_display_category_list.length}\n                                                rowsPerPage={this.state.page_size}\n                                                page={this.state.page}\n                                                backIconButtonProps={{\n                                                    'aria-label': 'Previous Page',\n                                                }}\n                                                nextIconButtonProps={{\n                                                    'aria-label': 'Next Page',\n                                                }}\n                                                onChangePage={(event, page) => this.changePage(page)}\n                                                onChangeRowsPerPage={(event) => this.changePageSize(event.target.value)}\n                                            />\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                    </div>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        semantic_display_category_list: state.appReducer.semantic_display_category_list,\n        defined_semantic_list: state.appReducer.defined_semantic_list,\n\n        selected_knowledgebase_id: state.appReducer.selected_knowledgebase_id,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(SemanticCategories);\n\n","import React, {Component} from 'react';\n\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport uiTheme from \"./theme-ui\";\n\nimport AppMenu from './auth/app-menu'\nimport ErrorDialog from './common/error-dialog'\nimport {MessageDialog} from './common/message-dialog'\nimport AutoComplete from './common/autocomplete'\n\nimport Api from './common/api'\nimport Comms from './common/comms'\n\nimport Organisations from \"./organisations/organisations\";\nimport UserManager from \"./users/user-manager\";\nimport KnowledgeBases from \"./kb/knowledge-bases\";\nimport Inventory from './inventory/inventory'\nimport DocumentSources from \"./documents/document-sources\";\nimport Documents from \"./documents/documents\";\nimport Mind from \"./mind/mind\";\nimport MindTest from \"./mind/mind-test\";\nimport Synonyms from \"./synonyms/synonyms\";\nimport Semantics from \"./semantics/semantics\";\nimport SynSets from \"./synsets/synsets\";\nimport Logs from \"./reports/logs\";\nimport Reports from \"./reports/reports\";\nimport OperatorTabs from \"./operator/operator_tabs\";\nimport Domains from \"./ad/domains\";\nimport SynonymCategories from \"./semantics/semantic-categories\";\n\nimport SockJsClient from 'react-stomp';\n\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {appCreators} from \"./actions/appActions\";\n\n// if not defined, use this one\nconst default_operator_wait_timeout_in_ms = 10000;\n\nconst styles = {\n    page: {\n        float: 'left',\n        minWidth: '1200px',\n    },\n    pageNav: {\n        float: 'left',\n        marginRight: '50px',\n        background: '#fdfdfd',\n        borderRadius: '10px',\n        padding: '5px',\n    },\n    pageContent: {\n        float: 'left',\n        marginTop: '10px',\n        minWidth: '700px',\n    },\n    selectedNavItem: {\n        marginLeft: '10px',\n        textAlign: 'center',\n        width: '180px',\n        padding: '10px',\n        cursor: 'pointer',\n        background: '#a0a0a0',\n        color: '#fff',\n        border: '1px solid #666',\n        borderRadius: '2px',\n        marginBottom: '5px',\n    },\n    navItem: {\n        marginLeft: '10px',\n        textAlign: 'center',\n        width: '180px',\n        padding: '10px',\n        border: '1px solid #bbb',\n        cursor: 'pointer',\n        background: '#f8f8f8',\n        color: '#666',\n        borderRadius: '2px',\n        marginBottom: '5px',\n    },\n    navItemDisabled: {\n        marginLeft: '10px',\n        textAlign: 'center',\n        width: '180px',\n        padding: '10px',\n        border: '1px solid #bbb',\n        background: '#f8f8f8',\n        color: '#e0e0e0',\n        borderRadius: '2px',\n        marginBottom: '5px',\n        cursor: 'not-allowed',\n    },\n    organisationSelect: {\n        padding: '5px',\n        marginBottom: '40px',\n    },\n    organisationLabel: {\n        marginTop: '-10px',\n    },\n    knowledgeSelect: {\n        padding: '5px',\n        marginBottom: '50px',\n    },\n    divider: {\n        height: '5px',\n    },\n    lhs: {\n        float: 'left',\n        width: '150px',\n        marginTop: '-10px',\n        color: '#aaa',\n    },\n    rhs: {\n        float: 'left',\n    },\n    notificationParent: {\n        position: 'fixed',\n        left: '4px',\n        right: '1px',\n        bottom: '4px',\n    },\n    notifications: {\n        background: '#fafafa',\n        marginRight: '40px',\n        color: '#333',\n        padding: '16px',\n        zIndex: '101',\n        boxShadow: '0 0 2px 2px',\n        height: '120px',\n        overflowY: 'scroll',\n    },\n    notificationsHidden: {\n        position: 'fixed',\n        left: '0',\n        right: '0',\n        bottom: '2px',\n        padding: '16px',\n        zIndex: '101',\n    },\n    displayAll: {\n        float: 'right',\n        marginRight: '10px',\n    },\n    hideAllImage: {\n        width: '16px',\n    },\n    showAllImage: {\n        width: '16px',\n        marginRight: '-12px',\n    },\n    info: {\n    },\n    infoDate: {\n        display: 'inline-block',\n        width: '200px',\n        marginLeft: '20px',\n        fontSize: '0.8em',\n    },\n    infoType: {\n        display: 'inline-block',\n        width: '100px',\n        fontSize: '0.9em',\n    },\n    infoText: {\n        display: 'inline-block',\n        width: '70%',\n        fontSize: '0.9em',\n    },\n    busy: {\n        display: 'block',\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: '9999',\n        borderRadius: '10px',\n        opacity: '0.8',\n        backgroundSize: '100px',\n        background: \"url('../images/busy.gif') 50% 50% no-repeat rgb(255,255,255)\"\n    },\n};\n\n\nexport class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message_callback: null,\n            message: '',\n            message_title: '',\n        }\n    }\n    componentDidCatch(error, info) {\n        this.props.setError(error, info);\n        console.log(error, info);\n    }\n    componentDidMount() {\n        // do we still have a session?\n        if (!Api.defined(Comms.getSession())) {\n            window.location = \"/\";\n        } else {\n            this.props.getOrganisationList();\n\n            // switch tabs for non admin users to knowledge base default\n            if (!Home.hasRole(this.props.user, ['admin']) && this.props.selected_tab === \"organisations\") {\n                this.props.selectTab('knowledge bases');\n            }\n\n            // /ops/refresh every operator_wait_timeout_in_ms interval\n            const isAdminOrManager = Home.hasRole(this.props.user, ['admin', 'manager']);\n            const isOperator = Home.hasRoleInOrganisation(this.props.user, this.props.selected_organisation_id, ['operator']);\n            const self = this;\n            let timeout = (this.props.operator_wait_timeout_in_ms && this.props.operator_wait_timeout_in_ms >= 1000) ?\n                this.props.operator_wait_timeout_in_ms : default_operator_wait_timeout_in_ms;\n            if (isAdminOrManager || isOperator) {\n                // refresh notifications and operator at interval\n                setInterval(() => { self.refreshOperator(self); }, timeout);\n            }\n\n            if (isOperator) {\n                // if this user has an operator role at all - we need to ask for events\n                if (!this.props.html5_notifications || this.props.html5_notifications.length === 0) {\n                    this.props.getHtml5Notifications();\n                }\n            }\n\n        }\n    }\n    refreshOperator(self) {\n        // keep operator alive if they're active and ready\n        if (self.props.selected_organisation_id.length > 0 &&\n            self.props.operators && self.props.operators.length > 0) {\n            const operatorList = [];\n            for (const op of self.props.operators) {\n                if (op.operator_ready) {\n                    operatorList.push({\"operatorId\": op.id, \"isTyping\": op.is_typing, \"clientId\": op.client_id});\n                }\n            }\n            if (operatorList.length > 0) {\n                const data = {\n                    sessionId: self.props.session.id,\n                    organisationId: self.props.selected_organisation_id,\n                    operatorList: operatorList,\n                };\n                this.props.sendOperatorMessage('/ops/refresh', data);\n            }\n        }\n    }\n    getStyle(tab, disabled) {\n        if (disabled) {\n            return styles.navItemDisabled;\n        }\n        return this.props.selected_tab === tab ? styles.selectedNavItem : styles.navItem;\n    }\n    static getTab(user) {\n        if (Home.hasRole(user, ['admin'])) {\n            return \"organisations\";\n        } else if (Home.hasRole(user, ['manager'])) {\n            return \"users\";\n        } else if (Home.hasRole(user, ['reporter'])) {\n            return \"reports\";\n        } else {\n            return \"invalid\"\n        }\n    }\n    static hasRole(user, role_name_list) {\n        if (user && user.roles) {\n            for (const role of user.roles) {\n                if (role_name_list.indexOf(role.role) >= 0) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static hasRoleInOrganisation(user, organisationId, role_name_list) {\n        if (user && user.roles) {\n            for (const role of user.roles) {\n                if (role.organisationId === organisationId && role_name_list.indexOf(role.role) >= 0) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    // is this user entitle to edit the user passed in?\n    static canEdit(user, isAdmin, isManager) {\n        // admin can edit anyone, always\n        if (isAdmin) return true;\n        // a non admin user can never edit an administrator\n        const userIsAdmin = Home.hasRole(user, ['admin']);\n        if (userIsAdmin) return false;\n        // managers can edit everyone else\n        return isManager;\n    }\n    // is this user entitle to edit the user passed in?\n    static canDelete(user, signedInUser, isAdmin, isManager) {\n        // one cannot delete the signed-in user\n        if (user.email === signedInUser.email) return false;\n        // admin can edit anyone, always\n        if (isAdmin) return true;\n        // a non admin user can never edit an administrator\n        const userIsAdmin = Home.hasRole(user, ['admin']);\n        if (userIsAdmin) return false;\n        // managers can edit everyone else\n        return isManager;\n    }\n    static pad(item) {\n        return (\"\" + item).padStart(2, '0');\n    }\n    static pad2(item) {\n        return (\"\" + item).padStart(3, '0');\n    }\n    getNotifications() {\n        if (this.props.notification_list.length > this.props.notification_list_display_size) {\n            const len = this.props.notification_list.length;\n            const list = JSON.parse(JSON.stringify(this.props.notification_list.slice(len - this.props.notification_list_display_size, len)));\n            return list.reverse()\n        }\n        const list = JSON.parse(JSON.stringify(this.props.notification_list));\n        return list.reverse();\n    }\n    getOrganisationListFiltered(filter_text, callback) {\n        if (filter_text && filter_text.length > 0) {\n            const ft_lower = filter_text.toLowerCase();\n            const filtered_list = [];\n            for (const item of this.props.organisation_list) {\n                if (item.name.toLowerCase().indexOf(ft_lower) >= 0) {\n                    filtered_list.push({'label': item.name, 'data': item.id});\n                }\n            }\n            callback(filtered_list);\n        } else {\n            const filtered_list = [];\n            for (const item of this.props.organisation_list) {\n                filtered_list.push({'label': item.name, 'data': item.id});\n            }\n            callback(filtered_list);\n        }\n    }\n    getKnowledgeBaseListFiltered(filter_text, callback) {\n        if (filter_text && filter_text.length > 0) {\n            const ft_lower = filter_text.toLowerCase();\n            const filtered_list = [];\n            for (const item of this.props.knowledge_base_list) {\n                if (item.name.toLowerCase().indexOf(ft_lower) >= 0) {\n                    filtered_list.push({'label': item.name, 'data': item.kbId});\n                }\n            }\n            callback(filtered_list);\n        } else {\n            const filtered_list = [];\n            for (const item of this.props.knowledge_base_list) {\n                filtered_list.push({'label': item.name, 'data': item.kbId});\n            }\n            callback(filtered_list);\n        }\n    }\n    openDialog(message, message_title, message_callback) {\n        this.setState({dialog_open: true, message: message, message_title: message_title, message_callback: message_callback});\n    }\n    closeDialog() {\n        this.setState({dialog_open: false, message: \"\", message_title: \"\", message_callback: null});\n    }\n    connectionError(error) {\n        this.props.setOperatorConnected(false);\n        this.props.setError(\"Operator Connection\", error);\n    }\n    render() {\n        const isAdmin = Home.hasRole(this.props.user, ['admin']);\n        const isOperator = Home.hasRoleInOrganisation(this.props.user, this.props.selected_organisation_id, ['operator']);\n        const operator_id_list = [];\n        if (this.props.operators) {\n            for (const operator of this.props.operators) {\n                if (operator && operator.id) {\n                    operator_id_list.push('/chat/' + operator.id);\n                }\n            }\n        }\n        return (\n            <ThemeProvider theme={uiTheme}>\n\n                {\n                    this.props.busy &&\n                    <div style={styles.busy} />\n                }\n\n                <AppMenu title=\"\" signed_in={true} />\n\n                <ErrorDialog title={this.props.error_title}\n                             message={this.props.error}\n                             callback={() => this.props.closeError()} />\n\n                <MessageDialog callback={(action) => {if (this.state.message_callback) this.state.message_callback(action)}}\n                               open={this.state.message.length > 0}\n                               message={this.state.message}\n                               title={this.state.message_title} />\n\n                <SockJsClient url={window.ENV.ws_base} topics={operator_id_list}\n                              ref={ (client) => { this.clientRef = client }}\n                              onMessage={(msg) => { this.props.processOperatorMessage(msg) }}\n                              onConnect={() => this.props.setOperatorConnected(true)}\n                              onDisconnect={() => this.props.setOperatorConnected(false)}\n                              onError={(error) => this.connectionError(error)} />\n\n                 <div style={styles.page}>\n\n                     <div style={styles.pageNav}>\n                         {\n                             Home.hasRole(this.props.user, ['admin']) &&\n                             <div style={this.getStyle('organisations', false)} onClick={() => this.props.selectTab('organisations')}>organisations</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('knowledge bases', false)}\n                                  onClick={() => this.props.selectTab('knowledge bases')}>knowledge bases</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('users', false)}\n                                  onClick={() => this.props.selectTab('users')}>user manager</div>\n                         }\n                         {\n                             <div style={this.getStyle('operator', !this.props.operator_connected || !isOperator)}\n                                  onClick={() => { if (isOperator) this.props.selectTab('operator')}}>operator</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('inventory', false)}\n                                  onClick={() => this.props.selectTab('inventory')}>inventory</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('document sources', false)}\n                                  onClick={() => this.props.selectTab('document sources')}>document\n                                 sources</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('documents', false)}\n                                  onClick={() => this.props.selectTab('documents')}>documents</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('active directory', false)}\n                                  onClick={() => this.props.selectTab('active directory')}>active directory</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('mind', false)}\n                                  onClick={() => this.props.selectTab('mind')}>the mind</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('mind-test', false)}\n                                  onClick={() => this.props.selectTab('mind-test')}>test the mind</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('synonyms', false)}\n                                  onClick={() => this.props.selectTab('synonyms')}>synonyms</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('semantics')}\n                                  onClick={() => this.props.selectTab('semantics')}>semantics</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('semantic categories', false)}\n                                  onClick={() => this.props.selectTab('semantic categories')}>semantic categories</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('syn-sets')}\n                                  onClick={() => this.props.selectTab('syn-sets')}>syn-sets</div>\n                         }\n                         {\n                             Home.hasRole(this.props.user, ['admin', 'manager']) &&\n                             <div style={this.getStyle('reports', false)}\n                                  onClick={() => this.props.selectTab('reports')}>reports</div>\n                         }\n                         {/* this doesn't work for k8s clusters */}\n                         {/*{*/}\n                         {/*    Home.hasRole(this.props.user, ['admin']) &&*/}\n                         {/*    <div style={this.getStyle('logs', false)}*/}\n                         {/*         onClick={() => this.props.selectTab('logs')}>logs</div>*/}\n                         {/*}*/}\n                     </div>\n\n                     <div style={styles.pageContent}>\n\n                         {this.props.selected_tab !== 'organisations' && this.props.selected_tab !== 'os' &&\n                          this.props.selected_tab !== 'logs' &&\n                          this.props.selected_tab !== 'operator' && this.props.selected_tab !== 'license' && isAdmin &&\n                             <div style={styles.organisationSelect}>\n                                 <div style={styles.lhs}>organisation</div>\n                                 <div style={styles.rhs}>\n                                     <AutoComplete\n                                         label='organisation'\n                                         value={this.props.selected_organisation}\n                                         onFilter={(text, callback) => this.getOrganisationListFiltered(text, callback)}\n                                         minTextSize={1}\n                                         onSelect={(label, data) => this.props.selectOrganisation(label, data)}\n                                     />\n                                 </div>\n                             </div>\n                         }\n\n                         {this.props.selected_tab !== 'organisations' && this.props.selected_tab !== 'os' &&\n                          this.props.selected_tab !== 'logs' &&\n                          this.props.selected_tab !== 'license' && this.props.selected_tab !== 'operator' && !isAdmin &&\n                             <div style={styles.organisationSelect}>\n                                 <div style={styles.lhs}>organisation</div>\n                                 <div style={styles.rhs}>\n                                     <div style={styles.organisationLabel}>{this.props.selected_organisation}</div>\n                                 </div>\n                             </div>\n                         }\n\n                         {this.props.selected_tab !== 'organisations' && this.props.selected_tab !== 'os' && this.props.selected_tab !== 'users' &&\n                          this.props.selected_tab !== 'operator' && this.props.selected_tab !== 'license' && this.props.selected_tab !== 'knowledge bases' &&\n                          this.props.selected_tab !== 'logs' &&\n                             <div style={styles.knowledgeSelect}>\n                                 <div style={styles.lhs}>knowledge base</div>\n                                 <div style={styles.rhs}>\n                                     <AutoComplete\n                                         label='knowledge base'\n                                         value={this.props.selected_knowledgebase}\n                                         onFilter={(text, callback) => this.getKnowledgeBaseListFiltered(text, callback)}\n                                         minTextSize={1}\n                                         onSelect={(label, data) => {\n                                             this.props.selectKnowledgeBase(label, data);\n                                         }}\n                                     />\n                                 </div>\n                             </div>\n                         }\n\n                         { this.props.selected_tab === 'organisations' &&\n                             <Organisations\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'knowledge bases' &&\n                            <KnowledgeBases\n                                openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'users' &&\n                            <UserManager\n                                openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'operator' &&\n                             <OperatorTabs\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'inventory' &&\n                             <Inventory\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'document sources' &&\n                            <DocumentSources\n                                openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'documents' &&\n                             <Documents\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'active directory' &&\n                             <Domains\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'mind' &&\n                             <Mind\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'mind-test' &&\n                             <MindTest\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'synonyms' &&\n                             <Synonyms\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'semantic categories' &&\n                             <SynonymCategories\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'semantics' &&\n                             <Semantics\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'syn-sets' &&\n                             <SynSets\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'reports' &&\n                             <Reports\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         { this.props.selected_tab === 'logs' &&\n                             <Logs\n                                 openDialog={(message, title, callback) => this.openDialog(message, title, callback)}\n                                 closeDialog={() => this.closeDialog()} />\n                         }\n\n                         {\n                             this.props.selected_tab === 'invalid' &&\n                             <div>You do not have access to this application</div>\n                         }\n\n                     </div>\n\n                 </div>\n\n\n                { this.props.notification_list.length > 0 && this.props.show_notifications &&\n                    <div style={styles.notificationParent}>\n                        <div style={styles.displayAll} onClick={() => { this.props.hideNotifications() }}>\n                            <img src=\"images/double-down-arrow.svg\" style={styles.hideAllImage} alt=\"hide all\" title=\"hide log\" />\n                        </div>\n                        <div style={styles.notifications}>\n                            {\n                                this.getNotifications().map((notification) => {\n                                    console.log(notification);\n                                    return (\n                                        <div key={notification.id} style={styles.info}>\n                                            <div style={styles.infoDate}>{notification.year}/{Home.pad(notification.month)}/{Home.pad(notification.day)}&nbsp;\n                                                {Home.pad(notification.hour)}:{Home.pad(notification.minute)}:\n                                                {Home.pad(parseInt(notification.created / 1000) % 60)}.\n                                                {Home.pad2(notification.created % 1000)}\n                                            </div>\n                                            <div style={styles.infoType}>{notification.service}</div>\n                                            <div style={styles.infoText}>{notification.message}</div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    </div>\n                }\n\n            </ThemeProvider>\n        )\n    }\n}\n\nconst mapStateToProps = function(state) {\n    return {\n        error: state.appReducer.error,\n        error_title: state.appReducer.error_title,\n\n        notification_list: state.appReducer.notification_list,\n        show_notifications: state.appReducer.show_notifications,\n        operator_wait_timeout_in_ms: state.appReducer.operator_wait_timeout_in_ms,\n        notification_list_display_size: state.appReducer.notification_list_display_size,\n\n        busy: state.appReducer.busy,\n\n        user: state.appReducer.user,\n        selected_tab: state.appReducer.selected_tab,\n        session: state.appReducer.session,\n        operator_connected: state.appReducer.operator_connected,\n        operators: state.appReducer.operators,\n\n        organisation_list: state.appReducer.organisation_list,\n        knowledge_base_list: state.appReducer.knowledge_base_list,\n\n        html5_notifications: state.appReducer.html5_notifications,\n\n        selected_organisation: state.appReducer.selected_organisation,\n        selected_organisation_id: state.appReducer.selected_organisation_id,\n        selected_knowledgebase: state.appReducer.selected_knowledgebase,\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    dispatch => bindActionCreators(appCreators, dispatch)\n)(Home);\n\n","import React from 'react';\n// import 'babel-polyfill'\nimport ReactDOM from 'react-dom'\nimport {Provider} from 'react-redux'\nimport {HashRouter} from 'react-router-dom'\nimport {Route} from 'react-router'\n\nimport configureStore from \"./reducers/configureStore\";\nimport {saveState} from \"./reducers/stateLoader\";\n// must not have {} to work\nimport SignIn from './auth/sign_in'\n\nimport ResetPasswordRequest from './auth/reset_password_request'\nimport ResetPasswordResponse from './auth/reset_password_response'\nimport OpenSourceLicenses from './auth/open_source_licenses'\nimport LicenseAgreement from \"./auth/license_agreement\";\n\nimport Home from './home'\n\nconst store = configureStore();\nstore.subscribe(() => {\n    saveState(store.getState());\n});\n\n\nReactDOM.render(\n    <Provider store={store}>\n    <div>\n        <HashRouter basename={'/'}>\n            <div>\n                <Route exact path=\"/\" component={SignIn} />\n                <Route exact path=\"/home\" component={Home} />\n                <Route path=\"/reset-password-request\" component={ResetPasswordRequest} />\n                <Route path=\"/reset-password-response\" component={ResetPasswordResponse} />\n                <Route exact path=\"/os-license\" component={OpenSourceLicenses} />\n                <Route exact path=\"/license-agreement\" component={LicenseAgreement} />\n            </div>\n        </HashRouter>\n    </div>\n    </Provider>,\n    document.getElementById('content')\n);\n"],"sourceRoot":""}